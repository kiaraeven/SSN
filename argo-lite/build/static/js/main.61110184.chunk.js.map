{"version":3,"sources":["stores/PreferencesStore.js","stores/GraphStore.js","stores/ImportStore.js","stores/ProjectStore.js","stores/SearchStore.js","stores/index.js","services/AlgorithmUtils.js","constants/index.js","ipc/client.js","graph-frontend/src/structure/node.js","graph-frontend/include/THREE.MeshLine.js","graph-frontend/src/select.js","graph-frontend/index.js","images/Snoman title.png","images/Snoman logo.png","notifications/client.js","graph-frontend/src/imports.js","graph-frontend/src/process.js","graph-frontend/include/QuickHull.js","graph-frontend/include/ConvexGeometry.js","graph-frontend/include/CSS3DRenderer.js","graph-frontend/include/OrbitControls.js","graph-frontend/src/utils/utils.js","graph-frontend/src/setup.js","graph-frontend/src/addremove.js","graph-frontend/src/highlighting.js","graph-frontend/src/mouse.js","graph-frontend/src/modify.js","graph-frontend/src/draw.js","graph-frontend/src/api.js","graph-frontend/src/update.js","components/PreferencesDialog.jsx","components/utils/Collapsable.jsx","components/utils/CommonItemRenderer.jsx","components/utils/SimpleSelect.jsx","components/PostImportOptions.jsx","components/ImportDialog.jsx","components/GEXFImportDialog.jsx","components/OpenDialog.jsx","components/NewProjectDialog.jsx","components/ProjectDetailDialog.jsx","components/SaveSnapshotDialog.jsx","components/RenameSnapshotDialog.jsx","components/OpenSnapshotDialog.jsx","components/ShareDialog.jsx","components/StatisticsDialog.jsx","components/FilterDialog.jsx","components/HelpDialog.jsx","components/NodeTable.jsx","components/NeighborDialog.jsx","components/DataSheetDialog.jsx","components/Dialogs.jsx","components/ResizableDraggableDialog.jsx","components/panels/GlobalPanel.jsx","components/utils/SwitchCollapsable.jsx","components/panels/SelectionPanel.jsx","components/panels/NodesPanel.jsx","components/panels/EdgesPanel.jsx","components/panels/LabelsPanel.jsx","components/utils/MultiSelects.jsx","components/panels/NodesFilterPanel.jsx","components/Navbar.jsx","components/WorkspaceView.jsx","visualizers/ThreeJSVis.jsx","components/AreaSelect.jsx","components/ReactLeafletToolbar.jsx","components/ZoomMap.jsx","components/Curve.jsx","visualizers/MapView.jsx","components/panels/NodeDetailPanel.jsx","components/panels/SelectionDetail.jsx","components/utils/XYSelect.jsx","components/panels/ScatterPlot.jsx","components/Legends.jsx","components/panels/SelectionActionPanel.jsx","components/StatusBar.jsx","components/panels/ZoomPanel.jsx","components/FloatingCards.jsx","components/panels/StatGroupPanel.jsx","components/Sidebar.jsx","app.jsx","index.js"],"names":["PreferencesStore","_class","_classCallCheck","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_createClass","key","value","requestLoadUserConfig","userConfig","darkMode","this","workspace","workspacePath","requestSaveUserConfig","isRenderOptionsCardHidden","isFilterOptionsCardHidden","isScatterPlotCardHidden","minimapShowing","isStatusBarShowing","isNavbarInMinimalMode","isLegendShowing","appState","graph","frame","hideMiniMap","console","log","_applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","IS_IFRAME_WIDGET","GraphStore","_dec","ref","_dec2","initialGlobalConfig","nodes","colorBy","color","scale","from","to","nominalColor","sizeBy","size","min","max","labelBy","shape","labelSize","labelLength","edges","crossColor","scatterplot","x","y","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_lastSelectedSingleNode","nodesShowingLabels","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","_descriptor33","_descriptor34","_descriptor35","_descriptor36","_descriptor37","_descriptor38","_descriptor39","_descriptor40","_descriptor41","hasGraphLoaded","get","selectedNodes","length","uniq","concat","_toConsumableArray","metadata","nodeProperties","nodeComputed","filter","k","removeList","indexOf","map","u","toLowerCase","split","s","charAt","toUpperCase","substring","join","neighborIDs","j","links","forEach","link","push","fromId","toId","rawGraph","ret","_i","_arr","_step","p","Number","MAX_VALUE","MIN_VALUE","_iterator","_createForOfIteratorHelper","n","done","Math","err","e","f","scales","domain","minMax","range","_this","Set","item","selectedNodeId","setOfNeighborIds","source","source_id","toString","target","target_id","add","node","has","id","_this2","createGraph","isHidden","override","overrides","addNode","label","nodeSizeScale","nodeColorScale","hasNode","addLink","_this3","runInAction","Object","keys","satisfy","fkey","nodePropertyTypes","includes","_objectSpread","nodeids","_this4","_this5","removeNodesByIds","_this6","positions","getPositions","pinnedNodes","Array","getPinnedNodes","global","optionalConfig","snapshot","getSnapshot","noPosition","undefined","noGlobal","noOverride","JSON","stringify","savedStatesStr","savedStates","parse","savedOverrides","Map","entries","_ref","_ref2","_slicedToArray","v","clear","merge","initialNodesShowingLabels","runActiveLayout","paused","smartPause","defaultActive","isActive","startTime","Date","now","smartPaused","nodesToPin","that","process","forEachNode","setPinnedNodes","_this7","graphFrame","Frame","computedGraph","init","display","ee","on","data","menu","MenuFactory","children","MenuItemFactory","onClick","toggleSelectedLabels","text","unpinSelectedNodes","pinSelectedNodes","rightClickedNode","rightClickedNodeId","neighbors","getNeighborNodesFromRawGraph","sort","n1","n2","ids","i","showNodes","ContextMenu","show","left","pageX","top","pageY","averageClusteringCoefficient","connectedComponents","graphDensity","averageDegree","exactGraphDiameter","duration","interactingWithGraph","computed","getOwnPropertyDescriptor","fullNodes","fullEdges","uniqueValue","edgeProperties","snapshotName","action","ImportStore","postImportFilteringOptions","sortedList","setIds","defaultPostImportFilteringOption","selectedPostImportFilteringOption","nodeFile","path","topN","hasColumns","ready","columns","mapping","LonX","LatY","delimiter","edgeFile","createMissing","ProjectStore","SearchStore","_regeneratorRuntime","exports","Op","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","object","reverse","pop","skipTempReset","prev","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","AppState","preferences","import","search","project","window","useToolbartoSelect","loadAndDisplaySnapshotFromStrapi","uuid","convexPolygons","url","BACKEND_URL","fetch","mode","response","json","body","toaster","message","intent","Intent","DANGER","timeout","loadSnapshotFromStrapi","snapshotString","loadImmediateStates","loadAndDisplaySnapshotFromURL","loadSnapshotFromURL","loadInitialSampleGraph","_asyncToGenerator","_callee","hash","_context","location","startsWith","decodeURIComponent","alert","SAMPLE_GRAPH_SNAPSHOTS","saveSnapshotToString","saveImmediateStates","addEventListener","event","autorun","hasGraph","selection","updateGraph","setAllNodesShapeWithOverride","setLabelRelativeSize","setLabelLength","updateSelectionOpacity","clearSelection","pinNodes","updatePositions","showLabels","searchStr","runSearch","panelOpen","candidates","splice","highlightNodeIds","file","selectedEdgeFileFromInput","hasHeader","importConfig","reader","FileReader","readAsText","onload","lines","topLinesAsString","l","trim","it","comment","auto_parse","skip_empty_lines","_unused","onerror","selectedNodeFileFromInput","_unused2","jsnx","require","jsgraphs","jsnxGraph","Graph","addNodesFrom","addEdgesFrom","convertToJsnx","averageClustering","ConnectedComponents","idDict","g","addEdge","convertToJSGraph","componentCount","nodeCount","sum","degree","temp","WeightedDiGraph","Edge","convertToJSGraphWeightedDi","jsg","dia","dijkstra","Dijkstra","hasPathTo","pathLength","pathTo","parent","FRONTEND_URL","LOGO_URL","GITHUB_URL","MOBILE_WIDTH_CUTOFF","MOBILE_HEIGHT_CUTOFF","SCALE_LINEAR","SCALE_LOG","SCALE_CATEGORY","_scales","_defineProperty","LOAD_USER_CONFIG","LOADED_USER_CONFIG","SAVE_USER_CONFIG","SAVED_USER_CONFIG","FETCH_WORKSPACE_PROJECTS","FETCHED_WORKSPACE_PROJECTS","MENU_NEW_PROJECT","CREATE_NEW_PROJECT","CREATED_NEW_PROJECT","DELETE_FILE","RENAME_FILE","LOAD_GRAPH_JSON","LOAD_GRAPH_SQLITE","LOADED_GRAPH_JSON","LOAD_TOAST_KEY","SAVE_GRAPH_JSON","SAVE_GRAPH_SQLITE","SAVED_GRAPH_JSON","SAVE_TOAST_KEY","MENU_LOAD","MENU_IMPORT_CSV","MENU_SAVE_GRAPH_STATE","MENU_SAVE_GRAPH_STATE_TO_PROJECT","MENU_SAVE_GRAPH_SQLITE","SAVE_GRAPH_STATE","SAVED_GRAPH_STATE","SAVE_GRAPH_STATE_TO_PROJECT","SAVED_GRAPH_STATE_TO_PROJECT","LOAD_GRAPH_STATE","LOADED_GRAPH_STATE","SHOW_ITEM_IN_FOLDER","SHOW_WORKSPACE_FOLDER","CHANGE_WORKSPACE_FOLDER","CHANGED_WORKSPACE_FOLDER","CHOOSE_EDGE_FILE","CHOSEN_EDGE_FILE","CHOOSE_NODE_FILE","PEAKED_NODE_FILE","CHOSEN_NODE_FILE","CHOOSE_GRAPH_FILE","CHOSEN_GRAPH_FILE","CHOOSE_STATE_FILE","CHOSEN_STATE_FILE","NODE_AND_EDGE_FILE","ONLY_EDGE_FILE","GRAPH_AND_STATE_FILE","ONLY_GRAPH_FILE","IMPORT_GRAPH","IMPORTED_GRAPH","OPEN_GRAPH","OPENED_GRAPH","SEARCH_REQUEST","SEARCH_RESPONSE","ADD_NODES","ADD_SELECT_NODE","ADD_NODE","GET_NEIGHBORS","ipcRenderer","eventString","registerIPC","node_id","requestChooseGraphFile","requestChooseStateFile","requestOpen","graphFile","stateFile","requestDelete","filePath","requestImportGraphFromCSV","hasNodeFile","newProjectName","loading","toJS","_x6","_importGraphFromCSV","apply","arguments","importGraphFromCSV","postImportFilter","setUpFrame","dialogOpen","showMiniMap","turnOffLabelCSSRenderer","requestImportGraphFromGexf","_importGraphFromGexf","importGraphFromGexf","gexfDialogOpen","readCSV","_x","_x2","_x3","_readCSV","fileObject","content","msg","replace","parseGEXF","_x4","_parseGEXF","_callee2","parser","xmlDoc","xmlEdges","xmlNodes","xmlAttri","nodeAttri","edgesArr","nodesArr","nodeAttriOrdered","curr","_l","_curr","_i2","_l2","currEdge","t","_i3","_l3","currNode","nodeAttvalues","nodeAttvalue","attributeIdElementAttribute","attributeId","_j","currAttri","_context2","DOMParser","parseFromString","getElementsByTagName","getAttribute","_readOnlyError","pagerank","attributes","readGEXF","_x5","_readGEXF","_callee3","_context3","_callee4","config","degreeDict","edgesSet","calDistanceFromLatLonInKm","calMedianCenter","shortestPathPairs","pathsArr","rank","nodekeyList","_context4","parseInt","parseFloat","centrality","fromlocLatY","fromlocLonX","tolocLatY","tolocLonX","withinState","withinFamily","edgeKey","getNode","GEOID","Family","lat1","lon1","lat2","lon2","c","cos","a","asin","sqrt","avgLat","avgLon","latlist","lonlist","average","array","reduce","b","medianCenter","result1","half","floor","medianLat","medianLon","pathFinder","aGreedy","pathsSet","fromnode","tonode","pathKey1","pathKey2","find","pageRank","valuea","el","minv","maxv","paths","_callee5","gexfParsed","_context5","selectedGexfFileFromInput","searchOrder","fetchWorkspaceProjects","requestCreateNewProject","projectMetadata","$","Node","index","in","out","renderData","domainData","vx","vy","connectedTo","outNodeIds","outNode","inArray","connectNode","THREE","memcpy","src","srcOffset","dst","dstOffset","subarray","buffer","set","MeshLine","previous","side","width","indices_array","uvs","counters","geometry","BufferGeometry","widthCallback","setGeometry","Geometry","vertices","z","Float32Array","compareV3","aa","ab","copyV3","w","position","copyArray","needsUpdate","uv","Uint16Array","BufferAttribute","addAttribute","setIndex","advance","MeshLineMaterial","parameters","check","d","Material","lineWidth","useMap","Color","opacity","resolution","Vector2","sizeAttenuation","near","far","dashArray","useDash","visibility","alphaTest","material","RawShaderMaterial","uniforms","vertexShader","fragmentShader","setValues","copy","def","default","OrbitControls","d3","module","selectNode","dragging","isSelected","updateSelection","mouseX","mouseY","NODE_NO_HIGHLIGHT","draw_object","visible","textHolder","element","hideme","getEdgeWithinSelection","withinEdges","linkObjs","getEdgeWithinSelectionForDensity","edgekeys","key1","key2","updateDegreeHistOpacity","degreehighlight","colorByDistance","dist","colorNode","colorNodeOpacity","lineIndices","linecolor","r","red","blue","green","arrow","setRGB","colorNodeEdge","highlightClickNode","neighborNodes","getNeighborNodesFromGraph","nodeNeighbor","froms","tos","diffx","diffy","clickedNode","pinnedx","pinnedy","mapClicked","highlightNode","highlightEdges","fx","fy","checkSelection","mouseEnd","Vector3","mouseStart","right","npos","options","layout","force","getNodePosition","insideBox","posx","posy","balancedBinTree","Argo","Toaster","Position","TOP","STATS","STATS_SHOW","NODE_COLOR","NODE_HIGHLIGHT","ADJACENT_HIGHLIGHT","SEARCH_HIGHLIGHT","NODE_HTEXTURE","NODE_TEXTURE","NODE_NO_HTEX","NODE_NO_TEX","NODE_NO_HCOLOR","NODE_NO_COLOR","NODE_NEIGHBOR_HIGHLIGHT","NODE_SHAPE","NODE_HSHAPE","NODE_SIZE","HIGHLIGHT_SIZE","LAYOUT","LINES","MAP","MAP_RENDER_PER_NUMBER_OF_FRAME","TEXT_SCALE","TEXT_SIZE","TEXT_X_OFFSET","TEXT_Y_OFFSET","TEXT_BACK_COLOR","TEXT_OPACITY","TEXT_WIREFRAME","PIN_COLOR","spawn","inGraph","layout_options","graphLayout","lineObjects","MAX_LINES","textureLoader","TextureLoader","crossOrigin","oldIntersect","fov","showBox","renderWidth","renderHeight","maxZoom","mouseDown","layoutInit","relativeFontSize","mapShowing","mapRenderPerNumberOfFrame","lastNode","doHighlightNeighbors","prevHighlights","hull","stats","showPanel","document","appendChild","dom","animate","begin","controls","update","render","end","requestAnimationFrame","renderer","WebGLRenderer","alpha","antialias","preserveDrawingBuffer","minimapRenderer","setDisplayParams","setRendererParams","setupCamera","setupMinimap","setupGeometry","setupSelect","innerHTML","domElement","cssRenderer","setupLayout","setupGraph","preventDefault","onWindowResize","clientRect","getBoundingClientRect","height","minimap","aspect","ccamera","updateProjectionMatrix","setSize","stage","numberOfFrameSinceMiniMapRerender","updateCamera","updateNodes","updateLabels","updateEdges","forceLink","restart","tickToStatic","ceil","alphaMin","alphaDecay","tick","setViewport","setScissor","setScissorTest","scene","camera","QuickHull","tolerance","faces","newFaces","assigned","VertexList","unassigned","Face","normal","midpoint","area","constant","outside","edge","HalfEdge","vertex","face","twin","VertexNode","point","head","tail","assign","setFromPoints","points","isArray","makeEmpty","compute","setFromObject","updateMatrixWorld","traverse","isGeometry","clone","applyMatrix4","matrixWorld","isBufferGeometry","attribute","count","fromBufferAttribute","addVertexToFace","append","insertBefore","removeVertexFromFace","remove","removeAllVerticesFromFace","start","removeSubList","deleteFaceVertices","absorbingFace","faceVertices","appendChain","nextVertex","distanceToPoint","resolveUnassignedPoints","isEmpty","first","maxDistance","maxFace","distance","computeExtremes","minVertices","maxVertices","getComponent","setComponent","EPSILON","abs","computeInitialHull","line3","plane","closestPoint","Line3","Plane","v0","v1","v2","v3","extremes","closestPointToPoint","distanceToSquared","setFromCoplanarPoints","getEdge","setTwin","reindexFaces","activeFaces","nextVertexToAdd","eyeVertex","eyeFace","computeHorizon","eyePoint","crossEdge","horizon","twinEdge","oppositeFace","addAdjoiningFace","horizonEdge","addNewFaces","firstSideEdge","previousSideEdge","sideEdge","addVertexToHull","cleanup","e0","e1","e2","triangle","Triangle","dot","distanceTo","lengthSquared","last","insertAfter","ConvexGeometry","fromBufferGeometry","ConvexBufferGeometry","mergeVertices","normals","Float32BufferAttribute","CSS3DObject","Object3D","style","parentNode","removeChild","CSS3DSprite","CSS3DRenderer","_width","_height","REVISION","matrix","Matrix4","cache","objects","createElement","overflow","WebkitTransformStyle","MozTransformStyle","oTransformStyle","transformStyle","cameraElement","epsilon","getObjectCSSMatrix","elements","setClearColor","isPaused","getSize","tan","degToRad","getEffectiveFOV","WebkitPerspective","MozPerspective","oPerspective","perspective","matrixWorldInverse","getInverse","getCameraCSSMatrix","WebkitTransform","MozTransform","oTransform","transform","renderObject","transpose","copyPosition","cachedStyle","enabled","minDistance","Infinity","minZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","LEFT","UP","RIGHT","BOTTOM","SPACE","mouseButtons","ORBIT","MOUSE","ZOOM","MIDDLE","PAN","target0","position0","zoom0","zoom","spacePan","bothPan","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","scope","dispatchEvent","changeEvent","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","makeSafe","radius","panOffset","setFromSpherical","lookAt","zoomChanged","EPS","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","Spherical","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","objectMatrix","setFromMatrixColumn","multiplyScalar","panUp","pan","deltaX","deltaY","PerspectiveCamera","targetDistance","clientHeight","OrthographicCamera","clientWidth","bottom","warn","dollyIn","dollyScale","mousePos","dollyOut","handleMouseDownPan","clientX","clientY","button","handleMouseDownRotate","handleMouseDownDolly","subVectors","handleMouseMoveRotate","handleMouseMoveDolly","spacePanStart","handleMouseMovePan","stopPropagation","handleMouseWheel","keyCode","handleKeyDown","touches","handleTouchStartRotate","dx","dy","handleTouchStartDolly","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveDolly","handleTouchMovePan","handleKeyUp","EventDispatcher","defineProperties","center","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","relMouseCoords","currentElement","totalOffsetX","totalOffsetY","offsetLeft","scrollLeft","offsetTop","scrollTop","offsetParent","prepNode","nodeToAdd","hex","hcolor","exec","numYeast","random","tsize","make1x1Rect","rectShape","Shape","moveTo","lineTo","ShapeGeometry","make2x2Rect","volToRadius","volume","createNGraph","setupNgraphLayout","setupD3Layout","forceSimulation","forceManyBody","strength","forceY","forceX","velocityDecay","getElementById","containerDiv","querySelector","offsetWidth","offsetHeight","offsetBottom","zIndex","setPixelRatio","devicePixelRatio","oldCoords","panToMousePosition","coordX","coordY","coefficient","Scene","Group","setupFancyEdges","setUpSimpleEdges","rect","setupSelectionBox","setupBoundaries","setupViewPort","colors","LineGeometry","setPositions","setColors","matLine","LineMaterial","linewidth","vertexColors","dashed","alphaToCoverage","line","Line2","computeLineDistances","LineBasicMaterial","VertexColors","shading","FlatShading","LineSegments","frustumCulled","directedArrows","arrowMaterial","MeshBasicMaterial","Mesh","arrowPositions","arrowColors","drawCount","selectBox","Line","boundaries","setBoundarySize","viewPort","setViewPortSize","computeBoundingSphere","setupMouseHandlers","callback","coords","mousePosition","unproject","dir","normalize","isMouseCoordinatesOnMinimap","raycaster","Raycaster","pos","onRightClick","which","focus","onRightClickCoords","callMouseHandler","intersects","intersectObjects","nodeIndex","ctrlKey","mouseHandler","graphNode","drawNode","removeNode","removeGraphEdges","undrawEdges","undrawNode","nodeLinks","getLinks","removeLink","hidden","killed","locdata","drawEdge","toggle","highlightNeighbors","highlightPathEdgeNode","pathnode","_loop","op","setHex","ctrl","leftMouseDown","onHover","lastHover","currentlyHovered","endTime","oldStartTime","clickDifference","doubleClicked","newNodeIds","thenode","emit","setUniformNodeSize","hsize","setNodeDataSize","dataValue","dataVal","setUniformNodeColor","hsvDegree","setNodeDataColor","mapNodeAttributes","mod","attr","changeLabelFontSize","changeLabelLength","changeNodes","changeNode","numChars","relativeSize","fontSize","createHighlightMesh","texture","hshape","hgeometry","CircleGeometry","createHighlightDrawObject","getNodeSize","hmaterial","transparent","highlight","createNodeMesh","createNodeDrawObject","createPinMesh","pinMesh","createNodeLabel","wireframe","wireframeLinewidth","DoubleSide","PlaneGeometry","textMesh","createAndSetupLabelTextMesh","createAndSetupLabelDiv","createAndSetupTextHolder","bbox","Box3","createLabelDiv","createLabelDivElement","createTextNode","textElement","createLabelTextElement","backgroundColor","textOverflow","userSelect","whiteSpace","setupNodeDrawObject","htexture","onTextureLoad","load","himage","image","bind","hexToRGB","getDistanceFromLatLonInKm","edgeDist","hide","updateColorsAndPositions","setTimeout","v1pos","v2pos","v1color","v2color","setMouseMode","mouseMode","isMouseModeMove","pauseLayout","pause","resumeLayout","mapSelectedNodes","mapAllNodes","setLabelFontSize","querySelectorAll","toggleMiniMap","turnOnLabelCSSRenderer","updateNodesShowingLabels","toggleLabels","showSelectedLabels","hideSelectedLabels","hideLabels","hideAllLabels","showAllLabels","setCanvasSize","setAllNodesShape","setNodeShape","getNumSelected","getNodesCount","toggleDark","updateViewPortEdgeColor","getGraph","getNodeList","getEdgeList","forEachLink","poses","getPinPositions","alias","toggleAlias","setLastNode","dragLastNode","lowerRes","toggleNeighborHighlight","removeSelected","getSelected","getSelectedIds","setDrawRange","total","arrowPosition","directedOrNot","midPointX","midPointY","dX","dY","radianDegree","atan","tempXCorner","tempYCorner","sin","degreeDifference","thisNode","step","oldNode","updateNode","getLink","newNode","childNodes","innerText","PreferencesDialog","observer","_React$Component","_inherits","_super","_createSuper","React","Dialog","iconName","className","classnames","Classes","DARK","isOpen","onClose","title","Switch","checked","onChange","saveUserConfig","Button","PRIMARY","Component","onToggle","LARGE","FILL","MINIMAL","rightIconName","Collapse","handleClick","MenuItem","ACTIVE","items","onSelect","_ref$fill","fill","Select","itemRenderer","CommonItemRenderer","filterable","onItemSelect","PostImportOptions","SimpleSelect","selected","PreviewTable","props","Table","numRows","selectedRegions","rows","cols","Column","renderCell","Cell","ImportDialog","_class2","_React$Component2","_super2","changeAvailable","targetValue","setState","available","canImport","renderNodesSelection","Collapsable","nodesOpen","CONTROL_GROUP","margin","lineHeight","INPUT_GROUP","DISABLED","files","sytle","padding","renderEdgesSelection","edgesOpen","disabled","newDelimiter","updateDelimiter","Spinner","DIALOG_BODY","renderDelimiterSelection","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","createdDate","toLocaleString","GEXFImportDialog","renderImportButton","OpenDialog","renderSelectGraph","INPUT","placeholder","readOnly","renderSelectState","selectedGraph","selectedState","openDialogOpen","NewProjectDialog","isNewProjectNameDuplicate","projects","some","isNewProjectNameEmpty","isValidated","isNewProjectDialogOpen","ProjectDetailDialog","currentProject","isProjectDetailDialogOpen","hasGraphData","Card","interactive","elevation","ELEVATION_TWO","graphDataPath","Icon","snapshotPaths","snapshotPath","BUTTON","INTENT_PRIMARY","currentSnapshotName","SaveSnapshotDialog","isSaveSnapshotDialogOpen","stringCopyOfSnapshot","select","execCommand","isRenameSnapshotDialogOpen","OpenSnapshotDialog","selectedFile","openSnapshotDialogOpen","fileAsString","uuidv4","ShareDialog","isShared","isFetching","sharedURL","selectedContinue","handleRequest","_assertThisInitialized","_handleRequest","backendURL","headers","referrer","ok","shareDialogOpen","marginRight","marginBottom","marginTop","resize","dangerouslySetInnerHTML","__html","StatisticsDialog","statisticsDialogOpen","TABLE","toFixed","density","diameter","components","FilterDialog","filterDialogOpen","HelpDialog","helpDialogOpen","NodeTable","sortBy","sortOrder","filteredNodes","n1val","n2val","n1valAsNum","n2valAsNum","n1valAsString","n2valAsString","localeCompare","nodeAttributesOrig","allPropertiesKeyList","hideNodes","NeighborDialog","showMoreBy","showMoreNum","lastSelectedSingleNode","neighborDialogOpen","minWidth","ButtonGroup","numberToShow","attributeName","hiddenNodes","showNMoreByAttribute","NumericInput","onValueChange","valAsNumber","valAsString","DataSheetDialog","dataSheetDialogOpen","Dialogs","ResizableDraggableDialog","documentElement","innerWidth","innerHeight","Rnd","bounds","RenameSnapshotDialog","GlobalPanel","timeOutRef","sizeOptionOpen","colorOptionOpen","shapeOptionOpen","CARD","float","filterKeyList","Popover2","placement","modifiers","preventOverflow","backgroundImage","SketchPicker","x1","y1","x2","y2","stopColor","stopOpacity","RangeSlider","stepSize","labelStepSize","pluralize","ALIGN_RIGHT","SelectionPanel","twoLayerUpdate","nodeId","nodeAttrs","delete","batchTwoLayerUpdate","labelOptionOpen","SwitchCollapsable","overrideConfig","Slider","class","NodesPanel","_len","args","_key","getRenderedNodes","EdgesPanel","directionOptionOpen","thicknessOptionOpen","LabelsPanel","marginLeft","tag","tagprops","MultiSelect","popoverProps","popoverClassName","targetTagName","resetOnSelect","tagRenderer","selectedItems","tagInputProps","NodesFilterPanel","MultiSelects","selectit","filterNodes","onRemove","onRelease","_ref3","_ref4","RegularNavbar","runcommunity","querydict","axios","post","communityDict","modularity","community","findcliques","cliques","convexhull","group","jsondata","convexDict","isconvex","multipolygon","density_distance","densityDistance","groupby","NAVBAR","NAVBAR_GROUP","ALIGN_LEFT","href","argologo_dark","argologo_light","NAVBAR_HEADING","Popover","Menu","sample","sampleSnapshotTitle","sampleSnapshotStrapiUuid","MenuDivider","forceUpdate","NAVBAR_DIVIDER","setInterval","timeNow","Tooltip","turnOnMinimalMode","textDecoration","FontAwesomeIcon","icon","faGithub","MinimalNavbar","_class4","role","turnOffMinimalMode","NavbarSelector","_class5","_React$Component3","_super3","WorkspaceView","textAlign","ThreeJSVis","AreaSelect","useEffect","selectArea","enable","edgeselection","toBBoxString","L","rectangle","weight","selectionNode","contains","latLng","getBounds","pad","setValidate","layerPoint","_map","layerPointToLatLng","ZoomMap","useMemo","nodeLoc","latLngBounds","extend","fitBounds","MapClick","useMapEvents","click","Curve","useLeafletContext","curve","container","layerContainer","addLayer","removeLayer","MapView","dec2hexString","dec","substr","onMouseOut","setEdgePathOption","mapEdgeShow","edgeSelectionID","pathHovered","nodesSelectedID","setNodeCircle","setNodePathOption","degreeselection","fillColor","fillOpacity","stroke","degreebrushed","convexNodes","neighborNodesID","selectedNeighborIDs","setPolygonPath","polygon","pi","convexPolygonsShow","distanceDensityCurrentlyClicked","onCreate","edgesOfNodes","flex","Tag","MapContainer","LayersControl","BaseLayer","TileLayer","Overlay","GeoJSON","statejsonfile","countyjsonfile","congressionjsonfile","Pane","edgepositions","polygonlist","Polygon","pathOptions","CircleMarker","eventHandlers","originalEvent","view","DomEvent","mouseover","mouseout","direction","permanent","defaultChecked","autoZoom","NodeDetail","TABLE_STRIPED","nodeAttributeValue","num","toPrecision","formatLongFloat","SelectionDetail","allwidth","allheight","brushmargin","brushwidth","distBinData","degreeBinData","edgeSelection","SelectionDistanceFromLatLonIn","selectNodes","edgeDistance","uniqEdgeSelection","SelectionDensity","nodelength","onEdgeBrushStart","sourceEvent","onEdgeBrush","onEdgeBrushEnd","selectionRectID","rects","edgesvg","selectAll","brushBounds","each","rectx","filterDistBin2","distbuffer_min","mind","distbuffer_max","maxd","filteredge","renderEdgeBrush","SVGBrush","extent","getEventMouse","_this$edgesvg$getBoun","brushType","onBrushStart","onBrush","onBrushEnd","onDegreeBrushStart","onDegreeBrush","_ref5","onNoNodeDegreeBrushEnd","_ref6","degreesvg","x0","y0","filterdegreeBin2","degreebuffer_min","degreebuffer_max","onSelectDegreeBrushEnd","_ref7","renderNoNodeDegreeBrush","_this$degreesvg$getBo","renderSelectDegreeBrush","_this$degreesvg$getBo2","prevTick","maxDegreeDict","maxDegreeCount","maxDistanceCount","input","text-anchor","fontSizeAdjust","Histogram","ariaLabel","orientation","cumulative","normalized","binCount","valueAccessor","datum","binType","BarSeries","animated","rawData","XAxis","numTicks","tickLabelProps","YAxis","tickFormat","ti","ScatterPlot","cr","maxhop","formatXtext","infinityhop","downloadCSV","column1","column2","header","csvarray","selectionNodeID","circles","svg","nodecx","nodecy","renderBrush","_this$svg$getBounding","createRef","scaleLinear","shortpathhop","pathlen","scalePoint","pairdistance","XYSelect","allComputedPropertiesKeyList","RenderCircles","Axis","axis","axisBottom","axisLeft","svgsaver","SvgSaver","asSvg","CSVLink","asyncOnClick","filename","refs","setScatterStyle","ni","String","renderCircles","cluster","ci","cx","cy","onMouseOver","_e$target$getAttribut","_e$target$getAttribut2","sourceid","targetid","onMouseLeave","_e$target$getAttribut3","_e$target$getAttribut4","dataset","SelectionActionPanel","StatusBar","numHiddenNodes","numHiddenNeighbor","WARNING","ZoomPanel","RenderOptionsCard","Tabs2","Tab2","panel","Expander","FilterOptionsCard","_class3","FloatingCards","optionsVisible","optionsInvisible","sideButtonVis","sideButtonInv","toggleOptions","filtersVisible","filtersInvisible","filterSideButtonVis","filterSideButtonInv","filterToggleOptions","scatterVisible","scatterInvisible","scatterSideButtonVis","scatterSideButtonInv","scatterToggleOptions","ELEVATION_2","justifyContent","alignItems","numCandidates","INTERACTIVE","pageNum","allCands","nPerPage","pointerEvents","cursor","pages","maxPage","paddingTop","paddingRight","paddingBottom","Legends","StatGroupPanel","fromCharCode","convexhullby","Sidebar","cityName","getElementsByClassName","SidebarMenu","openCity","FocusStyleManager","onlyShowFocusOnTabs","loadUserConfig","DELETE","Keys","BACKSPACE","P","U","respondToResize","App","keydown","resizer","leftSide","previousElementSibling","rightSide","nextElementSibling","upHeight","mouseMoveHandler","newLeftHeight","mouseUpHandler","removeProperty","leftWidth","newLeftWidth","maxWidth","ReactDOM"],"mappings":"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A,GACA,2BACA,2BACA,uBACA,wBACA,yBACA,qBACA,4BACA,GACA,iCACA,gCACA,2BACA,2BACA,sBACA,yBACA,sBACA,qBACA,iCACA,GACA,oBACA,uBACA,0BACA,2BACA,GACA,qCACA,GACA,6BACA,uBACA,2BACA,kBACA,GACA,IACA,GACA,gBACA,GACA,kDACA,2EACA,GACA,uCACA,gBACA,GACA,mDACA,sDACA,gDACA,4CACA,GACA,oDACA,2CACA,2CACA,GACA,2DACA,sDACA,GACA,oCACA,uCACA,QACA,GACA,gBACA,mEACA,wEACA,aACA,qDACA,qDACA,0CACA,GACA,+CACA,8CACA,6EACA,GACA,QACA,GACA,2EACA,2CACA,0BACA,wBACA,GACA,qDACA,qCACA,GACA,iEACA,mCACA,GACA,KA0EiCjsB,KAAK,QACtCksB,eAxEyB,CACzB,kDACA,2BACA,GACA,yBACA,wBACA,yBACA,0BACA,4BACA,2BACA,GACA,oBACA,uBACA,0BACA,2BACA,GACA,gBACA,GACA,uBACA,oCACA,qDACA,0BACA,SACA,OACA,wBACA,mDACA,KA8CqClsB,KAAK,UAoB5C,cAjBO6qB,EAAWI,iBACXJ,EAAWrrB,WACXqrB,EAAWK,cACXL,EAAW7uB,aACX6uB,EAAWO,eACXP,EAAWQ,kBACXR,EAAWU,uBACXV,EAAWW,YACXX,EAAWY,WACXZ,EAAWa,iBACXb,EAAWe,kBACXf,EAAWgB,UAElBC,EAAS1e,KAAO,mBAEhB0e,EAASK,UAAUtB,GAEZiB,GAGTxD,EAAMsC,iBAAiB1vB,UAAYuI,OAAOoJ,OAAOyb,EAAM0C,SAAS9vB,WAChEotB,EAAMsC,iBAAiB1vB,UAAUgW,YAAcoX,EAAMsC,iBAErDtC,EAAMsC,iBAAiB1vB,UAAUkxB,KAAO,SAASjqB,GAa/C,OAZAmmB,EAAM0C,SAAS9vB,UAAUkxB,KAAK/e,KAAKrT,KAAMmI,GAEzCnI,KAAKixB,UAAY9oB,EAAO8oB,UACxBjxB,KAAKwF,IAAM2C,EAAO3C,IAClBxF,KAAKkxB,OAAS/oB,EAAO+oB,OACrBlxB,KAA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","file":"static/js/main.61110184.chunk.js","sourcesContent":["import { observable, action } from \"mobx\";\r\nimport { requestLoadUserConfig, requestSaveUserConfig } from \"../ipc/client\";\r\nimport { IS_IFRAME_WIDGET } from \"../constants\";\r\n\r\nexport default class PreferencesStore {\r\n  @observable dialogOpen = false;\r\n\r\n  @observable openDialogOpen = false;\r\n  @observable openSnapshotDialogOpen = false;\r\n  @observable shareDialogOpen = false;\r\n  @observable statisticsDialogOpen = false;\r\n  @observable filterDialogOpen = false;\r\n  @observable helpDialogOpen = false;\r\n  @observable neighborDialogOpen = false;\r\n  @observable dataSheetDialogOpen = false;\r\n  @observable isRenderOptionsCardHidden = IS_IFRAME_WIDGET;\r\n  @observable isFilterOptionsCardHidden = true;\r\n  @observable isScatterPlotCardHidden = true;\r\n  @observable isScatterPlotDialogOpen = false;\r\n\r\n  // The following fields are asynchronously loaded.\r\n  // Any writes to these fields through saveUserConfig\r\n  // won't be active until the app exits and starts\r\n  // next time.\r\n\r\n  @observable darkMode = false;\r\n  @observable minimapShowing = false;\r\n  @observable isStatusBarShowing = !IS_IFRAME_WIDGET;\r\n  @observable isNavbarInMinimalMode = IS_IFRAME_WIDGET;\r\n  @observable isLegendShowing = !IS_IFRAME_WIDGET;\r\n\r\n  @observable workspacePath = '';\r\n\r\n  // This is called at the beginning of the app.\r\n  loadUserConfig() {\r\n    requestLoadUserConfig();\r\n  }\r\n\r\n  saveUserConfig() {\r\n    const userConfig = {\r\n      darkMode: this.darkMode,\r\n      workspace: this.workspacePath,\r\n    }\r\n\r\n    requestSaveUserConfig(userConfig);\r\n  }\r\n\r\n  turnOnMinimalMode() {\r\n    this.isRenderOptionsCardHidden = true;\r\n    this.isFilterOptionsCardHidden = true;\r\n    this.isScatterPlotCardHidden = true;\r\n    this.minimapShowing = false;\r\n    this.isStatusBarShowing = false;\r\n    this.isNavbarInMinimalMode = true;\r\n    this.isLegendShowing = false;\r\n    if (appState.graph.frame) {\r\n      appState.graph.frame.hideMiniMap();\r\n    } else {\r\n      console.log(\"Frame not ready when trying to toggle minimap.\");\r\n    }\r\n    \r\n  }\r\n\r\n  turnOffMinimalMode() {\r\n    this.isRenderOptionsCardHidden = false;\r\n    this.isFilterOptionsCardHidden = true;\r\n    this.isScatterPlotCardHidden = true;\r\n    this.minimapShowing = false;\r\n    this.isStatusBarShowing = true;\r\n    this.isNavbarInMinimalMode = false;\r\n    this.isLegendShowing = true;\r\n    // if (appState.graph.frame) {\r\n    //   appState.graph.frame.showMiniMap();\r\n    // } else {\r\n    //   console.log(\"Frame not ready when trying to toggle minimap.\");\r\n    // }\r\n  }\r\n}","import { observable, computed, action, runInAction } from \"mobx\";\r\nimport createGraph from \"ngraph.graph\";\r\nimport { scales } from \"../constants/index\";\r\nimport uniq from \"lodash/uniq\";\r\nimport { averageClusteringCoefficient, connectedComponents, graphDensity, averageDegree, exactGraphDiameter } from \"../services/AlgorithmUtils\";\r\nimport { ContextMenu, MenuFactory, MenuItemFactory } from \"@blueprintjs/core\";\r\nimport { Frame } from \"../graph-frontend\";\r\nimport appState from '../stores';\r\n\r\nexport default class GraphStore {\r\n\r\n  initialGlobalConfig = {\r\n    nodes: {\r\n      colorBy: \"degree\",\r\n      color: {\r\n        scale: \"Linear Scale\",\r\n        from: \"#448AFF\",\r\n        to: \"#E91E63\",\r\n        nominalColor:  [\"#e377c2\",\"#98df8a\" , \"#ff7f0e\", \"#a55194\" , \"#2ca02c\",  \"#aec7e8\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \"#8c564b\", \"#c49c94\",\"#1f77b4\" , \"#f7b6d2\", \"#7f7f7f\", \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\",\"#9c9ede\",\"#8c6d31\", \"#ffbb78\",\"#bd9e39\"]\r\n      },\r\n      sizeBy: \"degree\",\r\n      size: {\r\n        min: 2,\r\n        max: 6,\r\n        scale: \"Linear Scale\"\r\n      },\r\n      labelBy: \"node_id\",\r\n      shape: \"circle\",\r\n      labelSize: 0.6,\r\n      labelLength: 10,\r\n      // filter:{}\r\n    },\r\n    edges: {\r\n      color: \"#7f7f7f\",\r\n      crossColor: \"#0055aa\"\r\n    },\r\n    scatterplot:{\r\n      x: 'degree',\r\n      y:'distance to center'\r\n    }\r\n  }\r\n\r\n  @observable nodes = this.initialGlobalConfig.nodes;\r\n  @observable edges = this.initialGlobalConfig.edges;\r\n  @observable scatterplot = this.initialGlobalConfig.scatterplot;\r\n\r\n  @observable enableDegree = true;\r\n  @observable enableDensity = true;\r\n  @observable enableDiameter = false;\r\n  @observable enableCoefficient = true;\r\n  @observable enableComponent = true;\r\n\r\n  //access to process.js \"self\"\r\n  @observable process = undefined;\r\n\r\n  // Updated by frame event\r\n  @observable selectedNodes = [];\r\n\r\n  @observable filter = {}\r\n\r\n\r\n  @observable convexNodes = [];\r\n  @observable convexPolygons = [];\r\n  @observable convexPolygonsShow = false;\r\n\r\n  @observable mapEdgeShow = true;\r\n  @observable autoZoom = true;\r\n\r\n\r\n\r\n  // Currently hovered node\r\n  @observable currentlyHovered = undefined;\r\n\r\n  // Currently Clicked to frozen node on map\r\n  @observable mapClicked = undefined;\r\n\r\n  //  // Currently Clicked to frozen node on network\r\n  //  @observable networkClicked = undefined;\r\n\r\n  // Currently hovered path in the scatterplot view \r\n  @observable pathHovered = undefined;\r\n  /**\r\n   * Stores data relevant to smart pause feature\r\n   */\r\n  @observable smartPause = {\r\n    defaultActive: { //data for when graph layout is resumed and smart pause is not in effect \r\n      isActive: true, //true when layout is resumed and smart pause is not in effect\r\n      startTime: Date.now(), //keeps track of most recent time graph was unpaused\r\n      duration: 10000, //duration of resumed layout\r\n    },\r\n    //lastUnpaused: undefined, //old code using lastUnpaused\r\n    smartPaused: true, //true when resumed, but graph layout is paused due to inactivity\r\n    interactingWithGraph: false, //true when node is clicked or dragged. TODO: refactor to more understandable name\r\n  }\r\n\r\n  // Directed or not\r\n  @observable directedOrNot = false;\r\n\r\n  // Edge thickness based on \r\n  @observable edgeThicknessByDistance = false;\r\n\r\n  // Color by distance\r\n  @observable colorByDistance = false;\r\n\r\n  // Cache the single node that's been selected last time\r\n  // and will not update unless exactly one node is selected again\r\n  // useful for NeighborDialog\r\n  _lastSelectedSingleNode = null;\r\n  @computed\r\n  get lastSelectedSingleNode() {\r\n    if (this.selectedNodes.length === 1) {\r\n      this._lastSelectedSingleNode = this.selectedNodes[0];\r\n    }\r\n    return this._lastSelectedSingleNode;\r\n  }\r\n  // Updated by frame event. Not being listened, only used to save label visibility.\r\n  nodesShowingLabels = [];\r\n  // Used by autorun during snapshot loading.\r\n  @observable initialNodesShowingLabels = [];\r\n\r\n  @observable\r\n  overrideConfig = {\r\n    color: \"#000\",\r\n    size: 5,\r\n    label: \"\",\r\n    shape: \"circle\"\r\n  };\r\n\r\n  @observable\r\n  rawGraph = {\r\n    nodes: [],\r\n    edges: []\r\n  };\r\n\r\n  //saved states from loaded graph snapshot\r\n  @observable savedStates = null;\r\n\r\n  @observable\r\n  metadata = {\r\n    fullNodes: 0,\r\n    fullEdges: 0,\r\n    nodeProperties: [],\r\n    nodePropertyTypes:[],\r\n    uniqueValue:{},\r\n    nodeComputed: [\"pagerank\", \"degree\",'centrality', 'distance to center','betweeness centrality','closeness centrality', 'distance to group center'],\r\n    edgeProperties: [],\r\n    snapshotName: \"loading...\" // Optional: for display in Argo-lite only\r\n  };\r\n\r\n  @observable\r\n  densityDistance = []\r\n\r\n  @observable\r\n  edgeselection = []\r\n\r\n  @observable\r\n  degreeselection = []\r\n\r\n  @observable\r\n  degreebrushed = false\r\n\r\n  //name of currently hovered family group on the cluster cluster scatterplot \r\n  @observable\r\n  distanceDensityCurrentlyHovered = undefined\r\n\r\n  @observable\r\n  distanceDensityCurrentlyClicked = []\r\n\r\n  @observable\r\n  groupby = 'NULL'\r\n\r\n  @observable\r\n  convexhullby = 'NULL'\r\n\r\n  // used for listing all the properties, either original or computed\r\n  @computed\r\n  get allPropertiesKeyList() {\r\n    return uniq([\r\n      ...this.metadata.nodeProperties,\r\n      ...this.metadata.nodeComputed\r\n    ]).filter(k => k !== 'id'); // since node_id is already present\r\n  }\r\n\r\n  @computed\r\n  get filterKeyList() {\r\n    const removeList = ['isHidden','id','Longitude', 'Latitude','LatY', 'LonX', 'dist to center','dist_to_center','centrality','shortest path', 'pair distance','node_id','standard distance','network density']\r\n    return uniq([\r\n      ...this.metadata.nodeProperties,\r\n      ...this.metadata.nodeComputed\r\n    ]).filter(k =>removeList.indexOf(k)=== -1); // since node_id is already present\r\n  }\r\n\r\n  @computed\r\n  get allComputedPropertiesKeyList() {\r\n   \r\n    const uniq_compute = uniq([\r\n      ...this.metadata.nodeComputed\r\n    ]).filter(k => k !== 'id' ); // since node_id is already present\r\n    const uppercase_compute = uniq_compute.map((u)=>{\r\n    return u.toLowerCase().split(' ').map((s) => s.charAt(0).toUpperCase() + s.substring(1)).join(' ')\r\n    })\r\n     return uppercase_compute\r\n  }\r\n\r\n  @computed\r\n  get selectedNeighborIDs(){\r\n\r\n   \r\n \r\n    if (this.selectedNodes.length>0) {\r\n      const neighborIDs = []\r\n      for (var j = 0; j < this.selectedNodes.length; j++) {\r\n        this.selectedNodes[j].links.forEach((link)=>{\r\n        neighborIDs.push(link.fromId);\r\n        neighborIDs.push(link.toId);\r\n        })\r\n        \r\n      }\r\n      if (neighborIDs.length>0){\r\n        const uniqNeighborIDs = uniq([\r\n        ...neighborIDs\r\n      ])\r\n      return uniqNeighborIDs\r\n    }else{\r\n      return []\r\n    }\r\n    }else{ \r\n      return []\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n  @observable.ref frame = null;\r\n  @observable.ref positions = null;\r\n  @observable pinnedNodes = null;\r\n\r\n  @observable overrides = new Map();\r\n  @observable searchOrder = \"degree\";\r\n\r\n  hasGraphLoaded = false;\r\n\r\n  @computed\r\n  get hasGraph() {\r\n    if (this.rawGraph.nodes.length > 0) {\r\n      this.hasGraphLoaded = true;\r\n    }\r\n    return this.hasGraphLoaded;\r\n  }\r\n\r\n  // @computed\r\n  // get ordinalDomain(colorBy){\r\n  //   return this.rawGraph.nodes.map(function(n){\r\n  //     n[colorBy]\r\n  //   })\r\n  // }\r\n  @computed\r\n  get minMax() {\r\n    const ret = {};\r\n    for (const p of [\r\n      ...this.metadata.nodeProperties,\r\n      ...this.metadata.nodeComputed\r\n    ]) {\r\n      let min = Number.MAX_VALUE;\r\n      let max = Number.MIN_VALUE;\r\n\r\n      for (const n of this.rawGraph.nodes) {\r\n        min = Math.max(Math.min(min, n[p]), 0.0000001);\r\n        max = Math.max(max, n[p]);\r\n      }\r\n\r\n      ret[p] = [min, max];\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  @computed\r\n  get nodeSizeScale() {\r\n    return scales[this.nodes.size.scale]()\r\n      .domain(this.minMax[this.nodes.sizeBy])\r\n      .range([this.nodes.size.min, this.nodes.size.max]);\r\n  }\r\n\r\n  @computed\r\n  get nodeColorScale() {\r\n    if(this.nodes.color.scale == \"Nominal Scale\"){ //nominal scale \r\n      return scales[this.nodes.color.scale]()\r\n      .domain([...new Set(this.rawGraph.nodes.map(item => item[this.nodes.colorBy]))])\r\n      .range(this.nodes.color.nominalColor);\r\n    }else{ //linear and log scale \r\n      return scales[this.nodes.color.scale]()\r\n      .domain(this.minMax[this.nodes.colorBy])\r\n      .range([this.nodes.color.from, this.nodes.color.to]);\r\n    }\r\n    \r\n  }\r\n\r\n\r\n\r\n  // @computed\r\n  // get nodeColorCategory() {\r\n  //   return scales[this.nodes.color.scale]()\r\n  //     .domain(this.minMax[this.nodes.colorBy])\r\n  //     .range([this.nodes.color.from, this.nodes.color.to]);\r\n  // }\r\n\r\n\r\n  // Return raw graph nodes that is neighbor with the selected node,\r\n  // excluding the node itself.\r\n  getNeighborNodesFromRawGraph(selectedNodeId) {\r\n    const setOfNeighborIds = new Set();\r\n    this.rawGraph.edges.forEach(e => {\r\n      const source = e.source_id.toString();\r\n      const target = e.target_id.toString();\r\n      if (source === selectedNodeId && target !== selectedNodeId) {\r\n        setOfNeighborIds.add(target);\r\n      }\r\n      if (target === selectedNodeId && source !== selectedNodeId) {\r\n        setOfNeighborIds.add(source);\r\n      }\r\n    });\r\n    return this.rawGraph.nodes.filter(node => setOfNeighborIds.has(node.id.toString()));\r\n  }\r\n\r\n  \r\n\r\n  // Triggers autorun in stores/index.js to sent computedGraph to graph-frontend.\r\n  @computed\r\n  get computedGraph() {\r\n    const graph = createGraph();\r\n    this.rawGraph.nodes.forEach(n => {\r\n      // If isHidden flag is defined and true, ignore the node in graph-frontend.\r\n      if (n.isHidden) {\r\n        return;\r\n      }\r\n      const override = this.overrides.get(n.id.toString());\r\n      graph.addNode(n.id.toString(), {\r\n        label: (override && override.get(\"label\")) || n[this.nodes.labelBy],\r\n        size:\r\n          (override && override.get(\"size\")) ||\r\n          this.nodeSizeScale(n[this.nodes.sizeBy]),\r\n        color:\r\n          (override && override.get(\"color\")) ||\r\n          this.nodeColorScale(n[this.nodes.colorBy]),\r\n        shape: (override && override.get(\"shape\")) || n[this.nodes.shape],\r\n        ref: n\r\n      });\r\n    });\r\n\r\n    this.rawGraph.edges.forEach(e => {\r\n      // If isHidden flag is defined and true on an associated node,\r\n      // leave out its related edges.\r\n      if (graph.hasNode(e.source_id.toString()) && graph.hasNode(e.target_id.toString())) {\r\n        graph.addLink(e.source_id.toString(), e.target_id.toString(),e);\r\n      }\r\n    });\r\n\r\n    return graph;\r\n  }\r\n\r\n  @computed\r\n  get numHiddenNodes() {\r\n    return this.rawGraph.nodes.filter(n => n.isHidden).length;\r\n  }\r\n\r\n  filterNodes() { \r\n    runInAction('filter nodes', () => {\r\n    if(Object.keys(this.filter).length !== 0  ){\r\n      \r\n      \r\n        this.rawGraph.nodes = this.rawGraph.nodes.map(n => {\r\n          var satisfy = true\r\n          for (const fkey in this.filter){\r\n            if(this.metadata.nodePropertyTypes[fkey] == 'string'){\r\n              if(this.filter[fkey].length >0 && (!this.filter[fkey].includes(n[fkey]))){\r\n                satisfy = false\r\n              }\r\n            }else{  // number range \r\n              if(this.filter[fkey] && (n[fkey]<this.filter[fkey]['min'] || n[fkey]>this.filter[fkey]['max'])){\r\n                satisfy = false\r\n              }\r\n            }\r\n          }\r\n          if (satisfy) {\r\n            return { ...n, isHidden: false };\r\n          }\r\n          return {...n, isHidden: true};\r\n        });\r\n      \r\n    }\r\n    });\r\n  }\r\n\r\n  showNodes(nodeids) {\r\n    runInAction('show hidden nodes by ids', () => {\r\n      this.rawGraph.nodes = this.rawGraph.nodes.map(n => {\r\n        if (nodeids.includes(n.id)) {\r\n          return { ...n, isHidden: false };\r\n        }\r\n        return n;\r\n      });\r\n    });\r\n  }\r\n\r\n  hideNodes(nodeids) {\r\n    runInAction('hide nodes by ids', () => {\r\n      this.frame.removeNodesByIds(nodeids);\r\n      this.rawGraph.nodes = this.rawGraph.nodes.map(n => {\r\n        if (nodeids.includes(n.id)) {\r\n          return { ...n, isHidden: true };\r\n        }\r\n        return n;\r\n      });\r\n    });\r\n  }\r\n\r\n  removeNodes(nodeids) {\r\n    runInAction('remove nodes by ids', () => {\r\n      this.frame.removeNodesByIds(nodeids);\r\n      this.rawGraph.nodes = this.rawGraph.nodes.filter(\r\n        n => !nodeids.includes(n.id)\r\n      );\r\n      this.rawGraph.edges = this.rawGraph.edges.filter(\r\n        e => !nodeids.includes(e.source_id) && !nodeids.includes(e.target_id)\r\n      );\r\n    });\r\n  }\r\n\r\n  getSnapshot() {\r\n    const snapshot = {\r\n      rawGraph: this.rawGraph,\r\n      overrides: this.overrides,\r\n      nodesShowingLabels: this.nodesShowingLabels,\r\n      positions: this.frame.getPositions(),\r\n      pinnedNodes: Array.from(this.frame.getPinnedNodes()),\r\n      metadata: this.metadata,\r\n      global: {\r\n        nodes: this.nodes,\r\n        edges: this.edges,\r\n      },\r\n    };\r\n    return snapshot;\r\n  }\r\n\r\n  /**\r\n   * [Argo-lite] Saves graph snapshot as String\r\n   * \r\n   * Note that Argo-lite snapshot contains all graph data\r\n   * and metadata except nodes/edges deleted by users.\r\n   * This is different from Argo-electron snapshot.\r\n   */\r\n  saveImmediateStates(optionalConfig) {\r\n    const snapshot = this.getSnapshot();\r\n    // TODO: add corresponding options on frontend\r\n    // The optional options allows users to leave out\r\n    // certain app state when saving snapshot\r\n    if (optionalConfig) {\r\n      if (optionalConfig.noPosition) {\r\n        snapshot.positions = undefined;\r\n      }\r\n      if (optionalConfig.noGlobal) {\r\n        snapshot.global = undefined;\r\n      }\r\n      if (optionalConfig.noOverride) {\r\n        snapshot.overrides = undefined;\r\n      }\r\n    }\r\n    return JSON.stringify(snapshot);\r\n  }\r\n\r\n  @action\r\n  loadImmediateStates(savedStatesStr) {\r\n    const savedStates = JSON.parse(savedStatesStr);\r\n    this.savedStates = savedStates;\r\n    if (!savedStates) {\r\n      return;\r\n    }\r\n    const savedOverrides = new Map(\r\n      Object.entries(savedStates.overrides).map(([k, v]) => [\r\n        k,\r\n        new Map(Object.entries(v))\r\n      ])\r\n    );\r\n    this.overrides.clear();\r\n    this.overrides.merge(savedOverrides);\r\n\r\n    if (savedStates.metadata) {\r\n      this.metadata = savedStates.metadata;\r\n    }\r\n    if (savedStates.global) {\r\n      this.nodes = savedStates.global.nodes;\r\n      this.edges = savedStates.global.edges ? savedStates.global.edges : this.edges;\r\n    }\r\n    // The following lines trigger autoruns.\r\n    this.rawGraph = savedStates.rawGraph;\r\n    if (savedStates.positions) {\r\n      this.positions = savedStates.positions;\r\n    }\r\n    if (savedStates.nodesShowingLabels) {\r\n      this.initialNodesShowingLabels = savedStates.nodesShowingLabels;\r\n      this.nodesShowingLabels = savedStates.nodesShowingLabels;\r\n    }\r\n\r\n    //stores data pinned nodes in appState\r\n    if (savedStates.pinnedNodes) {\r\n      this.pinnedNodes = new Set(savedStates.pinnedNodes);\r\n    }\r\n\r\n\r\n    this.runActiveLayout();\r\n  }\r\n\r\n\r\n  //resumes graph layout for a set duration before smart-pausing\r\n  runActiveLayout() {\r\n    if(this.frame) {\r\n      this.frame.paused = false;\r\n    } \r\n    this.smartPause.defaultActive.isActive = true;\r\n    this.smartPause.defaultActive.startTime = Date.now();\r\n    this.smartPause.smartPaused = false;\r\n  }\r\n\r\n  //selects which nodes should be pinned based on saved state of loaded snapshot\r\n  pinNodes() {\r\n    if (this.pinnedNodes) {\r\n      let nodesToPin = [];\r\n      let that = this; //\"this\" will not work inside of forEach, so it needs to be stored\r\n      this.process.graph.forEachNode(function (n) {\r\n        if (that.pinnedNodes.has(n.id)) {\r\n          nodesToPin.push(n);\r\n        }\r\n      });\r\n      this.frame.setPinnedNodes(nodesToPin);\r\n    }\r\n  }\r\n\r\n  setUpFrame() {\r\n    const graphFrame = new Frame(this.computedGraph);\r\n    graphFrame.init();\r\n    graphFrame.display();\r\n    this.frame = graphFrame;\r\n    graphFrame.ee.on(\"select-nodes\", nodes => {\r\n      this.selectedNodes = nodes;\r\n    });\r\n    graphFrame.ee.on(\"show-node-label\", nodes => {\r\n      this.nodesShowingLabels = nodes;\r\n    });\r\n    graphFrame.ee.on(\"right-click\", data => {\r\n      const menu = MenuFactory({\r\n        children: [\r\n          MenuItemFactory({\r\n            onClick: () => {\r\n              this.frame.toggleSelectedLabels();\r\n            },\r\n            text: 'Toggle Labels',\r\n            key: 'Toggle Labels'\r\n          }),\r\n          MenuItemFactory({\r\n            onClick: () => {\r\n              this.frame.unpinSelectedNodes();\r\n            },\r\n            text: 'Unpin Selected',\r\n            key: 'Unpin Selected'\r\n          }),\r\n          MenuItemFactory({\r\n            onClick: () => {\r\n              this.frame.pinSelectedNodes();\r\n            },\r\n            text: 'Pin Selected',\r\n            key: 'Pin Selected'\r\n          }),\r\n          this.frame.rightClickedNode && MenuItemFactory({\r\n            onClick: () => {\r\n              if (this.frame.rightClickedNode) {\r\n                const rightClickedNodeId = this.frame.rightClickedNode.data.ref.id.toString();\r\n                const neighbors = this.getNeighborNodesFromRawGraph(rightClickedNodeId);\r\n                neighbors.sort((n1, n2) => {\r\n                  if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\r\n                    return n2[\"pagerank\"] - n1[\"pagerank\"];\r\n                  }\r\n                  return 0;\r\n                });\r\n                const ids = [];\r\n                for (let i = 0; i < 5 && i < neighbors.length; i++) {\r\n                  ids.push(neighbors[i].id);\r\n                }\r\n                this.showNodes(ids);\r\n              }\r\n            },\r\n            text: 'Show 5 Neighbors with Highest PageRank',\r\n            key: 'Show 5 Neighbors with Highest PageRank'\r\n          }),\r\n        ]\r\n      });\r\n      ContextMenu.show(menu, { left: data.pageX, top: data.pageY }, () => {\r\n        // onMenuClose\r\n        console.log(\"ContextMenu closed\");\r\n      });\r\n    });\r\n  }\r\n\r\n  /*\r\n   * Graph algorithms used in StatisticsDialog.\r\n   */\r\n\r\n  get averageClustering() {\r\n    const snapshot = {\r\n      rawGraph: this.rawGraph,\r\n    };\r\n    return averageClusteringCoefficient(snapshot);\r\n  }\r\n\r\n\r\n  get components() {\r\n    const snapshot = {\r\n      rawGraph: this.rawGraph,\r\n    };\r\n    return connectedComponents(snapshot);\r\n  }\r\n\r\n  @computed\r\n  get density() {\r\n    const snapshot = {\r\n      rawGraph: this.rawGraph,\r\n    };\r\n    return graphDensity(snapshot);\r\n  }\r\n\r\n  @computed\r\n  get degree() {\r\n    const snapshot = {\r\n      rawGraph: this.rawGraph,\r\n    };\r\n    return averageDegree(snapshot);\r\n  }\r\n\r\n  @computed\r\n  get diameter() {\r\n    const snapshot = {\r\n      rawGraph: this.rawGraph,\r\n    };\r\n    return exactGraphDiameter(snapshot);\r\n  }\r\n}","import { observable } from \"mobx\";\r\n\r\nexport default class ImportStore {\r\n  @observable graphFile = \"\";\r\n  @observable stateFile = \"\";\r\n\r\n  @observable dialogOpen = false;\r\n  @observable gexfDialogOpen = false;\r\n\r\n  @observable loading = false;\r\n\r\n  // Argo-lite specific: File object selected via the file input.\r\n  @observable selectedEdgeFileFromInput = null;\r\n  @observable selectedNodeFileFromInput = null;\r\n\r\n  @observable selectedGexfFileFromInput = null;\r\n\r\n  @observable\r\n  importConfig = {\r\n    nodeFile: {\r\n      path: \"\",\r\n      topN: [],\r\n      hasColumns: true,\r\n      ready: false, // whether the topN is ready to display\r\n      columns: [],\r\n      mapping: {\r\n        id: \"<UNK>\",\r\n        LonX: \"<UNK>\",\r\n        LatY: \"<UNK>\"\r\n      },\r\n      delimiter: \",\"\r\n    },\r\n    edgeFile: {\r\n      path: \"\",\r\n      ready: false,\r\n      hasColumns: true,\r\n      columns: [],\r\n      topN: [],\r\n      mapping: {\r\n        fromId: \"<UNK>\",\r\n        toId: \"<UNK>\"\r\n      },\r\n      createMissing: true,\r\n      delimiter: \",\"\r\n    }\r\n  };\r\n\r\n  /*\r\n    Post Import Filtering related options.\r\n  */\r\n\r\n  postImportFilteringOptions = {\r\n    \"top 10 nodes with highest degree\": (rawGraph) => {\r\n      const sortedList = [...rawGraph.nodes];\r\n      sortedList.sort((n1, n2) => {\r\n          if (n1[\"degree\"] && n2[\"degree\"]) {\r\n              return n2[\"degree\"] - n1[\"degree\"];\r\n          }\r\n          return 0;\r\n      });\r\n      const setIds = new Set();\r\n      for (let i = 0; i < 10 && i < sortedList.length; i++) {\r\n        setIds.add(sortedList[i].id);\r\n      }\r\n      rawGraph.nodes = rawGraph.nodes.map(n => {\r\n        if (setIds.has(n.id)) {\r\n          return {...n, isHidden: false};\r\n        }\r\n        return n;\r\n      });\r\n    },\r\n    \"All Nodes\": (rawGraph) => {\r\n      rawGraph.nodes = rawGraph.nodes.map(n => ({...n, isHidden: false}));\r\n    },\r\n  };\r\n\r\n  defaultPostImportFilteringOption = \"All Nodes\";\r\n  \r\n  @observable selectedPostImportFilteringOption = this.defaultPostImportFilteringOption;\r\n\r\n  postImportFilter(rawGraph) {\r\n    // Hide all nodes by default, use filtering option to show them.\r\n    rawGraph.nodes = rawGraph.nodes.map(n => ({...n, isHidden: true}));\r\n    // Run the selected post import filtering option.\r\n    this.postImportFilteringOptions[this.selectedPostImportFilteringOption](rawGraph);\r\n  }\r\n\r\n\r\n}\r\n","import { observable } from \"mobx\";\r\n\r\nexport default class ProjectStore {\r\n \r\n  @observable projects = [];\r\n\r\n  /*\r\n   * Active project and snapshot\r\n   */\r\n  @observable currentProject = null;\r\n  // @observable currentProjectName = null;\r\n  // @observable currentProjectPath = null;\r\n  @observable currentSnapshotName = \"Quick Save\"; // TODO: If not loaded from snapshot, use this, otherwise use the name of the loaded snapshot\r\n\r\n  // [Argo-lite] for displaying snapshot file in textarea to be copied\r\n  @observable stringCopyOfSnapshot = 'Loading';\r\n  \r\n  /*\r\n   * Dialogs and UI\r\n   */\r\n  @observable isNewProjectDialogOpen = false;\r\n  @observable isProjectDetailDialogOpen = false;\r\n  @observable isSaveSnapshotDialogOpen = false;\r\n  @observable isRenameSnapshotDialogOpen = false;\r\n  // when the ipc returns the projects data for the first time\r\n  // turn off `isFetching` so that the spinner of WorkspaceView will be turned off\r\n  // Also used when refreshing WorkspaceView\r\n  @observable isFetching = true;\r\n\r\n  /*\r\n   * New project creation and import\r\n   */\r\n  @observable newProjectName = '';\r\n}\r\n","import { observable } from \"mobx\";\r\n\r\nexport default class SearchStore {\r\n  @observable searchStr = \"\";\r\n  @observable candidates = [];\r\n  @observable numCandidates = 0;\r\n  @observable panelOpen = false;\r\n}\r\n","import { autorun, runInAction } from \"mobx\";\r\nimport { Intent } from \"@blueprintjs/core\";\r\n\r\nimport PreferencesStore from \"./PreferencesStore\";\r\nimport GraphStore from \"./GraphStore\";\r\n// import MapStore from \"./MapStore\";\r\nimport ImportStore from \"./ImportStore\";\r\nimport ProjectStore from \"./ProjectStore\";\r\n// import { peakCSV } from \"../services/CSVUtils\";\r\nimport parse from \"csv-parse/lib/sync\";\r\nimport SearchStore from \"./SearchStore\";\r\nimport { runSearch } from \"../ipc/client\";\r\n\r\nimport { BACKEND_URL, SAMPLE_GRAPH_SNAPSHOTS} from \"../constants\";\r\nimport { toaster } from '../notifications/client';\r\n\r\nimport {LocalFileData,constructFileFromLocalFileData} from \"get-file-object-from-local-path\"\r\n\r\n// import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\r\n\r\nexport class AppState {\r\n  constructor() {\r\n    this.preferences = new PreferencesStore();\r\n    this.graph = new GraphStore();\r\n    // this.mapview = new MapStore();\r\n    this.import = new ImportStore();\r\n    this.search = new SearchStore();\r\n    this.project = new ProjectStore();\r\n  //   this.map = <MapContainer center={[51.505, -0.09]} zoom={13} scrollWheelZoom={false}>\r\n  //   <TileLayer\r\n  //     attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n  //     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n  //   />\r\n  //   <Marker position={[51.505, -0.09]}>\r\n  //     <Popup>\r\n  //       A pretty CSS3 popup. <br /> Easily customizable.\r\n  //     </Popup>\r\n  //   </Marker>\r\n  // </MapContainer>\r\n\r\n  }\r\n}\r\n\r\nconst appState = new AppState();\r\n\r\nwindow.appState = appState;\r\n\r\nappState.useToolbartoSelect = false\r\n\r\nconst loadSnapshotFromURL = (url) => {\r\n  return fetch(url, {\r\n    method: 'GET',\r\n    mode: 'cors'\r\n  }).then(response => response.text()).catch(error => {\r\n    toaster.show({\r\n      message: 'Failed to fetch graph snapshot',\r\n      intent: Intent.DANGER,\r\n      timeout: -1\r\n    });\r\n    console.error(error);\r\n  });\r\n};\r\n\r\nconst loadSnapshotFromStrapi = (uuid) => {\r\n  const url = `${BACKEND_URL}/snapshots?uuid=${uuid}`;\r\n  return fetch(url, {\r\n    method: 'GET',\r\n    mode: 'cors'\r\n  }).then(response => response.json()).then(json => json[0].body).catch(error => {\r\n    toaster.show({\r\n      message: 'Failed to fetch graph snapshot',\r\n      intent: Intent.DANGER,\r\n      timeout: -1\r\n    });\r\n    console.error(error);\r\n  });\r\n};\r\n\r\nconst loadAndDisplaySnapshotFromURL = (url) => {\r\n  loadSnapshotFromURL(url).then(snapshotString => {\r\n    // use filename/last segment of URL as title in Navbar\r\n    appState.graph.metadata.snapshotName = url.split('/').pop() || url.split('/').pop().pop();\r\n    appState.graph.loadImmediateStates(snapshotString);\r\n  });\r\n};\r\n\r\nconst loadAndDisplaySnapshotFromStrapi = (uuid) => {\r\n  appState.graph.convexPolygons =[]\r\n \r\n  loadSnapshotFromStrapi(uuid).then(snapshotString => {\r\n    // TODO: use more sensible snapshot name\r\n    appState.graph.metadata.snapshotName = 'Shared';\r\n    appState.graph.loadImmediateStates(snapshotString);\r\n  });\r\n};\r\n\r\nwindow.loadAndDisplaySnapshotFromURL = loadAndDisplaySnapshotFromURL;\r\nwindow.loadAndDisplaySnapshotFromStrapi = loadAndDisplaySnapshotFromStrapi;\r\n\r\n// var getFileBlob = function (url, cb) {\r\n//   var xhr = new XMLHttpRequest();\r\n//   xhr.open(\"GET\", url);\r\n//   xhr.responseType = \"blob\";\r\n//   xhr.addEventListener('load', function() {\r\n//       cb(xhr.response);\r\n//   });\r\n//   xhr.send();\r\n// };\r\n\r\n// var blobToFile = function (blob, name) {\r\n//   blob.lastModifiedDate = new Date();\r\n//   blob.name = name;\r\n//   return blob;\r\n// };\r\n\r\n// var getFileObject = function(filePathOrUrl, cb) {\r\n//  getFileBlob(filePathOrUrl, function (blob) {\r\n//     cb(blobToFile(blob, 'test.jpg'));\r\n//  });\r\n// };\r\n\r\nwindow.loadInitialSampleGraph = async () => {\r\n  // const nodeFileData = new LocalFileData('/Users/jsc/repositories/SSN/argo-lite/MafiaNodes_2.csv')\r\n  // const nodeFile = constructFileFromLocalFileData(nodeFileData)\r\n  // console.log(nodeFile)\r\n  // appState.import.selectedNodeFileFromInput = nodeFile\r\n\r\n  // const edgeFileData = new LocalFileData('/Users/jsc/repositories/SSN/argo-lite/MafiaEdges_2.csv')\r\n  // const edgeFile = constructFileFromLocalFileData(edgeFileData)\r\n  // console.log(edgeFile)\r\n  // appState.import.selectedEdgeFileFromInput = edgeFile\r\n\r\n  \r\n\r\n  // default fallback url\r\n  let url = \"https://argo-graph-lite.s3.amazonaws.com/lesmiserables.json\"\r\n\r\n  // check url hash\r\n  if (window.location.hash) {\r\n    const hash = window.location.hash.substring(1);\r\n    // If the hash component begins with http.\r\n    if (hash.length >= 4 && hash.startsWith('http')) {\r\n      try {\r\n        url = decodeURIComponent(hash);\r\n      } catch (e) {\r\n        console.error(e);\r\n        alert('Provided URL is not valid.');\r\n      }\r\n    } else {\r\n      // If the hash component does not begin with http\r\n      // treat it as a uuid in strapi.\r\n      loadAndDisplaySnapshotFromStrapi(hash);\r\n      return;\r\n    }\r\n    \r\n  }\r\n  // loadAndDisplaySnapshotFromURL(url)\r\n  loadAndDisplaySnapshotFromStrapi(SAMPLE_GRAPH_SNAPSHOTS[0][1]);\r\n};\r\n\r\nwindow.saveSnapshotToString = () => {\r\n  const snapshotString = appState.graph.saveImmediateStates();\r\n  return snapshotString;\r\n};\r\n\r\n// Load initial sample graph when Argo Lite is ready\r\nwindow.addEventListener('load', (event) => {\r\n  window.loadInitialSampleGraph();\r\n});\r\n\r\nconst updateTimeout = null;\r\n\r\n// Load graph on frontend once the rawGraph has been returned from IPC\r\n// Once a graph has been loaded and displayed, even if nodes are all deleted, still consider it \"hasGraph\"\r\nautorun(() => {\r\n  if (!appState.graph.hasGraph && appState.graph.rawGraph.nodes.length > 0) {\r\n    appState.graph.hasGraph = true;\r\n  }\r\n}) \r\n\r\n// // update MapView\r\nautorun(() => {\r\n  if (appState.graph.rawGraph.nodes.length > 0 ) {  // has spatial information \r\n    //\r\n  }\r\n}) \r\n\r\nautorun(() => {\r\n  if (appState.graph.frame) {\r\n    console.log(\"Triggered\");\r\n    appState.graph.frame.selection = []\r\n    appState.graph.frame.updateGraph(appState.graph.computedGraph); //loads nodes on screen when snapshot loaded\r\n    appState.graph.frame.setAllNodesShapeWithOverride(appState.graph.nodes.shape, appState.graph.overrides);\r\n    appState.graph.frame.setLabelRelativeSize(appState.graph.nodes.labelSize);\r\n    appState.graph.frame.setLabelLength(appState.graph.nodes.labelLength);\r\n    appState.graph.frame.updateSelectionOpacity();\r\n    appState.graph.frame.clearSelection();\r\n  }\r\n\r\n  //pins nodes only after nodes are loaded\r\n  appState.graph.pinNodes();\r\n});\r\n\r\n\r\n// // // resume layout by default \r\nautorun(() => {\r\n  appState.graph.frame.paused = true;\r\n  // appState.graph.frame.resumeLayout();\r\n                  // this.forceUpdate();\r\n}) \r\n\r\n\r\nautorun(() => {\r\n  if (appState.graph.frame && appState.graph.positions) {\r\n    // If positions are saved in a snapshot, pause layout upon loading.\r\n    appState.graph.frame.updatePositions(appState.graph.positions);\r\n    appState.graph.positions = null;\r\n    console.log('[autorun] Positions updated.');\r\n\r\n  }\r\n  if (appState.graph.frame && appState.graph.initialNodesShowingLabels) {\r\n    appState.graph.frame.showLabels(appState.graph.initialNodesShowingLabels);\r\n    appState.graph.initialNodesShowingLabels = null;\r\n  }\r\n});\r\n\r\nautorun(() => {\r\n  const searchStr = appState.search.searchStr;\r\n  if (searchStr.length >= 3) {\r\n    runSearch(searchStr);\r\n  } else {\r\n    appState.search.panelOpen = false;\r\n    appState.search.candidates.splice(0, appState.search.candidates.length);\r\n    if (appState.graph.frame) {\r\n      appState.graph.frame.highlightNodeIds([], true);\r\n    }\r\n  }\r\n});\r\n\r\n// Argo-lite specific: extract CSV from File object and update related fields.\r\nautorun(() => {\r\n  const file = appState.import.selectedEdgeFileFromInput;\r\n  const hasHeader = appState.import.importConfig.edgeFile.hasColumns;\r\n  const delimiter = appState.import.importConfig.edgeFile.delimiter;\r\n\r\n  if (!file) {\r\n    return;\r\n  }\r\n  const reader = new FileReader();\r\n  reader.readAsText(file);\r\n\r\n  reader.onload = () => {\r\n    // Read entire CSV into memory as string\r\n    const fileAsString = reader.result;\r\n    // Get top 20 lines. Or if there's less than 10 line, get all the lines.\r\n    const lines = fileAsString.split('\\n');\r\n    const lineNumber = lines.length;\r\n    const topLinesAsString = lines.map(l => l.trim()).filter((l, i) => i < 20).join('\\n');\r\n    console.log(topLinesAsString);\r\n\r\n    // Parse the top lines\r\n    try {\r\n      const it = hasHeader ? parse(topLinesAsString, {\r\n        comment: \"#\",\r\n        trim: true,\r\n        auto_parse: true,\r\n        skip_empty_lines: true,\r\n        columns: hasHeader,\r\n        delimiter\r\n      }) : parse(topLinesAsString, {\r\n        comment: \"#\",\r\n        trim: true,\r\n        auto_parse: true,\r\n        skip_empty_lines: true,\r\n        columns: undefined,\r\n        delimiter\r\n      });\r\n      runInAction(\"preview top N lines of edge file\", () => {\r\n        appState.import.importConfig.edgeFile.topN = it;\r\n        appState.import.importConfig.edgeFile.columns = Object.keys(it[0]).map(key => `${key}`);\r\n        appState.import.importConfig.edgeFile.mapping.fromId = appState.import.importConfig.edgeFile.columns[0];\r\n        appState.import.importConfig.edgeFile.mapping.toId = appState.import.importConfig.edgeFile.columns[1];\r\n        appState.import.importConfig.edgeFile.ready = true;\r\n      });\r\n    } catch {\r\n      toaster.show({\r\n        message: 'Error: Fails to parse file',\r\n        intent: Intent.DANGER,\r\n        timeout: -1\r\n      });\r\n    }\r\n  };\r\n\r\n  reader.onerror = () => {\r\n    console.error(reader.error);\r\n    toaster.show({\r\n      message: 'Error: Fails to open file',\r\n      intent: Intent.DANGER,\r\n      timeout: -1\r\n    });\r\n  };\r\n});\r\n\r\nautorun(() => {\r\n  const file = appState.import.selectedNodeFileFromInput;\r\n  const hasHeader = appState.import.importConfig.nodeFile.hasColumns;\r\n  const delimiter = appState.import.importConfig.nodeFile.delimiter;\r\n\r\n  if (!file) {\r\n    return;\r\n  }\r\n  const reader = new FileReader();\r\n  reader.readAsText(file);\r\n\r\n  reader.onload = () => {\r\n    // Read entire CSV into memory as string\r\n    const fileAsString = reader.result;\r\n    // Get top 20 lines. Or if there's less than 10 line, get all the lines.\r\n    const lines = fileAsString.split('\\n');\r\n    const lineNumber = lines.length;\r\n    const topLinesAsString = lines.map(l => l.trim()).filter((l, i) => i < 20).join('\\n');\r\n    console.log(topLinesAsString);\r\n\r\n    // Parse the top lines\r\n    try {\r\n      const it = hasHeader ? parse(topLinesAsString, {\r\n        comment: \"#\",\r\n        trim: true,\r\n        auto_parse: true,\r\n        skip_empty_lines: true,\r\n        columns: hasHeader,\r\n        delimiter\r\n      }) : parse(topLinesAsString, {\r\n        comment: \"#\",\r\n        trim: true,\r\n        auto_parse: true,\r\n        skip_empty_lines: true,\r\n        columns: undefined,\r\n        delimiter\r\n      });\r\n\r\n      runInAction(\"preview top N lines of node file\", () => {\r\n        appState.import.importConfig.nodeFile.topN = it;\r\n        appState.import.importConfig.nodeFile.columns = Object.keys(it[0]).map(key => `${key}`);\r\n        appState.import.importConfig.nodeFile.mapping.id = appState.import.importConfig.nodeFile.columns[0];\r\n        appState.import.importConfig.nodeFile.mapping.LatY = appState.import.importConfig.nodeFile.columns[1];\r\n        appState.import.importConfig.nodeFile.mapping.LonX = appState.import.importConfig.nodeFile.columns[2];\r\n        appState.import.importConfig.nodeFile.ready = true;\r\n      });\r\n    } catch {\r\n      toaster.show({\r\n        message: 'Error: Fails to open file',\r\n        intent: Intent.DANGER,\r\n        timeout: -1\r\n      });\r\n    }\r\n  };\r\n\r\n  reader.onerror = () => {\r\n    console.error(reader.error);\r\n    toaster.show({\r\n      message: 'Error: Fails to open file',\r\n      intent: Intent.DANGER,\r\n      timeout: -1\r\n    });\r\n  };\r\n});\r\n\r\nexport default appState;\r\n","const jsnx = require('jsnetworkx');\r\nconst jsgraphs = require('js-graph-algorithms');\r\n\r\n/**\r\n * Convert Argo-lite snapshot for use in the JSNetworkX library.\r\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\r\n */\r\nexport function convertToJsnx(snapshot) {\r\n    const jsnxGraph = new jsnx.Graph();\r\n    jsnxGraph.addNodesFrom(snapshot.rawGraph.nodes.map(n => [n.id, n]));\r\n    jsnxGraph.addEdgesFrom(snapshot.rawGraph.edges.map(e => [e.source_id, e.target_id]));\r\n    return jsnxGraph;\r\n}\r\n\r\n/**\r\n * Convert Argo-lite snapshot for use in the ngraph library.\r\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\r\n */\r\nexport function convertToNGraph(snapshot) {\r\n    return null;\r\n}\r\n\r\n/**\r\n * Convert Argo-lite snapshot for use in the js-graph-algorithms library.\r\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\r\n */\r\nexport function convertToJSGraph(snapshot) {\r\n    var idDict = {};\r\n    var i;\r\n    for (i = 0; i < snapshot.rawGraph.nodes.length; i++) {\r\n        idDict[snapshot.rawGraph.nodes[i].id] = i;\r\n    }\r\n    var g = new jsgraphs.Graph(snapshot.rawGraph.nodes.length);\r\n    snapshot.rawGraph.edges.forEach(e => {\r\n        g.addEdge(idDict[e.source_id], idDict[e.target_id]);\r\n    });\r\n    return [g, idDict];\r\n}\r\n\r\n/**\r\n * Convert Argo-lite snapshot for use in the js-graph-algorithms library (Weighted).\r\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\r\n */\r\nexport function convertToJSGraphWeightedDi(snapshot) {\r\n    var idDict = {};\r\n    var i;\r\n    for (i = 0; i < snapshot.rawGraph.nodes.length; i++) {\r\n        idDict[snapshot.rawGraph.nodes[i].id] = i;\r\n    }\r\n    var g = new jsgraphs.WeightedDiGraph(snapshot.rawGraph.nodes.length);\r\n    snapshot.rawGraph.edges.forEach(e => {\r\n        g.addEdge(new jsgraphs.Edge(idDict[e.source_id], idDict[e.target_id], 1.0));\r\n    });\r\n    return [g, idDict];\r\n}\r\n\r\n/**\r\n * Convert Argo-lite snapshot to the GEXF format.\r\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\r\n */\r\nexport function convertToGexf(snapshot) {\r\n    return null;\r\n}\r\n\r\n/**\r\n * Calculate the average clustering coefficient of the (undirected unweighted) graph.\r\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\r\n */\r\nexport function averageClusteringCoefficient(snapshot) {\r\n    const jsnxGraph = convertToJsnx(snapshot);\r\n    const result = jsnx.averageClustering(jsnxGraph);\r\n    console.log('Computing Clustering Coefficient');\r\n    return result;\r\n}\r\n\r\n/**\r\n * Calculate the number of connected components in a graph\r\n * @param {*} rawGraph the rawGraph inside appState\r\n */\r\nexport function connectedComponents(snapshot) {\r\n    var cc = new jsgraphs.ConnectedComponents(convertToJSGraph(snapshot)[0]);\r\n    return cc.componentCount();\r\n}\r\n\r\n/**\r\n * Calculate the density of a graph\r\n * @param {*} rawGraph the rawGraph inside appState\r\n */\r\nexport function graphDensity(snapshot) {\r\n    const nodeCount = snapshot.rawGraph.nodes.length;\r\n    const edgeCount = snapshot.rawGraph.edges.length ;\r\n    return (2 * edgeCount) / ((nodeCount) * (nodeCount - 1));\r\n}\r\n\r\n/**\r\n * Calculate the average degree of a graph\r\n * @param {*} rawGraph the rawGraph inside appState\r\n */\r\nexport function averageDegree(snapshot) {\r\n    let sum = 0;\r\n    snapshot.rawGraph.nodes.forEach(e => {\r\n            sum += e.degree;\r\n        }\r\n    )\r\n    return sum / snapshot.rawGraph.nodes.length;\r\n}\r\n\r\n\r\n/**\r\n * Calculate the diameter of a graph\r\n * @param {*} rawGraph the rawGraph inside appState\r\n */\r\nexport function exactGraphDiameter(snapshot) {\r\n    let temp = convertToJSGraphWeightedDi(snapshot);\r\n    let jsg = temp[0];\r\n    let idDict = temp[1]\r\n    let dia = -1;\r\n    snapshot.rawGraph.nodes.forEach(e => {\r\n        let dijkstra = new jsgraphs.Dijkstra(jsg, idDict[e.id]);\r\n        snapshot.rawGraph.nodes.forEach(f => {\r\n            if(dijkstra.hasPathTo(idDict[f.id])){\r\n                let pathLength = dijkstra.pathTo(idDict[f.id]).length;\r\n                dia = Math.max(dia, pathLength);\r\n            }\r\n        })\r\n    });\r\n    return dia;\r\n}\r\n ","import * as scale from \"d3-scale\";\r\n\r\n// Argo-lite Iframe widget mode\r\n// Build the app separately and host it on a different URL\r\n// If set to true, the app will begin in widget mode\r\n// hiding certain panels, logo, and minimap\r\n// and show a minimalist Navbar.\r\nexport const IS_IFRAME_WIDGET = window.location !== window.parent.location;\r\n\r\nexport const FRONTEND_URL = \"https://poloclub.github.io/argo-graph-lite\";\r\nexport const LOGO_URL = \"https://sites.gatech.edu/snoman/\";\r\nexport const GITHUB_URL = \"https://github.com/sichenjin/SSN\";\r\n// Argo-lite Graph Sharing backend Strapi Server:\r\nexport const BACKEND_URL = \"https://argo-share.herokuapp.com\"; // for production\r\n// export const BACKEND_URL = \"https://sleepy-brushlands-57948.herokuapp.com\"; // for free heroku\r\n// export const BACKEND_URL = \"http://localhost:1337\"; // for local strapi development\r\nexport const SAMPLE_GRAPH_SNAPSHOTS = [\r\n  // [\"Les Miserables\", \"31d8fb5a-b540-4db6-a2df-9c0158e152f0\"],\r\n  // https://poloclub.github.io/argo-graph-lite/#099905af-a9a1-417a-8a1c-92fa121d7d0d\r\n  // #bc368f46-a78b-4fc7-bd29-68594a8f7e3c\r\n  // https://poloclub.github.io/argo-graph-lite/#ab19b31c-efe1-4b77-ba03-4656ef1bd4bc\r\n  // https://poloclub.github.io/argo-graph-lite/#6c399b67-1454-498c-9abc-86cafa48434d \r\n  // https://poloclub.github.io/argo-graph-lite/#f5eb85cb-65be-46fe-bd66-1c3066e27893  \r\n  // https://poloclub.github.io/argo-graph-lite/#0b92553e-b85a-4be4-94ce-84c8868da40c /\r\n  //change back to no shortest path snapshot for foodsharing \"ab19b31c-efe1-4b77-ba03-4656ef1bd4bc\"\r\n  // https://poloclub.github.io/argo-graph-lite/#c1295995-f0c4-4350-9ea0-c97c8a134a34 //shortest path for food sharing \r\n  // https://poloclub.github.io/argo-graph-lite/#ae71bf2c-0b47-43bd-8955-c64a53734341  \r\n  // \"\" \r\n  \r\n  // https://poloclub.github.io/argo-graph-lite/#82ffaa24-1d0f-402d-8d5c-9e6595827bc8\r\n  [\"Food Sharing\", \"c1295995-f0c4-4350-9ea0-c97c8a134a34\"\r\n  ],   //without -degree nodes snapshot \r\n  // [\"CORD-19 Citation Graph 06-02\", \"4bf882d3-8966-4f41-a590-acafeb998d2a\"],\r\n  [\"Mafia Family\", \"ea3fa573-78e0-465a-98ff-f6a02d9884c2\"],\r\n  // [\"US flight Network\", '946e933d-81f5-4ade-a8f7-a02941aae953']\r\n  \r\n];\r\n\r\n// When resizing window or running on mobile,\r\n// used to determine whether screen\r\n// is considered small.\r\nexport const MOBILE_WIDTH_CUTOFF = 800;\r\nexport const MOBILE_HEIGHT_CUTOFF = 480;\r\n\r\nexport const SCALE_LINEAR = \"Linear Scale\";\r\nexport const SCALE_LOG = \"Log Scale\";\r\nexport const SCALE_CATEGORY = \"Nominal Scale\";\r\n\r\nexport const scales = {\r\n  [SCALE_LINEAR]: scale.scaleLinear,\r\n  [SCALE_LOG]: scale.scaleLog,\r\n  [SCALE_CATEGORY] : scale.scaleOrdinal\r\n};\r\n\r\nexport const LOAD_USER_CONFIG = \"load-user-config\";\r\nexport const LOADED_USER_CONFIG = \"loaded-user-config\";\r\nexport const SAVE_USER_CONFIG = \"save-user-config\";\r\nexport const SAVED_USER_CONFIG = \"saved-user-config\";\r\n\r\nexport const FETCH_WORKSPACE_PROJECTS = \"fetch-workspace-projects\";\r\nexport const FETCHED_WORKSPACE_PROJECTS = \"fetched-workspace-projects\";\r\nexport const MENU_NEW_PROJECT = \"menu-new-project\";\r\nexport const CREATE_NEW_PROJECT = \"create-new-project\";\r\nexport const CREATED_NEW_PROJECT = \"created-new-project\";\r\n\r\nexport const DELETE_FILE = \"delete-file\";\r\nexport const RENAME_FILE = \"rename-file\";\r\n\r\nexport const LOAD_GRAPH_JSON = \"load-graph-json\";\r\nexport const LOAD_GRAPH_SQLITE = \"load-graph-sqlite\";\r\nexport const LOADED_GRAPH_JSON = \"loaded-graph-json\";\r\nexport const LOAD_TOAST_KEY = \"load-toast-key\";\r\n\r\nexport const SAVE_GRAPH_JSON = \"save-graph-json\";\r\nexport const SAVE_GRAPH_SQLITE = \"save-graph-sqlite\";\r\nexport const SAVED_GRAPH_JSON = \"saved-graph-json\";\r\nexport const SAVE_TOAST_KEY = \"save-const-key\";\r\n\r\nexport const MENU_LOAD = \"menu-load\";\r\nexport const MENU_IMPORT_CSV = \"menu-import-csv\";\r\nexport const MENU_SAVE_GRAPH_STATE = \"menu-save-graph-state\";\r\nexport const MENU_SAVE_GRAPH_STATE_TO_PROJECT =\r\n  \"menu-save-graph-state-to-project\";\r\nexport const MENU_SAVE_GRAPH_SQLITE = \"menu-save-graph-sqlite\";\r\nexport const SAVE_GRAPH_STATE = \"save-graph-state\";\r\nexport const SAVED_GRAPH_STATE = \"saved-graph-state\";\r\nexport const SAVE_GRAPH_STATE_TO_PROJECT = \"save-graph-state-to-project\";\r\nexport const SAVED_GRAPH_STATE_TO_PROJECT = \"saved-graph-state-to-project\";\r\nexport const LOAD_GRAPH_STATE = \"load-graph-state\";\r\nexport const LOADED_GRAPH_STATE = \"loaded-graph-state\";\r\n\r\nexport const SHOW_ITEM_IN_FOLDER = \"show-item-in-folder\";\r\nexport const SHOW_WORKSPACE_FOLDER = 'show-workspace-folder';\r\nexport const CHANGE_WORKSPACE_FOLDER = 'change-workspace-folder';\r\nexport const CHANGED_WORKSPACE_FOLDER = 'changed-workspace-folder';\r\n\r\nexport const CHOOSE_EDGE_FILE = \"choose-edge-file\";\r\nexport const CHOSEN_EDGE_FILE = \"chosen-edge-file\";\r\nexport const CHOOSE_NODE_FILE = \"choose-node-file\";\r\nexport const PEAKED_NODE_FILE = \"peaked-node-file\";\r\nexport const CHOSEN_NODE_FILE = \"chosen-node-file\";\r\n\r\nexport const CHOOSE_GRAPH_FILE = \"choose-graph-file\";\r\nexport const CHOSEN_GRAPH_FILE = \"chosen-graph-file\";\r\nexport const CHOOSE_STATE_FILE = \"choose-state-file\";\r\nexport const CHOSEN_STATE_FILE = \"chosen-state-file\";\r\n\r\nexport const NODE_AND_EDGE_FILE = \"both nodes and edges file\";\r\nexport const ONLY_EDGE_FILE = \"only edges file\";\r\n\r\nexport const GRAPH_AND_STATE_FILE = \"both graph and snapshot file\";\r\nexport const ONLY_GRAPH_FILE = \"only graph file\";\r\nexport const IMPORT_GRAPH = \"import-graph\";\r\nexport const IMPORTED_GRAPH = \"imported-graph\";\r\nexport const OPEN_GRAPH = \"open-graph\";\r\nexport const OPENED_GRAPH = \"opened-graph\";\r\n\r\nexport const SEARCH_REQUEST = \"search-request\";\r\nexport const SEARCH_RESPONSE = \"search-response\";\r\n\r\nexport const ADD_NODES = \"add-nodes\";\r\nexport const ADD_SELECT_NODE = \"add-select-node\";\r\nexport const ADD_NODE = \"add-node\";\r\nexport const GET_NEIGHBORS = \"get-neighbors\";\r\n","import { runInAction, toJS } from 'mobx';\r\nimport { Intent } from '@blueprintjs/core';\r\nimport { demapify } from 'es6-mapify';\r\n\r\nimport appState from '../stores/index';\r\nimport {\r\n  ADD_NODE,\r\n  ADD_NODES,\r\n  ADD_SELECT_NODE,\r\n  CHOOSE_EDGE_FILE,\r\n  CHOOSE_GRAPH_FILE,\r\n  CHOOSE_NODE_FILE,\r\n  CHOOSE_STATE_FILE,\r\n  CHOSEN_EDGE_FILE,\r\n  CHOSEN_GRAPH_FILE,\r\n  CHOSEN_NODE_FILE,\r\n  CHOSEN_STATE_FILE,\r\n  GET_NEIGHBORS,\r\n  IMPORT_GRAPH,\r\n  IMPORTED_GRAPH,\r\n  LOAD_GRAPH_SQLITE,\r\n  LOADED_GRAPH_SQLITE,\r\n  LOADED_GRAPH_STATE,\r\n  MENU_IMPORT_CSV,\r\n  MENU_LOAD,\r\n  MENU_NEW_PROJECT,\r\n  MENU_SAVE_GRAPH_SQLITE,\r\n  MENU_SAVE_GRAPH_STATE,\r\n  CREATE_NEW_PROJECT,\r\n  CREATED_NEW_PROJECT,\r\n  OPEN_GRAPH,\r\n  OPENED_GRAPH,\r\n  FETCH_WORKSPACE_PROJECTS,\r\n  FETCHED_WORKSPACE_PROJECTS,\r\n  SAVE_GRAPH_SQLITE,\r\n  SAVE_GRAPH_STATE,\r\n  SAVED_GRAPH_JSON,\r\n  SAVED_GRAPH_STATE,\r\n  SEARCH_REQUEST,\r\n  SEARCH_RESPONSE,\r\n  SHOW_ITEM_IN_FOLDER,\r\n  SAVED_GRAPH_STATE_TO_PROJECT,\r\n  MENU_SAVE_GRAPH_STATE_TO_PROJECT,\r\n  SAVE_GRAPH_STATE_TO_PROJECT,\r\n  DELETE_FILE,\r\n  RENAME_FILE,\r\n  SHOW_WORKSPACE_FOLDER,\r\n  LOAD_USER_CONFIG,\r\n  LOADED_USER_CONFIG,\r\n  SAVED_USER_CONFIG,\r\n  SAVE_USER_CONFIG,\r\n  CHANGE_WORKSPACE_FOLDER,\r\n  CHANGED_WORKSPACE_FOLDER,\r\n} from '../constants/index';\r\nimport { toaster } from '../notifications/client';\r\n\r\nimport createGraph from 'ngraph.graph';\r\nimport pageRank from 'ngraph.pagerank';\r\nimport path from 'ngraph.path';\r\nimport parse from \"csv-parse/lib/sync\";\r\n// import worker from './worker';\r\n\r\n// TODO: Register web worker used by Argo-lite.\r\n\r\n// Argo-lite replacement for electron ipc.\r\nconst ipcRenderer = {\r\n  send: (eventString) => {\r\n    console.log(`ipcRenderer.send(${eventString}, ...)`);\r\n  }\r\n}\r\n\r\nconst Nonloc = 360\r\n\r\nexport default function registerIPC() {\r\n  // ipcRenderer.on(LOADED_USER_CONFIG, (event, loadedObject) => {\r\n  //   // Overwrite PreferenceStore values according to user config values,\r\n  //   // if present.\r\n  //   if (loadedObject.darkMode) {\r\n  //     appState.preferences.darkMode = true;\r\n  //   }\r\n  //   if (loadedObject.workspace && loadedObject.workspace != '') {\r\n  //     appState.preferences.workspacePath = loadedObject.workspace;\r\n  //   }\r\n  // });\r\n\r\n  // ipcRenderer.on(SAVED_USER_CONFIG, (event) => {\r\n  //   toaster.show({\r\n  //     message: \"User configuration saved\",\r\n  //     intent: Intent.SUCCESS,\r\n  //     iconName: 'saved',\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(LOADED_GRAPH_SQLITE, (event, loadedObject) => {\r\n  //   runInAction('load saved graph', () => {\r\n  //     appState.graph.rawGraph = loadedObject.rawGraph;\r\n  //     appState.graph.metadata = loadedObject.metadata;\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(OPENED_GRAPH, (event, loadedObject) => {\r\n  //   runInAction('load saved graph and state', () => {\r\n  //     console.log(loadedObject);\r\n  //     appState.graph.rawGraph = loadedObject.rawGraph;\r\n  //     appState.graph.metadata = loadedObject.metadata;\r\n  //     if (loadedObject.state) {\r\n  //       appState.graph.loadImmediateStates(loadedObject.state);\r\n  //     }\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(LOADED_GRAPH_STATE, (event, loadedObject) => {\r\n  //   appState.graph.loadImmediateStates(loadedObject);\r\n  // });\r\n\r\n  // ipcRenderer.on(SAVED_GRAPH_STATE, (event, savedFilePath) => {\r\n  //   toaster.show({\r\n  //     message: `Saved graph snapshot file to ${savedFilePath}`,\r\n  //     intent: Intent.SUCCESS,\r\n  //     iconName: 'saved',\r\n  //     action: {\r\n  //       onClick: () => ipcRenderer.send(SHOW_ITEM_IN_FOLDER, savedFilePath),\r\n  //       text: 'Show in Folder',\r\n  //     },\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(SAVED_GRAPH_STATE_TO_PROJECT, (event, snapshotName) => {\r\n  //   toaster.show({\r\n  //     message: `Saved to snapshot ${snapshotName}`,\r\n  //     intent: Intent.SUCCESS,\r\n  //     iconName: 'saved',\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(SAVED_GRAPH_JSON, (event, savedFilePath) => {\r\n  //   toaster.show({\r\n  //     message: `Saved graph file to ${savedFilePath}`,\r\n  //     intent: Intent.SUCCESS,\r\n  //     iconName: 'saved',\r\n  //     action: {\r\n  //       onClick: () => ipcRenderer.send(SHOW_ITEM_IN_FOLDER, savedFilePath),\r\n  //       text: 'Show in Folder',\r\n  //     },\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(CHOSEN_NODE_FILE, (event, path) => {\r\n  //   appState.import.importConfig.nodeFile.path = path;\r\n  // });\r\n\r\n  // ipcRenderer.on(CHOSEN_EDGE_FILE, (event, path) => {\r\n  //   appState.import.importConfig.edgeFile.path = path;\r\n  // });\r\n\r\n  // ipcRenderer.on(CHOSEN_GRAPH_FILE, (event, path) => {\r\n  //   appState.import.graphFile = path;\r\n  // });\r\n\r\n  // ipcRenderer.on(CHOSEN_STATE_FILE, (event, path) => {\r\n  //   appState.import.stateFile = path;\r\n  // });\r\n\r\n  // ipcRenderer.on(IMPORTED_GRAPH, (event) => {\r\n  //   appState.import.loading = false;\r\n  //   appState.import.dialogOpen = false;\r\n  //   appState.project.isFetching = true;\r\n  //   fetchWorkspaceProjects();\r\n  // });\r\n\r\n  // ipcRenderer.on(ADD_NODES, (event, toAdd) => {\r\n  //   runInAction('add nodes and edges to graph', () => {\r\n  //     appState.graph.rawGraph.nodes = appState.graph.rawGraph.nodes.concat(\r\n  //       toAdd.nodes,\r\n  //     );\r\n  //     appState.graph.rawGraph.edges = appState.graph.rawGraph.edges.concat(\r\n  //       toAdd.edges,\r\n  //     );\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(ADD_SELECT_NODE, (event, toAdd) => {\r\n  //   runInAction('add nodes and edges to graph', () => {\r\n  //     appState.graph.rawGraph.nodes = appState.graph.rawGraph.nodes.concat(\r\n  //       toAdd.nodes,\r\n  //     );\r\n  //     appState.graph.rawGraph.edges = appState.graph.rawGraph.edges.concat(\r\n  //       toAdd.edges,\r\n  //     );\r\n  //   });\r\n\r\n  //   appState.graph.frame.setLastNode(toAdd.nodes[0].node_id);\r\n  //   appState.graph.frame.dragLastNode();\r\n  // });\r\n\r\n  // ipcRenderer.on(SEARCH_RESPONSE, (event, candidates) => {\r\n  //   var cands = JSON.parse(candidates);\r\n  //   var ckeys = cands.map(x => x.node_id);\r\n  //   appState.search.allCands = Object.values(cands);\r\n  //   appState.search.pageNum = 0;\r\n  //   appState.search.nPerPage = 10;\r\n  //   appState.search.numCandidates = appState.search.allCands.length;\r\n  //   appState.search.maxPage = parseInt(\r\n  //     appState.search.allCands.length / appState.search.nPerPage,\r\n  //   );\r\n  //   appState.search.pages = [...Array(appState.search.maxPage).keys()];\r\n  //   appState.search.candidates = appState.search.allCands.slice(0, 10);\r\n  //   appState.search.panelOpen = true;\r\n  //   if (appState.graph.frame) {\r\n  //     appState.graph.frame.highlightNodeIds(ckeys, true);\r\n  //   }\r\n  // });\r\n\r\n  // ipcRenderer.on(LOADED_GRAPH_STATE, (event, stateStr) => {\r\n  //   appState.graph.loadImmediateStates(stateStr);\r\n  // });\r\n\r\n  // ipcRenderer.on(CREATED_NEW_PROJECT, () => {\r\n  //   fetchWorkspaceProjects();\r\n  // });\r\n\r\n  // ipcRenderer.on(FETCHED_WORKSPACE_PROJECTS, (event, projects) => {\r\n  //   appState.project.isFetching = false;\r\n  //   appState.project.projects = projects;\r\n  //   // Update mobx state on projects, useful for updating the components after deleting/renaming etc.\r\n  //   if (appState.project.currentProject !== null) {\r\n  //     // There is a project currently selected (showing in a ProjectDetailDialog etc.)\r\n  //     // This fetch needs to update the dialog also\r\n  //     const temp = appState.project.projects.filter((project) => {\r\n  //       return project.projectPath === appState.project.currentProject.projectPath;\r\n  //     });\r\n  //     if (temp.length === 1) {\r\n  //       appState.project.currentProject = temp[0];\r\n  //     } else {\r\n  //       appState.project.currentProject = null;\r\n  //     }\r\n\r\n  //   }\r\n  // });\r\n\r\n  // ipcRenderer.on(CHANGED_WORKSPACE_FOLDER, (events, newWorkspaceDirectory) => {\r\n  //   appState.preferences.workspacePath = newWorkspaceDirectory;\r\n  //   appState.preferences.saveUserConfig();\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_NEW_PROJECT, () => {\r\n  //   appState.project.isNewProjectDialogOpen = true;\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_LOAD, () => {\r\n  //   appState.preferences.openDialogOpen = true;\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_IMPORT_CSV, () => {\r\n  //   appState.import.dialogOpen = true;\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_SAVE_GRAPH_STATE, () => {\r\n  //   // Original implementation for opening a traditional system-level save file dialog\r\n  //   // ipcRenderer.send(SAVE_GRAPH_STATE, appState.graph.saveImmediateStates());\r\n\r\n  //   // New implementation opening a dialog that saves snapshot to project\r\n  //   appState.project.isSaveSnapshotDialogOpen = true;\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_SAVE_GRAPH_STATE_TO_PROJECT, () => {\r\n  //   requestSaveSnapshot();\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_SAVE_GRAPH_SQLITE, requestSaveSQLite);\r\n}\r\n\r\nexport function requestLoadSQLite() {\r\n  ipcRenderer.send(LOAD_GRAPH_SQLITE);\r\n}\r\n\r\nexport function addNode(node_id) {\r\n  ipcRenderer.send(ADD_NODE, node_id);\r\n}\r\n\r\nexport function requestNeighbors(\r\n  node_id,\r\n  attr = 'degree',\r\n  num = '10',\r\n  order = 'desc',\r\n) {\r\n  ipcRenderer.send(GET_NEIGHBORS, node_id, attr, num, order);\r\n}\r\n\r\nfunction requestSaveSQLite() {\r\n  ipcRenderer.send(\r\n    SAVE_GRAPH_SQLITE,\r\n    JSON.stringify({\r\n      graph: toJS(appState.graph.rawGraph),\r\n      metadata: toJS(appState.graph.metadata),\r\n      nodes: toJS(appState.graph.nodes),\r\n      overrides: toJS(demapify(appState.graph.overrides)),\r\n      nodePositions: appState.graph.frame.getPositions(),\r\n    }),\r\n  );\r\n}\r\n\r\nexport function requestChooseNodeFile(hasHeader) {\r\n  ipcRenderer.send(CHOOSE_NODE_FILE, hasHeader);\r\n}\r\n\r\nexport function requestChooseEdgeFile(hasHeader) {\r\n  ipcRenderer.send(CHOOSE_EDGE_FILE, hasHeader);\r\n}\r\n\r\nexport function requestChooseGraphFile() {\r\n  ipcRenderer.send(CHOOSE_GRAPH_FILE);\r\n}\r\n\r\nexport function requestChooseStateFile() {\r\n  ipcRenderer.send(CHOOSE_STATE_FILE);\r\n}\r\n\r\nexport function requestOpen() {\r\n  ipcRenderer.send(\r\n    OPEN_GRAPH,\r\n    appState.import.graphFile,\r\n    appState.import.stateFile,\r\n  );\r\n}\r\n\r\n// Request to delete a file specified at filePath\r\nexport function requestDelete(filePath) {\r\n  ipcRenderer.send(DELETE_FILE, filePath);\r\n}\r\n\r\n/**\r\n * Request to rename a file specified at filePath\r\n * @param filePath where the file to be renamed is located\r\n * @param newName new file name with extension\r\n */\r\nexport function requestRename(filePath, newName) {\r\n  ipcRenderer.send(RENAME_FILE, filePath, newName);\r\n}\r\n\r\nexport function requestSaveSnapshot(snapshotName) {\r\n  if (!snapshotName) {\r\n    // Default: Use the currently opened snapshot name (if no snapshot opened, the default name in the ProjectStore will be used)\r\n    ipcRenderer.send(SAVE_GRAPH_STATE_TO_PROJECT, appState.graph.saveImmediateStates(), appState.project.currentProject.projectPath, appState.project.currentSnapshotName);\r\n  } else {\r\n    ipcRenderer.send(SAVE_GRAPH_STATE_TO_PROJECT, appState.graph.saveImmediateStates(), appState.project.currentProject.projectPath, snapshotName);\r\n  }\r\n}\r\n\r\nexport function requestImportGraphFromCSV(hasNodeFile, delimiter, newProjectName) {\r\n  if (!newProjectName) {\r\n    newProjectName = 'Test Project';\r\n  }\r\n  appState.import.loading = true;\r\n  const importConfig = {\r\n    hasNodeFile,\r\n    nodes: {\r\n      path: appState.import.importConfig.nodeFile.path,\r\n      hasColumns: appState.import.importConfig.nodeFile.hasColumns,\r\n      columns: toJS(appState.import.importConfig.nodeFile.columns),\r\n      mapping: toJS(appState.import.importConfig.nodeFile.mapping),\r\n    },\r\n    edges: {\r\n      path: appState.import.importConfig.edgeFile.path,\r\n      hasColumns: appState.import.importConfig.edgeFile.hasColumns,\r\n      columns: toJS(appState.import.importConfig.edgeFile.columns),\r\n      mapping: toJS(appState.import.importConfig.edgeFile.mapping),\r\n      createMissing: appState.import.importConfig.edgeFile.createMissing,\r\n    },\r\n    delimiter,\r\n    newProjectName\r\n  };\r\n  ipcRenderer.send(IMPORT_GRAPH, importConfig);\r\n\r\n  // TODO: Potentially separate this out to web worker.\r\n  importGraphFromCSV(importConfig).then(graph => {\r\n    // Run post import filters\r\n    appState.import.postImportFilter(graph.rawGraph);\r\n\r\n    runInAction('load imported graph', () => {\r\n      appState.graph.rawGraph = graph.rawGraph;\r\n      appState.graph.metadata = graph.metadata;\r\n      appState.graph.setUpFrame();\r\n    });\r\n    // Reinitialize global configs\r\n    appState.graph.nodes = appState.graph.initialGlobalConfig.nodes;\r\n    appState.graph.scatterplot = appState.graph.initialGlobalConfig.scatterplot;\r\n    appState.graph.overrides = new Map();\r\n    appState.import.loading = false;\r\n    appState.import.dialogOpen = false;\r\n    // Sync preference store with graph-frontend frame\r\n    // if (!appState.preferences.darkMode) { // assume frame defaults to dark\r\n    //   appState.graph.frame.toggleDark();\r\n    // }\r\n    if (appState.preferences.minimapShowing) {\r\n      appState.graph.frame.showMiniMap();\r\n    } else {\r\n      appState.graph.frame.hideMiniMap();\r\n    }\r\n    // Newly imported graph shouldn't have label showing\r\n    appState.graph.frame.turnOffLabelCSSRenderer();\r\n  });\r\n}\r\n\r\nexport function requestImportGraphFromGexf() {\r\n  importGraphFromGexf().then(graph => {\r\n    // Run post import filters\r\n    appState.import.postImportFilter(graph.rawGraph);\r\n\r\n    runInAction('load imported graph', () => {\r\n      appState.graph.rawGraph = graph.rawGraph;\r\n      appState.graph.metadata = graph.metadata;\r\n      appState.graph.setUpFrame();\r\n    });\r\n    // Reinitialize global configs\r\n    appState.graph.nodes = appState.graph.initialGlobalConfig.nodes;\r\n    appState.graph.scatterplot = appState.graph.initialGlobalConfig.scatterplot;\r\n    appState.graph.overrides = new Map();\r\n    appState.import.loading = false;\r\n    appState.import.gexfDialogOpen = false;\r\n    // Sync preference store with graph-frontend frame\r\n    // if (!appState.preferences.darkMode) { // assume frame defaults to dark\r\n    //   appState.graph.frame.toggleDark();\r\n    // }\r\n    if (appState.preferences.minimapShowing) {\r\n      appState.graph.frame.showMiniMap();\r\n    } else {\r\n      appState.graph.frame.hideMiniMap();\r\n    }\r\n    // Newly imported graph shouldn't have label showing\r\n    appState.graph.frame.turnOffLabelCSSRenderer();\r\n  });\r\n}\r\n\r\nasync function readCSV(fileObject, hasHeader, delimiter) {\r\n  const file = fileObject;\r\n  const reader = new FileReader();\r\n  reader.readAsText(file);\r\n  return new Promise((resolve, reject) => {\r\n    reader.onload = () => {\r\n      const content = reader.result;\r\n      try {\r\n        if (hasHeader) {\r\n          resolve(parse(content, {\r\n            comment: \"#\",\r\n            trim: true,\r\n            auto_parse: true,\r\n            skip_empty_lines: true,\r\n            columns: hasHeader,\r\n            delimiter\r\n          }));\r\n        }\r\n        resolve(parse(content, {\r\n          comment: \"#\",\r\n          trim: true,\r\n          auto_parse: true,\r\n          skip_empty_lines: true,\r\n          columns: undefined,\r\n          delimiter\r\n        }));\r\n      } catch (err) {\r\n        let msg = err.message\r\n        let mismatch = msg.indexOf(\"Invalid Record Length:\") == 0\r\n        if (mismatch) {\r\n          msg = msg.replace(\"is\", \"set to\")\r\n          msg = msg.replace(\"got\", \"but detected\")\r\n        }\r\n        toaster.show({\r\n          message: \"Error: \" + msg,\r\n          intent: Intent.DANGER,\r\n          timeout: -1\r\n        });\r\n        appState.import.loading = false;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nasync function parseGEXF(content) {\r\n  const parser = new DOMParser();\r\n  const xmlDoc = parser.parseFromString(content, \"text/xml\");\r\n  const xmlEdges = xmlDoc.getElementsByTagName('edge');\r\n  const xmlNodes = xmlDoc.getElementsByTagName('node');\r\n  const xmlAttri = xmlDoc.getElementsByTagName('attributes')\r\n\r\n  let nodeAttri = [];\r\n  let edgeAttri = [];\r\n  const edgesArr = [];\r\n  const nodesArr = [];\r\n  const nodeAttriOrdered = {};\r\n\r\n  for (let i = 0, l = xmlAttri.length; i < l; i++) {\r\n    const curr = xmlAttri[i];\r\n    if (curr.getAttribute('class') === 'node') {\r\n      nodeAttri = curr.getElementsByTagName('attribute');\r\n    }\r\n    else if (curr.getAttribute('class') === 'edge') {\r\n      edgeAttri = curr.getElementsByTagName('attribute');\r\n    }\r\n  }\r\n\r\n  for (let i = 0, l = nodeAttri.length; i < l; i++) {\r\n    const curr = nodeAttri[i];\r\n    nodeAttriOrdered[curr.getAttribute(\"id\")] = curr.getAttribute(\"title\");\r\n  }\r\n\r\n  for (let i = 0, l = xmlEdges.length; i < l; i++) {\r\n    const currEdge = xmlEdges[i];\r\n    const s = currEdge.getAttribute('source').toString();\r\n    const t = currEdge.getAttribute('target').toString();\r\n    edgesArr.push({\r\n      source_id: s,\r\n      target_id: t,\r\n    });\r\n  }\r\n  for (let i = 0, l = xmlNodes.length; i < l; i++) {\r\n    const currNode = xmlNodes[i];\r\n    const id = currNode.getAttribute('id').toString();\r\n    const nodeAttvalues = currNode.getElementsByTagName(\"attvalues\");\r\n    const nodeAttvalue = [];\r\n    if (nodeAttvalues.length != 0) {\r\n      nodeAttvalue = nodeAttvalues[0].getElementsByTagName(\"attvalue\");\r\n    }\r\n    let node = { id: id, degree: 0, pagerank: 0, node_id: id };\r\n    for (let j = 0; j < nodeAttvalue.length; j++) {\r\n      const value = nodeAttvalue[j].attributes[\"value\"].value;\r\n      const attributeIdElementAttribute = nodeAttvalue[j].attributes[\"for\"] || nodeAttvalue[j].attributes[\"id\"];\r\n      const attributeId = attributeIdElementAttribute.value;\r\n      node[nodeAttriOrdered[attributeId]] = value;\r\n    }\r\n    for (let j = 0; j < currNode.attributes.length; j++) {\r\n      const currAttri = currNode.attributes[j];\r\n      node[currAttri.name] = currAttri.value;\r\n    }\r\n    node[\"id\"] = id;\r\n    node[\"node_id\"] = id;\r\n    nodesArr.push(node);\r\n  }\r\n  return [nodesArr, edgesArr];\r\n}\r\n\r\nasync function readGEXF(fileObject) {\r\n  const file = fileObject;\r\n  const reader = new FileReader();\r\n  reader.readAsText(file);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    reader.onload = () => {\r\n      const content = reader.result;\r\n      resolve(parseGEXF(content));\r\n    }\r\n  });\r\n}\r\n\r\nasync function importGraphFromCSV(config) {\r\n  // Since the CSV lib we use uses int index when there's not header/column names specified\r\n  // but the frontend selector always convert int to string values, we need to\r\n  // manually convert the user-selected fromId and toId values back to int.\r\n  // Note that this should only be done when there's no header provided on the CSV (hasColumns == false).\r\n  const fromId = config.nodes.hasColumns ? config.edges.mapping.fromId : parseInt(config.edges.mapping.fromId);\r\n  const toId = config.nodes.hasColumns ? config.edges.mapping.toId : parseInt(config.edges.mapping.toId);\r\n\r\n  // Create temporary data structures.\r\n  let nodesArr = [];\r\n  // let pathsDict = {};\r\n\r\n  const graph = createGraph();\r\n  const degreeDict = {};\r\n  if (config.hasNodeFile) {\r\n    nodesArr = await readCSV(appState.import.selectedNodeFileFromInput, config.nodes.hasColumns, config.delimiter);\r\n    nodesArr.forEach(node => graph.addNode(node[config.nodes.mapping.id].toString(),\r\n      { id: node[config.nodes.mapping.id].toString(), LatY: parseFloat(node[config.nodes.mapping.LatY]),LonX: parseFloat(node[config.nodes.mapping.LonX]),degree: 0, ...node }));\r\n    nodesArr =\r\n      nodesArr.map(\r\n        n => ({ ...n, id: n[config.nodes.mapping.id].toString(), degree: 0, pagerank: 0, centrality: parseFloat(n['centrality']), 'dist to center': parseFloat(n['distance to center']), LonX: parseFloat(n[config.nodes.mapping.LonX]), LatY: parseFloat(n[config.nodes.mapping.LatY]) }));\r\n    nodesArr.forEach(n => degreeDict[n.id] = 0);\r\n  }\r\n  const edges = await readCSV(appState.import.selectedEdgeFileFromInput, config.edges.hasColumns, config.delimiter);\r\n  if (config.edges.createMissing) {\r\n    edges.forEach((it) => {\r\n      const from = it[fromId].toString();\r\n      const to = it[toId].toString();\r\n      if (!graph.hasNode(from)) {\r\n        graph.addNode(from, { id: from, degree: 0 });\r\n        nodesArr.push({ id: from, degree: 0, pagerank: 0 });\r\n        degreeDict[from] = 0;\r\n      }\r\n      if (!graph.hasNode(to)) {\r\n        graph.addNode(to, { id: to, degree: 0 });\r\n        nodesArr.push({ id: to, degree: 0, pagerank: 0 });\r\n        degreeDict[to] = 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  const edgesSet = new Set();\r\n\r\n  const edgesArr = [];\r\n\r\n  const addEdge = (from, to, fromlocLatY, fromlocLonX, tolocLatY, tolocLonX, withinState, withinFamily) => {\r\n    const edgeKey = `${from}👉${to}`;\r\n    if (edgesSet.has(edgeKey)) {\r\n      return;\r\n    }\r\n    edgesSet.add(edgeKey);\r\n    var data = {\r\n      fromlocLatY: fromlocLatY,\r\n      fromlocLonX: fromlocLonX,\r\n      tolocLatY: tolocLatY,\r\n      tolocLonX: tolocLonX,\r\n      withinState: withinState,\r\n      withinFamily: withinFamily,\r\n\r\n    }\r\n    graph.addLink(from, to, data);\r\n\r\n    degreeDict[from] += 1;\r\n    degreeDict[to] += 1;\r\n    edgesArr.push({\r\n      source_id: from,\r\n      target_id: to,\r\n      fromlocLatY: fromlocLatY,\r\n      fromlocLonX: fromlocLonX,\r\n      tolocLatY: tolocLatY,\r\n      tolocLonX: tolocLonX,\r\n      withinState: withinState,\r\n      withinFamily: withinFamily\r\n    });\r\n  };\r\n\r\n  if (config.hasNodeFile && nodesArr[0].LatY !== undefined && nodesArr[0].LonX !== undefined) {  //node has spatial location info\r\n    edges.forEach(it => {\r\n      const from = it[fromId].toString();\r\n      const to = it[toId].toString();\r\n      var fromlocLatY = parseFloat(graph.getNode(it[fromId].toString()).data.LatY)\r\n      var fromlocLonX = parseFloat(graph.getNode(it[fromId].toString()).data.LonX)\r\n      var tolocLatY = parseFloat(graph.getNode(it[toId].toString()).data.LatY)\r\n      var tolocLonX = parseFloat(graph.getNode(it[toId].toString()).data.LonX) // observable array???\r\n      var withinState = (graph.getNode(to).data.GEOID === graph.getNode(from).data.GEOID)\r\n      var withinFamily = (graph.getNode(to).data.Family === graph.getNode(from).data.Family)\r\n      // fromloc.push(graph.getNode(it[fromId].toString()).data.LatY) \r\n      // fromloc.push(graph.getNode(it[fromId].toString()).data.LonX) \r\n      // toloc.push(graph.getNode(it[toId].toString()).data.LatY)\r\n      // toloc.push(graph.getNode(it[toId].toString()).data.LonX)\r\n      // Argo currently works with undirected graph\r\n      addEdge(from, to, fromlocLatY, fromlocLonX, tolocLatY, tolocLonX, withinState, withinFamily);\r\n      // addEdge(to, from);\r\n    });\r\n  } else {  //doesn't have  spatial location info\r\n    edges.forEach(it => {\r\n      const from = it[fromId].toString();\r\n      const to = it[toId].toString();\r\n      // Argo currently works with undirected graph\r\n      addEdge(from, to, Nonloc, Nonloc, Nonloc, Nonloc);\r\n      // addEdge(to, from);\r\n    });\r\n  }\r\n\r\n  const calDistanceFromLatLonInKm = (lat1, lon1, lat2, lon2) => {\r\n    var p = 0.017453292519943295;    // Math.PI / 180\r\n    var c = Math.cos;\r\n    var a = 0.5 - c((lat2 - lat1) * p) / 2 +\r\n      c(lat1 * p) * c(lat2 * p) *\r\n      (1 - c((lon2 - lon1) * p)) / 2;\r\n\r\n    return 12742 * Math.asin(Math.sqrt(a)); // 2 * R; R = 6371 km\r\n  }\r\n\r\n  //calculate the diatance to centern/ average lat/lon\r\n  const calDIstanceToCenter = () => {\r\n    const latlist = nodesArr.map(n => n['LatY'])\r\n    const lonlist = nodesArr.map(n => n['LonX'])\r\n    const average = (array) => array.reduce((a, b) => a + b) / array.length;\r\n    var avgLat\r\n    var avgLon\r\n    if (latlist.length > 0 && lonlist.length > 0) {\r\n      avgLat = average(latlist)\r\n      avgLon = average(lonlist)\r\n      nodesArr.forEach(function (n, i) {\r\n        n['distance to center'] = calDistanceFromLatLonInKm(avgLat, avgLon, latlist[i], lonlist[i])\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  const calMedianCenter = ()=>{\r\n    const latlist = nodesArr.map(n => n['LatY'])\r\n    const lonlist = nodesArr.map(n => n['LonX'])\r\n    const medianCenter = (values)=>{\r\n      if(values.length ===0) throw new Error(\"No inputs\");\r\n\r\n      const result1 = [...values].sort((a, b) => a - b)\r\n    \r\n      // values.sort(function(a,b){\r\n      //   return a-b;\r\n      // });\r\n    \r\n      var half = Math.floor(result1.length / 2);\r\n      \r\n      if (result1.length % 2)\r\n        return result1[half];\r\n      \r\n      return (result1[half - 1] + result1[half]) / 2.0;\r\n    }\r\n\r\n    if (latlist.length > 0 && lonlist.length > 0) {\r\n      const medianLat = medianCenter(latlist)\r\n      const medianLon = medianCenter(lonlist)\r\n      nodesArr.forEach(function (n, i) {\r\n        n['distance to center'] = calDistanceFromLatLonInKm(medianLat, medianLon, latlist[i], lonlist[i])\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n\r\n  if (nodesArr[0]['LonX'] && nodesArr[0]['LatY']) {\r\n    // calDIstanceToCenter();\r\n  calMedianCenter();\r\n\r\n  }\r\n  const shortestPathPairs = () => {\r\n    let pathFinder = path.aGreedy(graph);\r\n    const pathsArr = []\r\n    const pathsSet = new Set();\r\n\r\n\r\n\r\n    graph.forEachNode(function (fromnode) {\r\n\r\n      graph.forEachNode(function (tonode) {\r\n        if (fromnode.id !== tonode.id) {\r\n          const pathKey1 = `${fromnode.id}👉${tonode.id}`;\r\n          const pathKey2 = `${tonode.id}👉${fromnode.id}`;\r\n          // undirected graph:\r\n          // only add once for undirected graph \r\n          if (!(pathsSet.has(pathKey1)) && !(pathsSet.has(pathKey2)) ) {\r\n            pathsSet.add(pathKey1);\r\n            pathsSet.add(pathKey2);\r\n            pathsArr.push({\r\n             \"source\":fromnode.id,\r\n             \"target\":tonode.id,\r\n            \"path\": pathFinder.find(fromnode.id, tonode.id),\r\n            \"distance\": calDistanceFromLatLonInKm(fromnode.data.LatY, fromnode.data.LonX, tonode.data.LatY, tonode.data.LonX)\r\n          \r\n           })\r\n          }\r\n           \r\n          //directed graph: \r\n        }\r\n\r\n      })\r\n\r\n    })\r\n    // console.log(nodesArr.length)\r\n    // console.log(pathsArr.length)\r\n    return pathsArr\r\n\r\n  }\r\n  const pathsArr = shortestPathPairs();\r\n  const rank = pageRank(graph);\r\n\r\n  nodesArr = nodesArr.map(n => ({ ...n, node_id: n.id, pagerank: rank[n.id], degree: parseInt(degreeDict[n.id] / 2) }));\r\n  const nodekeyList = Object.keys(nodesArr[0])\r\n  const nodePropertyTypes = {}\r\n  nodekeyList.forEach(function (k) {\r\n    nodePropertyTypes[k] = typeof (nodesArr[0][k])\r\n  })\r\n  const uniqueValue = {}\r\n  nodekeyList.forEach(function (k, i) {\r\n\r\n    if (nodePropertyTypes[k] == 'string') {\r\n      uniqueValue[k] = [...new Set(nodesArr.map(item => item[k]))]\r\n    } else {\r\n      const valuea = nodesArr.map(function (el) { return el[k]; })\r\n      const minv = Math.min(...valuea)\r\n      const maxv = Math.max(...valuea)\r\n      uniqueValue[k] = [minv, maxv]\r\n    }\r\n  })\r\n  return {\r\n    rawGraph: { nodes: nodesArr, edges: edgesArr, paths: pathsArr },\r\n    metadata: {\r\n      snapshotName: 'Untitled Graph',\r\n      fullNodes: nodesArr.length,\r\n      fullEdges: edgesArr.length, //Math.floor(edgesArr.length / 2), // Counting undirected edges\r\n      nodeProperties: nodekeyList,\r\n      nodePropertyTypes: nodePropertyTypes,\r\n      uniqueValue: uniqueValue,\r\n      nodeComputed: ['pagerank', 'degree', 'centrality', 'distance to center', 'shortest path', 'pair distance'],\r\n      edgeProperties: ['source_id', 'target_id'],\r\n     \r\n    },\r\n  }\r\n}\r\n\r\nexport async function importGraphFromGexf() {\r\n  const gexfParsed = await readGEXF(appState.import.selectedGexfFileFromInput);\r\n  let nodesArr = gexfParsed[0];\r\n  const edges = gexfParsed[1];\r\n  const graph = createGraph();\r\n  const degreeDict = {};\r\n\r\n  nodesArr.forEach((it) => {\r\n    const currNode = it[\"id\"].toString();\r\n    if (!graph.hasNode(currNode)) {\r\n      graph.addNode(currNode, it);\r\n      degreeDict[currNode] = 0;\r\n    }\r\n  });\r\n\r\n  const edgesSet = new Set();\r\n\r\n  const edgesArr = [];\r\n\r\n  const addEdge = (from, to) => {\r\n    const edgeKey = `${from}👉${to}`;\r\n    if (edgesSet.has(edgeKey)) {\r\n      return;\r\n    }\r\n    edgesSet.add(edgeKey);\r\n    graph.addLink(from, to);\r\n    degreeDict[from] += 1;\r\n    degreeDict[to] += 1;\r\n    edgesArr.push({\r\n      source_id: from,\r\n      target_id: to,\r\n    });\r\n  };\r\n\r\n  edges.forEach(it => {\r\n    const from = it[\"source_id\"].toString();\r\n    const to = it[\"target_id\"].toString();\r\n\r\n    // Argo currently works with undirected graph\r\n    addEdge(from, to);\r\n    // addEdge(to, from);\r\n  });\r\n\r\n  const calDistanceFromLatLonInKm = (lat1, lon1, lat2, lon2) => {\r\n    var p = 0.017453292519943295;    // Math.PI / 180\r\n    var c = Math.cos;\r\n    var a = 0.5 - c((lat2 - lat1) * p) / 2 +\r\n      c(lat1 * p) * c(lat2 * p) *\r\n      (1 - c((lon2 - lon1) * p)) / 2;\r\n\r\n    return 12742 * Math.asin(Math.sqrt(a)); // 2 * R; R = 6371 km\r\n  }\r\n\r\n  //calculate the diatance to center/ average lat/lon\r\n  const calDIstanceToCenter = () => {\r\n    const latlist = nodesArr.map(n => n['LatY'])\r\n    const lonlist = nodesArr.map(n => n['LonX'])\r\n    const average = (array) => array.reduce((a, b) => a + b) / array.length;\r\n    var avgLat\r\n    var avgLon\r\n    if (latlist.length > 0 && lonlist.length > 0) {\r\n      avgLat = average(latlist)\r\n      avgLon = average(lonlist)\r\n      nodesArr.forEach(function (n, i) {\r\n        n['distance to center'] = calDistanceFromLatLonInKm(avgLat, avgLon, latlist[i], lonlist[i])\r\n      })\r\n    }\r\n  }\r\n\r\n  const calMedianCenter = ()=>{\r\n    const latlist = nodesArr.map(n => n['LatY'])\r\n    const lonlist = nodesArr.map(n => n['LonX'])\r\n    const medianCenter = (values)=>{\r\n      if(values.length ===0) throw new Error(\"No inputs\");\r\n    \r\n      values.sort(function(a,b){\r\n        return a-b;\r\n      });\r\n    \r\n      var half = Math.floor(values.length / 2);\r\n      \r\n      if (values.length % 2)\r\n        return values[half];\r\n      \r\n      return (values[half - 1] + values[half]) / 2.0;\r\n    }\r\n\r\n    if (latlist.length > 0 && lonlist.length > 0) {\r\n      const medianLat = medianCenter(latlist)\r\n      const medianLon = medianCenter(lonlist)\r\n      nodesArr.forEach(function (n, i) {\r\n        n['distance to center'] = calDistanceFromLatLonInKm(medianLat, medianLon, latlist[i], lonlist[i])\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n\r\n  if (nodesArr[0]['LonX'] && nodesArr[0]['LatY']) {\r\n    // calDIstanceToCenter();\r\n    calMedianCenter();\r\n  }\r\n\r\n  const shortestPathPairs = () => {\r\n    let pathFinder = path.aGreedy(graph);\r\n    const pathsArr = []\r\n    const pathsSet = new Set();\r\n\r\n\r\n\r\n    graph.forEachNode(function (fromnode) {\r\n\r\n      graph.forEachNode(function (tonode) {\r\n        if (fromnode.id !== tonode.id) {\r\n          const pathKey1 = `${fromnode.id}👉${tonode.id}`;\r\n          const pathKey2 = `${tonode.id}👉${fromnode.id}`;\r\n          // undirected graph:\r\n          // only add once for undirected graph \r\n          if (!(pathsSet.has(pathKey1)) && !(pathsSet.has(pathKey2)) ) {\r\n            pathsSet.add(pathKey1)\r\n            pathsSet.add(pathKey2)\r\n            pathsArr.push({\r\n             \"source\":fromnode.id,\r\n             \"target\":tonode.id,\r\n            \"path\": pathFinder.find(fromnode.id, tonode.id),\r\n            \"distance\": calDistanceFromLatLonInKm(fromnode.data.LatY, fromnode.data.LonX, tonode.data.LatY, tonode.data.LonX)\r\n          \r\n           })\r\n          }\r\n           \r\n          //directed graph: \r\n        }\r\n\r\n      })\r\n\r\n    })\r\n    return pathsArr\r\n\r\n  }\r\n  const pathsArr = shortestPathPairs();\r\n\r\n  const rank = pageRank(graph);\r\n  nodesArr = nodesArr.map(n => ({ ...n, node_id: n.id, pagerank: rank[n.id], degree: parseInt(degreeDict[n.id] / 2) }));\r\n  const nodekeyList = Object.keys(nodesArr[0])\r\n  const nodePropertyTypes = {}\r\n  nodekeyList.forEach(function (k) {\r\n    nodePropertyTypes[k] = typeof (nodesArr[0][k])\r\n  })\r\n  const uniqueValue = {}\r\n  nodekeyList.forEach(function (k, i) {\r\n\r\n    if (nodePropertyTypes[k] == 'string') {\r\n      uniqueValue[k] = [...new Set(nodesArr.map(item => item[k]))]\r\n    } else {\r\n      const valuea = nodesArr.map(function (el) { return el[k]; })\r\n      const minv = Math.min(...valuea)\r\n      const maxv = Math.max(...valuea)\r\n      uniqueValue[k] = [minv, maxv]\r\n    }\r\n  })\r\n  return {\r\n    rawGraph: { nodes: nodesArr, edges: edgesArr , paths: pathsArr},\r\n    metadata: {\r\n      snapshotName: 'Untitled Graph',\r\n      fullNodes: nodesArr.length,\r\n      fullEdges: edgesArr.length, //Math.floor(edgesArr.length / 2), // Counting undirected edges\r\n      nodeProperties: nodekeyList,\r\n      nodePropertyTypes: nodePropertyTypes,\r\n      uniqueValue: uniqueValue,\r\n      nodeComputed: ['pagerank', 'degree', 'centrality', 'distance to center', 'shortest path', 'pair distance'],\r\n      edgeProperties: ['source_id', 'target_id'],\r\n     \r\n    },\r\n  }\r\n}\r\n\r\nexport function runSearch(searchStr) {\r\n  ipcRenderer.send(SEARCH_REQUEST, searchStr, appState.graph.searchOrder);\r\n}\r\n\r\nexport function fetchWorkspaceProjects() {\r\n  ipcRenderer.send(FETCH_WORKSPACE_PROJECTS);\r\n}\r\n\r\nexport function requestCreateNewProject(projectMetadata) {\r\n  ipcRenderer.send(CREATE_NEW_PROJECT, projectMetadata);\r\n}\r\n\r\nexport function requestOpenWorkspaceFolder() {\r\n  ipcRenderer.send(SHOW_WORKSPACE_FOLDER);\r\n}\r\n\r\nexport function requestLoadUserConfig() {\r\n  ipcRenderer.send(LOAD_USER_CONFIG);\r\n}\r\n\r\nexport function requestSaveUserConfig(userConfig) {\r\n  ipcRenderer.send(SAVE_USER_CONFIG, userConfig);\r\n}\r\n\r\nexport function requestChangeWorkspace() {\r\n  ipcRenderer.send(CHANGE_WORKSPACE_FOLDER);\r\n}","var $ = require(\"jquery\");\r\nfunction Edge(source, target) {\r\n  this.source = source;\r\n  this.target = target;\r\n  this.renderData = {};\r\n}\r\n\r\nfunction Node(id, size = 0.5) {\r\n  this.id = id;\r\n  this.index = id;\r\n  this.in = [];\r\n  this.out = [];\r\n  this.size = size;\r\n  this.renderData = {};\r\n  this.domainData = {};\r\n  this.x = 1;\r\n  this.y = 1;\r\n  this.vx = 1;\r\n  this.vy = 1;\r\n\r\n  /**\r\n   * Tells if a node is connected to a node of a certain id\r\n   */\r\n  this.connectedTo = function(id) {\r\n    outNodeIds = this.out.map(function(outNode) {\r\n      return outNode.id;\r\n    });\r\n    return $.inArray(id, outNodeIds) >= 0;\r\n  };\r\n}\r\n\r\nNode.prototype.connectNode = function(node) {\r\n  if (!this.connectedTo(node.id)) {\r\n    this.out.push(node);\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexports.Edge = Edge;\r\nexports.Node = Node;\r\n","var THREE = require(\"three\");\r\n\r\nTHREE.MeshLine = function() {\r\n  this.positions = [];\r\n\r\n  this.previous = [];\r\n  this.next = [];\r\n  this.side = [];\r\n  this.width = [];\r\n  this.indices_array = [];\r\n  this.uvs = [];\r\n  this.counters = [];\r\n  this.geometry = new THREE.BufferGeometry();\r\n\r\n  this.widthCallback = null;\r\n};\r\n\r\nTHREE.MeshLine.prototype.setGeometry = function(g, c) {\r\n  this.widthCallback = c;\r\n\r\n  this.positions = [];\r\n  this.counters = [];\r\n\r\n  if (g instanceof THREE.Geometry) {\r\n    for (var j = 0; j < g.vertices.length; j++) {\r\n      var v = g.vertices[j];\r\n      var c = j / g.vertices.length;\r\n      this.positions.push(v.x, v.y, v.z);\r\n      this.positions.push(v.x, v.y, v.z);\r\n      this.counters.push(c);\r\n      this.counters.push(c);\r\n    }\r\n  }\r\n\r\n  if (g instanceof THREE.BufferGeometry) {\r\n    // read attribute positions ?\r\n  }\r\n\r\n  if (g instanceof Float32Array || g instanceof Array) {\r\n    for (var j = 0; j < g.length; j += 3) {\r\n      var c = j / g.length;\r\n      this.positions.push(g[j], g[j + 1], g[j + 2]);\r\n      this.positions.push(g[j], g[j + 1], g[j + 2]);\r\n      this.counters.push(c);\r\n      this.counters.push(c);\r\n    }\r\n  }\r\n\r\n  this.process();\r\n};\r\n\r\nTHREE.MeshLine.prototype.compareV3 = function(a, b) {\r\n  var aa = a * 6;\r\n  var ab = b * 6;\r\n  return (\r\n    this.positions[aa] === this.positions[ab] &&\r\n    this.positions[aa + 1] === this.positions[ab + 1] &&\r\n    this.positions[aa + 2] === this.positions[ab + 2]\r\n  );\r\n};\r\n\r\nTHREE.MeshLine.prototype.copyV3 = function(a) {\r\n  var aa = a * 6;\r\n  return [this.positions[aa], this.positions[aa + 1], this.positions[aa + 2]];\r\n};\r\n\r\nTHREE.MeshLine.prototype.process = function() {\r\n  var l = this.positions.length / 6;\r\n\r\n  this.previous = [];\r\n  this.next = [];\r\n  this.side = [];\r\n  this.width = [];\r\n  this.indices_array = [];\r\n  this.uvs = [];\r\n\r\n  for (var j = 0; j < l; j++) {\r\n    this.side.push(1);\r\n    this.side.push(-1);\r\n  }\r\n\r\n  var w;\r\n  for (var j = 0; j < l; j++) {\r\n    if (this.widthCallback) w = this.widthCallback(j / (l - 1));\r\n    else w = 1;\r\n    this.width.push(w);\r\n    this.width.push(w);\r\n  }\r\n\r\n  for (var j = 0; j < l; j++) {\r\n    this.uvs.push(j / (l - 1), 0);\r\n    this.uvs.push(j / (l - 1), 1);\r\n  }\r\n\r\n  var v;\r\n\r\n  if (this.compareV3(0, l - 1)) {\r\n    v = this.copyV3(l - 2);\r\n  } else {\r\n    v = this.copyV3(0);\r\n  }\r\n  this.previous.push(v[0], v[1], v[2]);\r\n  this.previous.push(v[0], v[1], v[2]);\r\n  for (var j = 0; j < l - 1; j++) {\r\n    v = this.copyV3(j);\r\n    this.previous.push(v[0], v[1], v[2]);\r\n    this.previous.push(v[0], v[1], v[2]);\r\n  }\r\n\r\n  for (var j = 1; j < l; j++) {\r\n    v = this.copyV3(j);\r\n    this.next.push(v[0], v[1], v[2]);\r\n    this.next.push(v[0], v[1], v[2]);\r\n  }\r\n\r\n  if (this.compareV3(l - 1, 0)) {\r\n    v = this.copyV3(1);\r\n  } else {\r\n    v = this.copyV3(l - 1);\r\n  }\r\n  this.next.push(v[0], v[1], v[2]);\r\n  this.next.push(v[0], v[1], v[2]);\r\n\r\n  for (var j = 0; j < l - 1; j++) {\r\n    var n = j * 2;\r\n    this.indices_array.push(n, n + 1, n + 2);\r\n    this.indices_array.push(n + 2, n + 1, n + 3);\r\n  }\r\n\r\n  if (!this.attributes) {\r\n    this.attributes = {\r\n      position: new THREE.BufferAttribute(new Float32Array(this.positions), 3),\r\n      previous: new THREE.BufferAttribute(new Float32Array(this.previous), 3),\r\n      next: new THREE.BufferAttribute(new Float32Array(this.next), 3),\r\n      side: new THREE.BufferAttribute(new Float32Array(this.side), 1),\r\n      width: new THREE.BufferAttribute(new Float32Array(this.width), 1),\r\n      uv: new THREE.BufferAttribute(new Float32Array(this.uvs), 2),\r\n      index: new THREE.BufferAttribute(new Uint16Array(this.indices_array), 1),\r\n      counters: new THREE.BufferAttribute(new Float32Array(this.counters), 1)\r\n    };\r\n  } else {\r\n    this.attributes.position.copyArray(new Float32Array(this.positions));\r\n    this.attributes.position.needsUpdate = true;\r\n    this.attributes.previous.copyArray(new Float32Array(this.previous));\r\n    this.attributes.previous.needsUpdate = true;\r\n    this.attributes.next.copyArray(new Float32Array(this.next));\r\n    this.attributes.next.needsUpdate = true;\r\n    this.attributes.side.copyArray(new Float32Array(this.side));\r\n    this.attributes.side.needsUpdate = true;\r\n    this.attributes.width.copyArray(new Float32Array(this.width));\r\n    this.attributes.width.needsUpdate = true;\r\n    this.attributes.uv.copyArray(new Float32Array(this.uvs));\r\n    this.attributes.uv.needsUpdate = true;\r\n    this.attributes.index.copyArray(new Uint16Array(this.indices_array));\r\n    this.attributes.index.needsUpdate = true;\r\n  }\r\n\r\n  this.geometry.addAttribute(\"position\", this.attributes.position);\r\n  this.geometry.addAttribute(\"previous\", this.attributes.previous);\r\n  this.geometry.addAttribute(\"next\", this.attributes.next);\r\n  this.geometry.addAttribute(\"side\", this.attributes.side);\r\n  this.geometry.addAttribute(\"width\", this.attributes.width);\r\n  this.geometry.addAttribute(\"uv\", this.attributes.uv);\r\n  this.geometry.addAttribute(\"counters\", this.attributes.counters);\r\n\r\n  this.geometry.setIndex(this.attributes.index);\r\n};\r\n\r\nfunction memcpy(src, srcOffset, dst, dstOffset, length) {\r\n  var i;\r\n\r\n  src = src.subarray || src.slice ? src : src.buffer;\r\n  dst = dst.subarray || dst.slice ? dst : dst.buffer;\r\n\r\n  src = srcOffset\r\n    ? src.subarray\r\n      ? src.subarray(srcOffset, length && srcOffset + length)\r\n      : src.slice(srcOffset, length && srcOffset + length)\r\n    : src;\r\n\r\n  if (dst.set) {\r\n    dst.set(src, dstOffset);\r\n  } else {\r\n    for (i = 0; i < src.length; i++) {\r\n      dst[i + dstOffset] = src[i];\r\n    }\r\n  }\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Fast method to advance the line by one position.  The oldest position is removed.\r\n * @param position\r\n */\r\nTHREE.MeshLine.prototype.advance = function(position) {\r\n  var positions = this.attributes.position.array;\r\n  var previous = this.attributes.previous.array;\r\n  var next = this.attributes.next.array;\r\n  var l = positions.length;\r\n\r\n  // PREVIOUS\r\n  memcpy(positions, 0, previous, 0, l);\r\n\r\n  // POSITIONS\r\n  memcpy(positions, 6, positions, 0, l - 6);\r\n\r\n  positions[l - 6] = position.x;\r\n  positions[l - 5] = position.y;\r\n  positions[l - 4] = position.z;\r\n  positions[l - 3] = position.x;\r\n  positions[l - 2] = position.y;\r\n  positions[l - 1] = position.z;\r\n\r\n  // NEXT\r\n  memcpy(positions, 6, next, 0, l - 6);\r\n\r\n  next[l - 6] = position.x;\r\n  next[l - 5] = position.y;\r\n  next[l - 4] = position.z;\r\n  next[l - 3] = position.x;\r\n  next[l - 2] = position.y;\r\n  next[l - 1] = position.z;\r\n\r\n  this.attributes.position.needsUpdate = true;\r\n  this.attributes.previous.needsUpdate = true;\r\n  this.attributes.next.needsUpdate = true;\r\n};\r\n\r\nTHREE.MeshLineMaterial = function(parameters) {\r\n  var vertexShaderSource = [\r\n    \"precision highp float;\",\r\n    \"\",\r\n    \"attribute vec3 position;\",\r\n    \"attribute vec3 previous;\",\r\n    \"attribute vec3 next;\",\r\n    \"attribute float side;\",\r\n    \"attribute float width;\",\r\n    \"attribute vec2 uv;\",\r\n    \"attribute float counters;\",\r\n    \"\",\r\n    \"uniform mat4 projectionMatrix;\",\r\n    \"uniform mat4 modelViewMatrix;\",\r\n    \"uniform vec2 resolution;\",\r\n    \"uniform float lineWidth;\",\r\n    \"uniform vec3 color;\",\r\n    \"uniform float opacity;\",\r\n    \"uniform float near;\",\r\n    \"uniform float far;\",\r\n    \"uniform float sizeAttenuation;\",\r\n    \"\",\r\n    \"varying vec2 vUV;\",\r\n    \"varying vec4 vColor;\",\r\n    \"varying vec3 vPosition;\",\r\n    \"varying float vCounters;\",\r\n    \"\",\r\n    \"vec2 fix( vec4 i, float aspect ) {\",\r\n    \"\",\r\n    \"    vec2 res = i.xy / i.w;\",\r\n    \"    res.x *= aspect;\",\r\n    \"\t vCounters = counters;\",\r\n    \"    return res;\",\r\n    \"\",\r\n    \"}\",\r\n    \"\",\r\n    \"void main() {\",\r\n    \"\",\r\n    \"    float aspect = resolution.x / resolution.y;\",\r\n    \"\t float pixelWidthRatio = 1. / (resolution.x * projectionMatrix[0][0]);\",\r\n    \"\",\r\n    \"    vColor = vec4( color, opacity );\",\r\n    \"    vUV = uv;\",\r\n    \"\",\r\n    \"    mat4 m = projectionMatrix * modelViewMatrix;\",\r\n    \"    vec4 finalPosition = m * vec4( position, 1.0 );\",\r\n    \"    vec4 prevPos = m * vec4( previous, 1.0 );\",\r\n    \"    vec4 nextPos = m * vec4( next, 1.0 );\",\r\n    \"\",\r\n    \"    vec2 currentP = fix( finalPosition, aspect );\",\r\n    \"    vec2 prevP = fix( prevPos, aspect );\",\r\n    \"    vec2 nextP = fix( nextPos, aspect );\",\r\n    \"\",\r\n    \"\t float pixelWidth = finalPosition.w * pixelWidthRatio;\",\r\n    \"    float w = 1.8 * pixelWidth * lineWidth * width;\",\r\n    \"\",\r\n    \"    if( sizeAttenuation == 1. ) {\",\r\n    \"        w = 1.8 * lineWidth * width;\",\r\n    \"    }\",\r\n    \"\",\r\n    \"    vec2 dir;\",\r\n    \"    if( nextP == currentP ) dir = normalize( currentP - prevP );\",\r\n    \"    else if( prevP == currentP ) dir = normalize( nextP - currentP );\",\r\n    \"    else {\",\r\n    \"        vec2 dir1 = normalize( currentP - prevP );\",\r\n    \"        vec2 dir2 = normalize( nextP - currentP );\",\r\n    \"        dir = normalize( dir1 + dir2 );\",\r\n    \"\",\r\n    \"        vec2 perp = vec2( -dir1.y, dir1.x );\",\r\n    \"        vec2 miter = vec2( -dir.y, dir.x );\",\r\n    \"        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );\",\r\n    \"\",\r\n    \"    }\",\r\n    \"\",\r\n    \"    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;\",\r\n    \"    vec2 normal = vec2( -dir.y, dir.x );\",\r\n    \"    normal.x /= aspect;\",\r\n    \"    normal *= .5 * w;\",\r\n    \"\",\r\n    \"    vec4 offset = vec4( normal * side, 0.0, 1.0 );\",\r\n    \"    finalPosition.xy += offset.xy;\",\r\n    \"\",\r\n    \"\t vPosition = ( modelViewMatrix * vec4( position, 1. ) ).xyz;\",\r\n    \"    gl_Position = finalPosition;\",\r\n    \"\",\r\n    \"}\"\r\n  ];\r\n\r\n  var fragmentShaderSource = [\r\n    \"#extension GL_OES_standard_derivatives : enable\",\r\n    \"precision mediump float;\",\r\n    \"\",\r\n    \"uniform sampler2D map;\",\r\n    \"uniform float useMap;\",\r\n    \"uniform float useDash;\",\r\n    \"uniform vec2 dashArray;\",\r\n    \"uniform float visibility;\",\r\n    \"uniform float alphaTest;\",\r\n    \"\",\r\n    \"varying vec2 vUV;\",\r\n    \"varying vec4 vColor;\",\r\n    \"varying vec3 vPosition;\",\r\n    \"varying float vCounters;\",\r\n    \"\",\r\n    \"void main() {\",\r\n    \"\",\r\n    \"    vec4 c = vColor;\",\r\n    \"\t if( c.a < alphaTest ) discard;\",\r\n    \"    if( useMap == 1. ) c *= texture2D( map, vUV );\",\r\n    \"\t if( useDash == 1. ){\",\r\n    \"\t \t \",\r\n    \"\t }\",\r\n    \"    gl_FragColor = c;\",\r\n    \"\t gl_FragColor.a *= step(vCounters,visibility);\",\r\n    \"}\"\r\n  ];\r\n\r\n  function check(v, d) {\r\n    if (v === undefined) return d;\r\n    return v;\r\n  }\r\n\r\n  THREE.Material.call(this);\r\n\r\n  parameters = parameters || {};\r\n\r\n  this.lineWidth = check(parameters.lineWidth, 1);\r\n  this.map = check(parameters.map, null);\r\n  this.useMap = check(parameters.useMap, 0);\r\n  this.color = check(parameters.color, new THREE.Color(0xffffff));\r\n  this.opacity = check(parameters.opacity, 1);\r\n  this.resolution = check(parameters.resolution, new THREE.Vector2(1, 1));\r\n  this.sizeAttenuation = check(parameters.sizeAttenuation, 1);\r\n  this.near = check(parameters.near, 1);\r\n  this.far = check(parameters.far, 1);\r\n  this.dashArray = check(parameters.dashArray, []);\r\n  this.useDash = this.dashArray !== [] ? 1 : 0;\r\n  this.visibility = check(parameters.visibility, 1);\r\n  this.alphaTest = check(parameters.alphaTest, 0);\r\n\r\n  var material = new THREE.RawShaderMaterial({\r\n    uniforms: {\r\n      lineWidth: { type: \"f\", value: this.lineWidth },\r\n      map: { type: \"t\", value: this.map },\r\n      useMap: { type: \"f\", value: this.useMap },\r\n      color: { type: \"c\", value: this.color },\r\n      opacity: { type: \"f\", value: this.opacity },\r\n      resolution: { type: \"v2\", value: this.resolution },\r\n      sizeAttenuation: { type: \"f\", value: this.sizeAttenuation },\r\n      near: { type: \"f\", value: this.near },\r\n      far: { type: \"f\", value: this.far },\r\n      dashArray: {\r\n        type: \"v2\",\r\n        value: new THREE.Vector2(this.dashArray[0], this.dashArray[1])\r\n      },\r\n      useDash: { type: \"f\", value: this.useDash },\r\n      visibility: { type: \"f\", value: this.visibility },\r\n      alphaTest: { type: \"f\", value: this.alphaTest }\r\n    },\r\n    vertexShader: vertexShaderSource.join(\"\\r\\n\"),\r\n    fragmentShader: fragmentShaderSource.join(\"\\r\\n\")\r\n  });\r\n\r\n  delete parameters.lineWidth;\r\n  delete parameters.map;\r\n  delete parameters.useMap;\r\n  delete parameters.color;\r\n  delete parameters.opacity;\r\n  delete parameters.resolution;\r\n  delete parameters.sizeAttenuation;\r\n  delete parameters.near;\r\n  delete parameters.far;\r\n  delete parameters.dashArray;\r\n  delete parameters.visibility;\r\n  delete parameters.alphaTest;\r\n\r\n  material.type = \"MeshLineMaterial\";\r\n\r\n  material.setValues(parameters);\r\n\r\n  return material;\r\n};\r\n\r\nTHREE.MeshLineMaterial.prototype = Object.create(THREE.Material.prototype);\r\nTHREE.MeshLineMaterial.prototype.constructor = THREE.MeshLineMaterial;\r\n\r\nTHREE.MeshLineMaterial.prototype.copy = function(source) {\r\n  THREE.Material.prototype.copy.call(this, source);\r\n\r\n  this.lineWidth = source.lineWidth;\r\n  this.map = source.map;\r\n  this.useMap = source.useMap;\r\n  this.color.copy(source.color);\r\n  this.opacity = source.opacity;\r\n  this.resolution.copy(source.resolution);\r\n  this.sizeAttenuation = source.sizeAttenuation;\r\n  this.near = source.near;\r\n  this.far = source.far;\r\n\r\n  return this;\r\n};\r\n\r\nexports.MeshLine = THREE.MeshLine;\r\nexports.MeshLineMaterial = THREE.MeshLineMaterial;\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\nvar $ = require(\"jquery\");\r\nconst { default: appState } = require(\"../../stores\");\r\n\r\nmodule.exports = function (self) {\r\n  self.selectNode = function (node) {\r\n    self.dragging = node;\r\n    self.selection = [node];\r\n    node.renderData.isSelected = true;\r\n    self.updateSelection(self.mouseX, self.mouseY);\r\n  };\r\n\r\n  /**\r\n   * Deselect nodes in selection list\r\n   */\r\n  self.clearSelection = function () {\r\n    for (var i = 0; i < self.selection.length; i++) {\r\n      self.selection[i].renderData.isSelected = false;\r\n      if (!def.NODE_NO_HIGHLIGHT) {\r\n        self.selection[i].renderData.draw_object.children[0].visible = false;\r\n      } else {\r\n        self.selection[i].renderData.draw_object.material.color.set(\r\n          new THREE.Color(self.selection[i].renderData.color)\r\n        );\r\n      }\r\n      self.selection[i].renderData.textHolder.children[0].element.hideme = true;\r\n    }\r\n    self.selection = [];\r\n  };\r\n\r\n  //return all the edges within the selected nodes \r\n  self.getEdgeWithinSelection = function (selection) {\r\n    const withinEdges = []\r\n    for (var i = 0; i < selection.length; i++) {\r\n      if(selection[i].linkObjs){\r\n        selection[i].linkObjs.forEach(function (link) {\r\n          if ((selection.indexOf(link.source) !== -1 || selection.indexOf(link.target) !== -1 )&& link.source!==link.target && withinEdges.indexOf(link) == -1) {\r\n            withinEdges.push(link)\r\n          }\r\n        })\r\n      }\r\n    }\r\n    return withinEdges;\r\n  }\r\n\r\n  self.getEdgeWithinSelectionForDensity = function (selection) {\r\n    const withinEdges = []\r\n    const edgekeys = []\r\n    for (var i = 0; i < selection.length; i++) {\r\n      if(selection[i].linkObjs){\r\n        selection[i].linkObjs.forEach(function (link) {\r\n          const key1 = `${link.source.id}👉 ${link.target.id}`\r\n          const key2 = `${link.target.id}👉 ${link.source.id}`\r\n          if ((selection.indexOf(link.source) !== -1 && selection.indexOf(link.target) !== -1 )&& link.source!==link.target && edgekeys.indexOf(key1) == -1) {\r\n            withinEdges.push(link)\r\n            edgekeys.push(key1)\r\n            edgekeys.push(key2)\r\n            // edgecount = edgecount+1\r\n          }\r\n        })\r\n      }\r\n    }\r\n    return withinEdges;\r\n  }\r\n\r\n\r\n //highlight nodes and edges within selection\r\n self.updateDegreeHistOpacity = function () {\r\n  if (self.degreehighlight.length > 0) {\r\n    if (self.degreehighlight.length == 1 && appState.graph.colorByDistance) {\r\n      const calDistanceFromLatLonInKm = (lat1, lon1, lat2, lon2) => {\r\n        var p = 0.017453292519943295;    // Math.PI / 180\r\n        var c = Math.cos;\r\n        var a = 0.5 - c((lat2 - lat1) * p) / 2 +\r\n          c(lat1 * p) * c(lat2 * p) *\r\n          (1 - c((lon2 - lon1) * p)) / 2;\r\n    \r\n        return 12742 * Math.asin(Math.sqrt(a)); // 2 * R; R = 6371 km\r\n      }\r\n      var sumOfAllDistance = 0;\r\n      var n = 0;\r\n      var max = 0;\r\n      self.graph.forEachNode(n => {\r\n        var dist = calDistanceFromLatLonInKm(n.data.ref.LatY, n.data.ref.LonX,self.degreehighlight[0].data.ref.LatY, self.degreehighlight[0].data.ref.LonX)\r\n        if (dist > max) {\r\n          max = dist;\r\n        }\r\n      })\r\n      self.graph.forEachNode(n => {  \r\n        // self.colorNodeColor(n, \"#0000FF\");\r\n        var dist = calDistanceFromLatLonInKm(n.data.ref.LatY, n.data.ref.LonX,self.degreehighlight[0].data.ref.LatY, self.degreehighlight[0].data.ref.LonX);\r\n        console.log(n.data.ref.LatY, n.data.ref.LonX,self.degreehighlight[0]['LatY'],self.degreehighlight[0]['LatX'])\r\n        self.colorNode(n, 0x0000FF);\r\n        if (dist == 0) {\r\n          self.colorNodeOpacity(n, 1);\r\n        } else if (dist < max/4) {\r\n          self.colorNodeOpacity(n, 0.2);\r\n        }else if (dist < (2*max)/4) {\r\n          self.colorNodeOpacity(n, 0.4);\r\n        }else if (dist < (3*max)/4) {\r\n          self.colorNodeOpacity(n, 0.6);\r\n        }\r\n        else {\r\n          self.colorNodeOpacity(n, 0.8);\r\n        }\r\n        \r\n        \r\n      });\r\n    }\r\n    else {\r\n    self.graph.forEachNode(n => {  //fisrt dehighlight all the nodes  \r\n      self.colorNodeOpacity(n, 0.2);\r\n      \r\n    });\r\n    // self.colorNodeEdge(null);    // this is to highlight all \r\n\r\n    //fisrt dehighlight all the edges\r\n    self.lineIndices.forEach(function (link) {\r\n      link.linecolor.r = self.darkMode ? 0.25 : 0.89; //black/white\r\n      link.linecolor.g = self.darkMode ? 0.25 : 0.89;\r\n      link.linecolor.b = self.darkMode ? 0.25 : 0.89;\r\n    })  \r\n\r\n    //hilight within edges\r\n    let red = new THREE.Color(appState.graph.edges.color).r;\r\n    let blue = new THREE.Color(appState.graph.edges.color).g;\r\n    let green = new THREE.Color(appState.graph.edges.color).b;\r\n    const withinEdges = self.getEdgeWithinSelection(self.degreehighlight)\r\n\r\n    for (var i = 0; i < withinEdges.length; i++) {\r\n      withinEdges[i].linecolor.r = red;\r\n      withinEdges[i].linecolor.g = blue;\r\n      withinEdges[i].linecolor.b = green;\r\n    }\r\n    self.arrow.material.color.setRGB(red, blue, green);\r\n\r\n    //highlight nodes \r\n    for (var i = 0; i < self.degreehighlight.length; i++) {\r\n      self.colorNodeOpacity(self.degreehighlight[i], 1);\r\n    }\r\n\r\n  } \r\n  }else {        //when no nodes satisfying the condition, all 0.2 opacity \r\n    self.graph.forEachNode(n => {\r\n      self.colorNodeOpacity(n, 0.2);\r\n      \r\n    });\r\n    self.colorNodeEdge(null);\r\n  }\r\n}\r\n\r\n\r\n  //highlight nodes and edges within selection\r\n  self.updateSelectionOpacity = function () {\r\n    // if()\r\n    if (self.selection.length > 0) {\r\n      if (self.selection.length == 1 && appState.graph.colorByDistance) {\r\n        const calDistanceFromLatLonInKm = (lat1, lon1, lat2, lon2) => {\r\n          var p = 0.017453292519943295;    // Math.PI / 180\r\n          var c = Math.cos;\r\n          var a = 0.5 - c((lat2 - lat1) * p) / 2 +\r\n            c(lat1 * p) * c(lat2 * p) *\r\n            (1 - c((lon2 - lon1) * p)) / 2;\r\n      \r\n          return 12742 * Math.asin(Math.sqrt(a)); // 2 * R; R = 6371 km\r\n        }\r\n        var sumOfAllDistance = 0;\r\n        var n = 0;\r\n        var max = 0;\r\n        self.graph.forEachNode(n => {\r\n          var dist = calDistanceFromLatLonInKm(n.data.ref.LatY, n.data.ref.LonX,self.selection[0].data.ref.LatY, self.selection[0].data.ref.LonX)\r\n          if (dist > max) {\r\n            max = dist;\r\n          }\r\n        })\r\n        self.graph.forEachNode(n => {  \r\n          // self.colorNodeColor(n, \"#0000FF\");\r\n          var dist = calDistanceFromLatLonInKm(n.data.ref.LatY, n.data.ref.LonX,self.selection[0].data.ref.LatY, self.selection[0].data.ref.LonX);\r\n          console.log(n.data.ref.LatY, n.data.ref.LonX,self.selection[0]['LatY'],self.selection[0]['LatX'])\r\n          self.colorNode(n, 0x0000FF);\r\n          if (dist == 0) {\r\n            self.colorNodeOpacity(n, 1);\r\n          } else if (dist < max/4) {\r\n            self.colorNodeOpacity(n, 0.2);\r\n          }else if (dist < (2*max)/4) {\r\n            self.colorNodeOpacity(n, 0.4);\r\n          }else if (dist < (3*max)/4) {\r\n            self.colorNodeOpacity(n, 0.6);\r\n          }\r\n          else {\r\n            self.colorNodeOpacity(n, 0.8);\r\n          }\r\n          \r\n          \r\n        });\r\n      }\r\n      else {\r\n      self.graph.forEachNode(n => {  //fisrt dehighlight all the nodes  \r\n        self.colorNodeOpacity(n, 0.2);\r\n        \r\n      });\r\n      // self.colorNodeEdge(null);    // this is to highlight all \r\n\r\n      //fisrt dehighlight all the edges\r\n      self.lineIndices.forEach(function (link) {\r\n        link.linecolor.r = self.darkMode ? 0.25 : 0.89; //black/white\r\n        link.linecolor.g = self.darkMode ? 0.25 : 0.89;\r\n        link.linecolor.b = self.darkMode ? 0.25 : 0.89;\r\n      })  \r\n\r\n      //hilight within edges\r\n      let red = new THREE.Color(appState.graph.edges.color).r;\r\n      let blue = new THREE.Color(appState.graph.edges.color).g;\r\n      let green = new THREE.Color(appState.graph.edges.color).b;\r\n      const withinEdges = self.getEdgeWithinSelection(self.selection)\r\n\r\n      for (var i = 0; i < withinEdges.length; i++) {\r\n        withinEdges[i].linecolor.r = red;\r\n        withinEdges[i].linecolor.g = blue;\r\n        withinEdges[i].linecolor.b = green;\r\n      }\r\n      self.arrow.material.color.setRGB(red, blue, green);\r\n\r\n      //highlight nodes \r\n      for (var i = 0; i < self.selection.length; i++) {\r\n        self.colorNodeOpacity(self.selection[i], 1);\r\n      }\r\n\r\n    } \r\n    }\r\n    else {        //when no nodes are selected, all 1 opacity \r\n      self.graph.forEachNode(n => {\r\n        self.colorNodeOpacity(n, 1);\r\n        \r\n      });\r\n      self.colorNodeEdge(null);\r\n    }\r\n  }\r\n\r\n   //highlight clicked nodes and its neighbor edges only\r\n  self.highlightClickNode = function (node) {\r\n    if (node ) {\r\n      self.graph.forEachNode(n => {  //fisrt dehighlight all the nodes  \r\n        self.colorNodeOpacity(n, 0.2);\r\n        \r\n      });\r\n    //   // self.colorNodeEdge(null);    // this is to highlight all \r\n\r\n    //   //fisrt dehighlight all the edges\r\n    //   self.lineIndices.forEach(function (link) {\r\n    //     link.linecolor.r = self.darkMode ? 0.25 : 0.89; //black/white\r\n    //     link.linecolor.g = self.darkMode ? 0.25 : 0.89;\r\n    //     link.linecolor.b = self.darkMode ? 0.25 : 0.89;\r\n    //   })  \r\n\r\n    //   //hilight neighbor edges\r\n    //   let red = new THREE.Color(appState.graph.edges.color).r;\r\n    //   let blue = new THREE.Color(appState.graph.edges.color).g;\r\n    //   let green = new THREE.Color(appState.graph.edges.color).b;\r\n    //   const withinEdges = node.linkObjs\r\n\r\n    //   for (var i = 0; i < withinEdges.length; i++) {\r\n    //     withinEdges[i].linecolor.r = red;\r\n    //     withinEdges[i].linecolor.g = blue;\r\n    //     withinEdges[i].linecolor.b = green;\r\n    //   }\r\n    //   self.arrow.material.color.setRGB(red, blue, green);\r\n\r\n      //highlight nodes \r\n      const neighborNodes = self.getNeighborNodesFromGraph(node)\r\n      for (var i = 0; i < neighborNodes.length; i++) {\r\n        self.colorNodeOpacity(neighborNodes[i], 1);\r\n      }\r\n\r\n    // } else {        //when no nodes are given, all 1 opacity \r\n    //   self.graph.forEachNode(n => {\r\n    //     self.colorNodeOpacity(n, 1);\r\n        \r\n    //   });\r\n    //   self.colorNodeEdge(null);\r\n    // }\r\n   \r\n\r\n    // self.highlightNode(node, true);\r\n    // node.renderData.textHolder.children[0].element.hideme = false;\r\n    self.colorNodeEdge(node);\r\n  }\r\n  }\r\n\r\n \r\n\r\n\r\n  self.getNeighborNodesFromGraph = function (node) {\r\n    const nodeNeighbor = []\r\n    const froms = []\r\n    const tos = []\r\n    for (var i = 0; i < node.links.length; i++) {\r\n      froms.push(node.links[i].fromId);\r\n      tos.push(node.links[i].toId);\r\n    }\r\n    self.graph.forEachNode(n => {\r\n      if (froms.indexOf(n.id) != -1 || tos.indexOf(n.id) != -1) {\r\n        nodeNeighbor.push(n)\r\n      }\r\n    })\r\n    return nodeNeighbor\r\n  }\r\n\r\n\r\n  /**\r\n   *  Update positions of all objects in self.selection\r\n   *  based on diff between mouse position and self.dragging position\r\n   */\r\n  self.updateSelection = function (mouseX, mouseY, selection) {\r\n    if (self.dragging) {\r\n      var diffx = mouseX - self.dragging.x;\r\n      var diffy = mouseY - self.dragging.y;\r\n    }\r\n\r\n    //'selection' only passed if a single node is double clicked\r\n    let clickedNode = selection;\r\n    //if not already pinned, then pin the node upon double-click\r\n    if (clickedNode && !clickedNode.pinnedx) {\r\n      clickedNode.pinnedx = true;\r\n      clickedNode.pinnedy = true;\r\n      appState.graph.mapClicked = clickedNode\r\n      self.highlightNode(clickedNode, true);\r\n      self.highlightEdges(clickedNode, true);\r\n      const neighborNodes = self.getNeighborNodesFromGraph(clickedNode);\r\n      self.selection = neighborNodes;\r\n      console.log(self.selection)\r\n    } else if (clickedNode && clickedNode.pinnedx) {\r\n      //if already pinned, then unpin upon double-click\r\n      clickedNode.pinnedx = false;\r\n      clickedNode.pinnedy = false;\r\n      appState.graph.mapClicked = null\r\n      \r\n      self.selection = []\r\n    }\r\n\r\n\r\n\r\n    // if(self.selection.length!==0){\r\n    //   self.graph.forEachNode(n => {\r\n    //     self.colorNodeOpacity(n, 0.2);\r\n    //   });\r\n    // }else{\r\n    //   self.graph.forEachNode(n => {\r\n    //     self.colorNodeOpacity(n, 1);\r\n    //   });\r\n    // }\r\n\r\n\r\n\r\n    for (var i = 0; i < self.selection.length; i++) {\r\n      if (self.dragging) {\r\n        self.selection[i].x += diffx;\r\n        self.selection[i].y += diffy;\r\n        self.selection[i].fx = self.selection[i].x;\r\n        self.selection[i].fy = self.selection[i].y;\r\n        //pins multiple nodes when dragging\r\n        if (!clickedNode) {\r\n          self.selection[i].pinnedx = true;\r\n          self.selection[i].pinnedy = true;\r\n        }\r\n      }\r\n      if (!def.NODE_NO_HIGHLIGHT) {\r\n        self.selection[i].renderData.draw_object.children[0].visible = true;\r\n      } else {\r\n        self.selection[i].renderData.draw_object.material.color.set(\r\n          new THREE.Color(self.selection[i].renderData.color)\r\n        );\r\n        // self.colorNodeOpacity(self.selection[i], 1);\r\n\r\n      }\r\n      self.selection[\r\n        i\r\n      ].renderData.textHolder.children[0].element.hideme = false;\r\n    }\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  /**\r\n   *  Find any objects within the current box selection and add it to self.selection\r\n   */\r\n  self.checkSelection = function (mouseX, mouseY) {\r\n    if (!self.dragging) {\r\n      self.mouseEnd = new THREE.Vector3(mouseX, mouseY, 0);\r\n      if (self.mouseStart.x < self.mouseEnd.x) {\r\n        var left = self.mouseStart;\r\n        var right = self.mouseEnd;\r\n      } else {\r\n        var left = self.mouseEnd;\r\n        var right = self.mouseStart;\r\n      }\r\n\r\n      self.graph.forEachNode(function (node) {\r\n        let npos;\r\n        if (self.options.layout == \"ngraph\") {\r\n          npos = self.force.getNodePosition(node.id);\r\n        } else if (self.options.layout == \"d3\") {\r\n          npos = node;\r\n        }\r\n        if (self.insideBox(left, right, npos.x, npos.y)) {\r\n          self.selection.push(node);\r\n          //indicates nodes were in selection box \r\n          //when mouse is lifted\r\n          //self.multNodesHighlighted = true;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  returns true if pos is in box with top left l and bottom right r\r\n   */\r\n  self.insideBox = function (l, r, posx, posy) {\r\n    return (\r\n      posx < r.x &&\r\n      posx > l.x &&\r\n      ((posy > r.y && posy < l.y) || (posy < r.y && posy > l.y))\r\n    );\r\n  };\r\n};","var Frame = require(\"./src/process\").Frame;\r\n\r\nexports.Frame = Frame;\r\n\r\nvar graph = require(\"ngraph.generators\").balancedBinTree(5);\r\n\r\nexports.graph = graph;\r\n\r\nif (window) {\r\n  window.Argo = exports;\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/Snoman title.ea1f0722.png\";","module.exports = __webpack_public_path__ + \"static/media/Snoman logo.bf0e8895.png\";","import { Position, Toaster } from \"@blueprintjs/core\";\r\n\r\nexport const toaster = Toaster.create({\r\n  position: Position.TOP\r\n});\r\n\r\nexport default toaster;\r\n","var THREE = require(\"three\");\r\nvar STATS = require(\"stats.js\");\r\nwindow.THREE = THREE;\r\nrequire(\"../include/QuickHull\");\r\nrequire(\"../include/ConvexGeometry\");\r\nrequire(\"../include/CSS3DRenderer\");\r\n// var Line2 = require(\"../src/lines/Line2\");\r\n// var LineGeometry = require(\"../src/lines/LineGeometry\");\r\n// var LineMaterial = require(\"../src/lines/LineMaterial\");\r\nvar Edge = require(\"./structure/node\").Edge;\r\nvar Node = require(\"./structure/node\").Node;\r\nvar OrbitControls = require(\"../include/OrbitControls\")(THREE); //'three-orbit-controls')(THREE);\r\nTHREE.MeshLine = require(\"../include/THREE.MeshLine\").MeshLine;\r\nTHREE.MeshLineMaterial = require(\"../include/THREE.MeshLine\").MeshLineMaterial;\r\nvar d3 = require(\"d3\");\r\nvar ee = require(\"event-emitter\");\r\nvar IS_IFRAME_WIDGET = require(\"../../constants\").IS_IFRAME_WIDGET;\r\n\r\nexports.default = {\r\n  THREE: THREE,\r\n  MeshLine: THREE.MeshLine,\r\n  MeshLineMaterial: THREE.MeshLineMaterial,\r\n  // Line2: Line2,\r\n  // LineGeometry: LineGeometry,\r\n  // LineMaterial: LineMaterial,\r\n  STATS: STATS, // stats.js panel for showing fps and other stats.\r\n  STATS_SHOW: false,\r\n  Edge: Edge,\r\n  Node: Node,\r\n  OrbitControls: OrbitControls,\r\n  d3: d3,\r\n  ee: ee,\r\n  NODE_COLOR: 0x0055aa,\r\n  NODE_HIGHLIGHT: 0x0055aa,\r\n  // NODE_HIGHLIGHT_RGB: 'rgb(219, 119, 52)',\r\n  ADJACENT_HIGHLIGHT: 0x95a5a6,\r\n  SEARCH_HIGHLIGHT: 0xe67e22,\r\n  NODE_HTEXTURE: \"http://i.imgur.com/xzkxSIw.png\",\r\n  NODE_TEXTURE: \"http://i.imgur.com/reTXqiM.png\",\r\n  NODE_NO_HTEX: true,\r\n  NODE_NO_TEX: true,\r\n  NODE_NO_HCOLOR: true,\r\n  NODE_NO_COLOR: false,\r\n  NODE_NO_HIGHLIGHT: false,\r\n  NODE_NEIGHBOR_HIGHLIGHT: true,\r\n  NODE_SHAPE: \"square\",\r\n  NODE_HSHAPE: \"square\",\r\n  NODE_SIZE: 5,\r\n  HIGHLIGHT_SIZE: 1.0,\r\n  LAYOUT: \"d3\",\r\n  LINES: \"nofancy\",\r\n  MAP: false,\r\n  MAP_RENDER_PER_NUMBER_OF_FRAME: 10,\r\n  TEXT_SCALE: true,\r\n  TEXT_SIZE: 0.07,\r\n  TEXT_X_OFFSET: 0.52,\r\n  TEXT_Y_OFFSET: 0.35,\r\n  TEXT_BACK_COLOR: \"rgba(100, 100, 200, 0)\",\r\n  TEXT_OPACITY: \"1\",\r\n  TEXT_WIREFRAME: false,\r\n  PIN_COLOR: 0xFFA500\r\n};\r\n","const { observable } = require(\"mobx\");\r\n\r\nvar def = require(\"./imports\").default;\r\nconst spawn = require(\"threads\").spawn;\r\nvar THREE = def.THREE;\r\nvar STATS = def.STATS;\r\nvar STATS_SHOW = def.STATS_SHOW;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nvar Frame = function(graph, options) {\r\n  // Needed to reference \"this\" in functions\r\n  var self = this;\r\n  appState.graph.process = this;\r\n  // Options\r\n  this.inGraph = graph;\r\n  this.options = options || {\r\n    layout: def.LAYOUT\r\n  };\r\n  this.layout_options = this.options.graphLayout || {};\r\n\r\n  this.lineObjects = [];\r\n  this.lineIndices = [];\r\n  this.MAX_LINES = 100000;\r\n  this.textureLoader = new THREE.TextureLoader();\r\n  this.textureLoader.crossOrigin = true;\r\n  this.oldIntersect = -1;\r\n\r\n  this.selection = [];\r\n \r\n  this.fov = 60;\r\n  this.near = 1;\r\n  this.far = 5000;\r\n  this.mouseStart = new THREE.Vector3(0, 0, 0);\r\n  this.mouseEnd = new THREE.Vector3(0, 0, 0);\r\n  this.dragging = null;\r\n  this.showBox = false;\r\n  this.renderWidth = 1000;\r\n  this.renderHeight = 1000;\r\n  this.maxZoom = 1000;\r\n  this.paused = false;\r\n  this.mouseDown = false;\r\n  this.ee = ee({});\r\n  this.layoutInit = true;\r\n  this.labelSize = 6;\r\n  this.relativeFontSize = 1;\r\n  this.mapShowing = def.MAP;\r\n  this.mapRenderPerNumberOfFrame = def.MAP_RENDER_PER_NUMBER_OF_FRAME;\r\n  this.darkMode = false;\r\n  this.lastNode = null;\r\n  this.rightClickedNode = null;\r\n  this.doHighlightNeighbors = def.NODE_NEIGHBOR_HIGHLIGHT;\r\n  this.prevHighlights = [];\r\n  this.hull = null;\r\n\r\n  require(\"./utils/utils\")(this);\r\n  require(\"./setup\")(this);\r\n  require(\"./addremove\")(this);\r\n  require(\"./highlighting\")(this);\r\n  require(\"./select\")(this);\r\n  require(\"./mouse\")(this);\r\n  require(\"./modify\")(this);\r\n  require(\"./draw\")(this);\r\n  require(\"./api\")(this);\r\n  require(\"./update\")(this);\r\n\r\n  /**\r\n   *  Starting point, run once to create scene\r\n   */\r\n  let stats = new STATS();\r\n  this.display = function() {\r\n    if (STATS_SHOW) {\r\n      stats.showPanel(0); // show fps panel\r\n      document.body.appendChild(stats.dom);\r\n    }\r\n    this.animate();\r\n  };\r\n\r\n  /**\r\n   *  Creates loop called on every animation frame\r\n   */\r\n  \r\n  let fps = 30;\r\n  // let now;\r\n  // let then = Date.now();\r\n  // let interval = 1000 / fps;\r\n  // let delta;\r\n  this.animate = function() {\r\n    if (STATS_SHOW) {\r\n      stats.begin(); // Begin stats.js panel timing\r\n    }\r\n    \r\n    self.controls.update();\r\n    self.render();\r\n\r\n    if (STATS_SHOW) {\r\n      stats.end(); // End stats.js panel timing\r\n    }\r\n    \r\n    // now = Date.now();\r\n    // delta = now - then;\r\n    // if (delta > interval) {\r\n    //   then = now;\r\n    //   self.controls.update();\r\n    //   self.render();\r\n    // }\r\n    requestAnimationFrame(self.animate);\r\n  };\r\n\r\n  /**\r\n   *  Set initial properties\r\n   */\r\n  this.init = function(aa = true) {\r\n    self.renderer = new THREE.WebGLRenderer({\r\n      alpha: true,\r\n      antialias: aa,\r\n      preserveDrawingBuffer: true,\r\n    });\r\n    self.minimapRenderer = new THREE.WebGLRenderer({\r\n      alpha: true,\r\n      antialias: aa,\r\n      preserveDrawingBuffer: true,\r\n    });\r\n    //self.renderer.setPixelRatio(window.devicePixelRatio);\r\n    //self.renderer.setPixelRatio(0.1);\r\n    self.setDisplayParams();\r\n    self.setRendererParams();\r\n\r\n    self.setupCamera();\r\n    self.setupMinimap();\r\n    self.setupGeometry();\r\n    self.setupSelect();\r\n\r\n    // Make sure to clear children before setting up new frame.\r\n    self.element.innerHTML = \"\";\r\n    self.element.appendChild(self.renderer.domElement);\r\n    self.element.appendChild(self.cssRenderer.domElement);\r\n    self.element.appendChild(self.minimapRenderer.domElement);\r\n\r\n    self.setupLayout();\r\n\r\n    self.setupGraph();\r\n\r\n    window.addEventListener(\r\n      \"resize\",\r\n      function(e) {\r\n        e.preventDefault();\r\n        self.onWindowResize();\r\n      },\r\n      false\r\n    );\r\n    window.addEventListener(\r\n      \"load\",\r\n      function(e) {\r\n        e.preventDefault();\r\n        self.onWindowResize();\r\n      },\r\n      false\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Change camera on window resize\r\n   */\r\n  self.onWindowResize = function() {\r\n    self.clientRect = self.element.getBoundingClientRect();\r\n    self.width = self.clientRect.width;\r\n    self.height = self.clientRect.height;\r\n    self.minimap.width = 0.2 * self.height;\r\n    self.minimap.height = 0.2 * self.height;\r\n    self.aspect = self.width / self.height;\r\n    self.ccamera.aspect = self.aspect;\r\n    self.ccamera.updateProjectionMatrix();\r\n\r\n    self.renderer.setSize(self.width, self.height);\r\n    self.cssRenderer.setSize(self.width, self.height);\r\n    self.minimapRenderer.setSize(0.2 * self.height, 0.2 * self.height);\r\n  };\r\n\r\n  /**\r\n   *  Draws graphics\r\n   */\r\n  var stage = 0;\r\n  var numberOfFrameSinceMiniMapRerender = 1;\r\n  this.render = function() {\r\n    self.updateCamera();\r\n    self.updateNodes();\r\n    // self.paused = true;\r\n    if (stage == 1) {\r\n      self.updateLabels();\r\n      self.updateEdges();\r\n      stage = 0;\r\n    }\r\n    stage += 1;\r\n    numberOfFrameSinceMiniMapRerender += 1;\r\n    if (self.options.layout == \"d3\") {\r\n      if (self.layoutInit == true) {\r\n        var nodes = [];\r\n        self.graph.forEachNode(function(node) {\r\n          nodes.push(node);\r\n        });\r\n        self.force.nodes(nodes);\r\n        self.force.force(\"link\", d3.forceLink(self.lineIndices));\r\n        self.force.restart();\r\n        self.force.stop();\r\n        if (self.tickToStatic && !self.paused) {\r\n          // We don't tick and pause for now\r\n          for (\r\n            var i = 0,\r\n              n = Math.ceil(\r\n                Math.log(self.force.alphaMin()) /\r\n                  Math.log(1 - self.force.alphaDecay())\r\n              );\r\n            i < n;\r\n            ++i\r\n          ) {\r\n            self.force.tick();\r\n          }\r\n          //self.pauseLayout();\r\n        }\r\n        self.layoutInit = false;\r\n      }\r\n    }\r\n    self.renderer.setViewport(0, 0, self.width, self.height);\r\n    self.renderer.setScissor(0, 0, self.width, self.height);\r\n    self.renderer.setScissorTest(true);\r\n    self.renderer.render(self.scene, self.ccamera);\r\n    self.cssRenderer.render(self.scene, self.ccamera);\r\n\r\n    // Render MiniMap at a lower framerate.\r\n    if (numberOfFrameSinceMiniMapRerender >= this.mapRenderPerNumberOfFrame) {\r\n      numberOfFrameSinceMiniMapRerender = 0;\r\n\r\n      if (self.mapShowing) {\r\n        self.minimap.width = 0.2 * self.height;\r\n        self.minimap.height = 0.2 * self.height;\r\n        self.minimapRenderer.setViewport(0, 0, self.minimap.width, self.minimap.height);\r\n        self.minimapRenderer.setScissor(0, 0, self.minimap.width, self.minimap.height);\r\n        self.minimapRenderer.setScissorTest(true);\r\n        self.minimapRenderer.render(self.scene, self.minimap.camera);\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexports.Frame = Frame;\r\n","/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n *\r\n * Ported from: https://github.com/maurizzzio/quickhull3d/ by Mauricio Poppe (https://github.com/maurizzzio)\r\n *\r\n */\r\n\r\n(function() {\r\n  var Visible = 0;\r\n  var Deleted = 1;\r\n\r\n  function QuickHull() {\r\n    this.tolerance = -1;\r\n\r\n    this.faces = []; // the generated faces of the convex hull\r\n    this.newFaces = []; // this array holds the faces that are generated within a single iteration\r\n\r\n    // the vertex lists work as follows:\r\n    //\r\n    // let 'a' and 'b' be 'Face' instances\r\n    // let 'v' be points wrapped as instance of 'Vertex'\r\n    //\r\n    //     [v, v, ..., v, v, v, ...]\r\n    //      ^             ^\r\n    //      |             |\r\n    //  a.outside     b.outside\r\n    //\r\n    this.assigned = new VertexList();\r\n    this.unassigned = new VertexList();\r\n\r\n    this.vertices = []; // vertices of the hull (internal representation of given geometry data)\r\n  }\r\n\r\n  Object.assign(QuickHull.prototype, {\r\n    setFromPoints: function(points) {\r\n      if (Array.isArray(points) !== true) {\r\n        console.error(\"THREE.QuickHull: Points parameter is not an array.\");\r\n      }\r\n\r\n      if (points.length < 4) {\r\n        console.error(\r\n          \"THREE.QuickHull: The algorithm needs at least four points.\"\r\n        );\r\n      }\r\n\r\n      this.makeEmpty();\r\n\r\n      for (var i = 0, l = points.length; i < l; i++) {\r\n        this.vertices.push(new VertexNode(points[i]));\r\n      }\r\n\r\n      this.compute();\r\n\r\n      return this;\r\n    },\r\n\r\n    setFromObject: function(object) {\r\n      var points = [];\r\n\r\n      object.updateMatrixWorld(true);\r\n\r\n      object.traverse(function(node) {\r\n        var i, l, point;\r\n\r\n        var geometry = node.geometry;\r\n\r\n        if (geometry !== undefined) {\r\n          if (geometry.isGeometry) {\r\n            var vertices = geometry.vertices;\r\n\r\n            for (i = 0, l = vertices.length; i < l; i++) {\r\n              point = vertices[i].clone();\r\n              point.applyMatrix4(node.matrixWorld);\r\n\r\n              points.push(point);\r\n            }\r\n          } else if (geometry.isBufferGeometry) {\r\n            var attribute = geometry.attributes.position;\r\n\r\n            if (attribute !== undefined) {\r\n              for (i = 0, l = attribute.count; i < l; i++) {\r\n                point = new THREE.Vector3();\r\n\r\n                point\r\n                  .fromBufferAttribute(attribute, i)\r\n                  .applyMatrix4(node.matrixWorld);\r\n\r\n                points.push(point);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      return this.setFromPoints(points);\r\n    },\r\n\r\n    makeEmpty: function() {\r\n      this.faces = [];\r\n      this.vertices = [];\r\n\r\n      return this;\r\n    },\r\n\r\n    // Adds a vertex to the 'assigned' list of vertices and assigns it to the given face\r\n\r\n    addVertexToFace: function(vertex, face) {\r\n      vertex.face = face;\r\n\r\n      if (face.outside === null) {\r\n        this.assigned.append(vertex);\r\n      } else {\r\n        this.assigned.insertBefore(face.outside, vertex);\r\n      }\r\n\r\n      face.outside = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Removes a vertex from the 'assigned' list of vertices and from the given face\r\n\r\n    removeVertexFromFace: function(vertex, face) {\r\n      if (vertex === face.outside) {\r\n        // fix face.outside link\r\n\r\n        if (vertex.next !== null && vertex.next.face === face) {\r\n          // face has at least 2 outside vertices, move the 'outside' reference\r\n\r\n          face.outside = vertex.next;\r\n        } else {\r\n          // vertex was the only outside vertex that face had\r\n\r\n          face.outside = null;\r\n        }\r\n      }\r\n\r\n      this.assigned.remove(vertex);\r\n\r\n      return this;\r\n    },\r\n\r\n    // Removes all the visible vertices that a given face is able to see which are stored in the 'assigned' vertext list\r\n\r\n    removeAllVerticesFromFace: function(face) {\r\n      if (face.outside !== null) {\r\n        // reference to the first and last vertex of this face\r\n\r\n        var start = face.outside;\r\n        var end = face.outside;\r\n\r\n        while (end.next !== null && end.next.face === face) {\r\n          end = end.next;\r\n        }\r\n\r\n        this.assigned.removeSubList(start, end);\r\n\r\n        // fix references\r\n\r\n        start.prev = end.next = null;\r\n        face.outside = null;\r\n\r\n        return start;\r\n      }\r\n    },\r\n\r\n    // Removes all the visible vertices that 'face' is able to see\r\n\r\n    deleteFaceVertices: function(face, absorbingFace) {\r\n      var faceVertices = this.removeAllVerticesFromFace(face);\r\n\r\n      if (faceVertices !== undefined) {\r\n        if (absorbingFace === undefined) {\r\n          // mark the vertices to be reassigned to some other face\r\n\r\n          this.unassigned.appendChain(faceVertices);\r\n        } else {\r\n          // if there's an absorbing face try to assign as many vertices as possible to it\r\n\r\n          var vertex = faceVertices;\r\n\r\n          do {\r\n            // we need to buffer the subsequent vertex at this point because the 'vertex.next' reference\r\n            // will be changed by upcoming method calls\r\n\r\n            var nextVertex = vertex.next;\r\n\r\n            var distance = absorbingFace.distanceToPoint(vertex.point);\r\n\r\n            // check if 'vertex' is able to see 'absorbingFace'\r\n\r\n            if (distance > this.tolerance) {\r\n              this.addVertexToFace(vertex, absorbingFace);\r\n            } else {\r\n              this.unassigned.append(vertex);\r\n            }\r\n\r\n            // now assign next vertex\r\n\r\n            vertex = nextVertex;\r\n          } while (vertex !== null);\r\n        }\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    // Reassigns as many vertices as possible from the unassigned list to the new faces\r\n\r\n    resolveUnassignedPoints: function(newFaces) {\r\n      if (this.unassigned.isEmpty() === false) {\r\n        var vertex = this.unassigned.first();\r\n\r\n        do {\r\n          // buffer 'next' reference, see .deleteFaceVertices()\r\n\r\n          var nextVertex = vertex.next;\r\n\r\n          var maxDistance = this.tolerance;\r\n\r\n          var maxFace = null;\r\n\r\n          for (var i = 0; i < newFaces.length; i++) {\r\n            var face = newFaces[i];\r\n\r\n            if (face.mark === Visible) {\r\n              var distance = face.distanceToPoint(vertex.point);\r\n\r\n              if (distance > maxDistance) {\r\n                maxDistance = distance;\r\n                maxFace = face;\r\n              }\r\n\r\n              if (maxDistance > 1000 * this.tolerance) break;\r\n            }\r\n          }\r\n\r\n          // 'maxFace' can be null e.g. if there are identical vertices\r\n\r\n          if (maxFace !== null) {\r\n            this.addVertexToFace(vertex, maxFace);\r\n          }\r\n\r\n          vertex = nextVertex;\r\n        } while (vertex !== null);\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    // Computes the extremes of a simplex which will be the initial hull\r\n\r\n    computeExtremes: function() {\r\n      var min = new THREE.Vector3();\r\n      var max = new THREE.Vector3();\r\n\r\n      var minVertices = [];\r\n      var maxVertices = [];\r\n\r\n      var i, l, j;\r\n\r\n      // initially assume that the first vertex is the min/max\r\n\r\n      for (i = 0; i < 3; i++) {\r\n        minVertices[i] = maxVertices[i] = this.vertices[0];\r\n      }\r\n\r\n      min.copy(this.vertices[0].point);\r\n      max.copy(this.vertices[0].point);\r\n\r\n      // compute the min/max vertex on all six directions\r\n\r\n      for (i = 0, l = this.vertices.length; i < l; i++) {\r\n        var vertex = this.vertices[i];\r\n        var point = vertex.point;\r\n\r\n        // update the min coordinates\r\n\r\n        for (j = 0; j < 3; j++) {\r\n          if (point.getComponent(j) < min.getComponent(j)) {\r\n            min.setComponent(j, point.getComponent(j));\r\n            minVertices[j] = vertex;\r\n          }\r\n        }\r\n\r\n        // update the max coordinates\r\n\r\n        for (j = 0; j < 3; j++) {\r\n          if (point.getComponent(j) > max.getComponent(j)) {\r\n            max.setComponent(j, point.getComponent(j));\r\n            maxVertices[j] = vertex;\r\n          }\r\n        }\r\n      }\r\n\r\n      // use min/max vectors to compute an optimal epsilon\r\n\r\n      this.tolerance =\r\n        3 *\r\n        Number.EPSILON *\r\n        (Math.max(Math.abs(min.x), Math.abs(max.x)) +\r\n          Math.max(Math.abs(min.y), Math.abs(max.y)) +\r\n          Math.max(Math.abs(min.z), Math.abs(max.z)));\r\n\r\n      return { min: minVertices, max: maxVertices };\r\n    },\r\n\r\n    // Computes the initial simplex assigning to its faces all the points\r\n    // that are candidates to form part of the hull\r\n\r\n    computeInitialHull: (function() {\r\n      var line3, plane, closestPoint;\r\n\r\n      return function computeInitialHull() {\r\n        if (line3 === undefined) {\r\n          line3 = new THREE.Line3();\r\n          plane = new THREE.Plane();\r\n          closestPoint = new THREE.Vector3();\r\n        }\r\n\r\n        var vertex,\r\n          vertices = this.vertices;\r\n        var extremes = this.computeExtremes();\r\n        var min = extremes.min;\r\n        var max = extremes.max;\r\n\r\n        var v0, v1, v2, v3;\r\n        var i, l, j;\r\n\r\n        // 1. Find the two vertices 'v0' and 'v1' with the greatest 1d separation\r\n        // (max.x - min.x)\r\n        // (max.y - min.y)\r\n        // (max.z - min.z)\r\n\r\n        var distance,\r\n          maxDistance = 0;\r\n        var index = 0;\r\n\r\n        for (i = 0; i < 3; i++) {\r\n          distance =\r\n            max[i].point.getComponent(i) - min[i].point.getComponent(i);\r\n\r\n          if (distance > maxDistance) {\r\n            maxDistance = distance;\r\n            index = i;\r\n          }\r\n        }\r\n\r\n        v0 = min[index];\r\n        v1 = max[index];\r\n\r\n        // 2. The next vertex 'v2' is the one farthest to the line formed by 'v0' and 'v1'\r\n\r\n        maxDistance = 0;\r\n        line3.set(v0.point, v1.point);\r\n\r\n        for (i = 0, l = this.vertices.length; i < l; i++) {\r\n          vertex = vertices[i];\r\n\r\n          if (vertex !== v0 && vertex !== v1) {\r\n            line3.closestPointToPoint(vertex.point, true, closestPoint);\r\n\r\n            distance = closestPoint.distanceToSquared(vertex.point);\r\n\r\n            if (distance > maxDistance) {\r\n              maxDistance = distance;\r\n              v2 = vertex;\r\n            }\r\n          }\r\n        }\r\n\r\n        // 3. The next vertex 'v3' is the one farthest to the plane 'v0', 'v1', 'v2'\r\n\r\n        maxDistance = 0;\r\n        plane.setFromCoplanarPoints(v0.point, v1.point, v2.point);\r\n\r\n        for (i = 0, l = this.vertices.length; i < l; i++) {\r\n          vertex = vertices[i];\r\n\r\n          if (vertex !== v0 && vertex !== v1 && vertex !== v2) {\r\n            distance = Math.abs(plane.distanceToPoint(vertex.point));\r\n\r\n            if (distance > maxDistance) {\r\n              maxDistance = distance;\r\n              v3 = vertex;\r\n            }\r\n          }\r\n        }\r\n\r\n        var faces = [];\r\n\r\n        if (plane.distanceToPoint(v3.point) < 0) {\r\n          // the face is not able to see the point so 'plane.normal' is pointing outside the tetrahedron\r\n\r\n          faces.push(\r\n            Face.create(v0, v1, v2),\r\n            Face.create(v3, v1, v0),\r\n            Face.create(v3, v2, v1),\r\n            Face.create(v3, v0, v2)\r\n          );\r\n\r\n          // set the twin edge\r\n\r\n          for (i = 0; i < 3; i++) {\r\n            j = (i + 1) % 3;\r\n\r\n            // join face[ i ] i > 0, with the first face\r\n\r\n            faces[i + 1].getEdge(2).setTwin(faces[0].getEdge(j));\r\n\r\n            // join face[ i ] with face[ i + 1 ], 1 <= i <= 3\r\n\r\n            faces[i + 1].getEdge(1).setTwin(faces[j + 1].getEdge(0));\r\n          }\r\n        } else {\r\n          // the face is able to see the point so 'plane.normal' is pointing inside the tetrahedron\r\n\r\n          faces.push(\r\n            Face.create(v0, v2, v1),\r\n            Face.create(v3, v0, v1),\r\n            Face.create(v3, v1, v2),\r\n            Face.create(v3, v2, v0)\r\n          );\r\n\r\n          // set the twin edge\r\n\r\n          for (i = 0; i < 3; i++) {\r\n            j = (i + 1) % 3;\r\n\r\n            // join face[ i ] i > 0, with the first face\r\n\r\n            faces[i + 1].getEdge(2).setTwin(faces[0].getEdge((3 - i) % 3));\r\n\r\n            // join face[ i ] with face[ i + 1 ]\r\n\r\n            faces[i + 1].getEdge(0).setTwin(faces[j + 1].getEdge(1));\r\n          }\r\n        }\r\n\r\n        // the initial hull is the tetrahedron\r\n\r\n        for (i = 0; i < 4; i++) {\r\n          this.faces.push(faces[i]);\r\n        }\r\n\r\n        // initial assignment of vertices to the faces of the tetrahedron\r\n\r\n        for (i = 0, l = vertices.length; i < l; i++) {\r\n          vertex = vertices[i];\r\n\r\n          if (\r\n            vertex !== v0 &&\r\n            vertex !== v1 &&\r\n            vertex !== v2 &&\r\n            vertex !== v3\r\n          ) {\r\n            maxDistance = this.tolerance;\r\n            var maxFace = null;\r\n\r\n            for (j = 0; j < 4; j++) {\r\n              distance = this.faces[j].distanceToPoint(vertex.point);\r\n\r\n              if (distance > maxDistance) {\r\n                maxDistance = distance;\r\n                maxFace = this.faces[j];\r\n              }\r\n            }\r\n\r\n            if (maxFace !== null) {\r\n              this.addVertexToFace(vertex, maxFace);\r\n            }\r\n          }\r\n        }\r\n\r\n        return this;\r\n      };\r\n    })(),\r\n\r\n    // Removes inactive faces\r\n\r\n    reindexFaces: function() {\r\n      var activeFaces = [];\r\n\r\n      for (var i = 0; i < this.faces.length; i++) {\r\n        var face = this.faces[i];\r\n\r\n        if (face.mark === Visible) {\r\n          activeFaces.push(face);\r\n        }\r\n      }\r\n\r\n      this.faces = activeFaces;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Finds the next vertex to create faces with the current hull\r\n\r\n    nextVertexToAdd: function() {\r\n      // if the 'assigned' list of vertices is empty, no vertices are left. return with 'undefined'\r\n\r\n      if (this.assigned.isEmpty() === false) {\r\n        var eyeVertex,\r\n          maxDistance = 0;\r\n\r\n        // grap the first available face and start with the first visible vertex of that face\r\n\r\n        var eyeFace = this.assigned.first().face;\r\n        var vertex = eyeFace.outside;\r\n\r\n        // now calculate the farthest vertex that face can see\r\n\r\n        do {\r\n          var distance = eyeFace.distanceToPoint(vertex.point);\r\n\r\n          if (distance > maxDistance) {\r\n            maxDistance = distance;\r\n            eyeVertex = vertex;\r\n          }\r\n\r\n          vertex = vertex.next;\r\n        } while (vertex !== null && vertex.face === eyeFace);\r\n\r\n        return eyeVertex;\r\n      }\r\n    },\r\n\r\n    // Computes a chain of half edges in CCW order called the 'horizon'.\r\n    // For an edge to be part of the horizon it must join a face that can see\r\n    // 'eyePoint' and a face that cannot see 'eyePoint'.\r\n\r\n    computeHorizon: function(eyePoint, crossEdge, face, horizon) {\r\n      // moves face's vertices to the 'unassigned' vertex list\r\n\r\n      this.deleteFaceVertices(face);\r\n\r\n      face.mark = Deleted;\r\n\r\n      var edge;\r\n\r\n      if (crossEdge === null) {\r\n        edge = crossEdge = face.getEdge(0);\r\n      } else {\r\n        // start from the next edge since 'crossEdge' was already analyzed\r\n        // (actually 'crossEdge.twin' was the edge who called this method recursively)\r\n\r\n        edge = crossEdge.next;\r\n      }\r\n\r\n      do {\r\n        var twinEdge = edge.twin;\r\n        var oppositeFace = twinEdge.face;\r\n\r\n        if (oppositeFace.mark === Visible) {\r\n          if (oppositeFace.distanceToPoint(eyePoint) > this.tolerance) {\r\n            // the opposite face can see the vertex, so proceed with next edge\r\n\r\n            this.computeHorizon(eyePoint, twinEdge, oppositeFace, horizon);\r\n          } else {\r\n            // the opposite face can't see the vertex, so this edge is part of the horizon\r\n\r\n            horizon.push(edge);\r\n          }\r\n        }\r\n\r\n        edge = edge.next;\r\n      } while (edge !== crossEdge);\r\n\r\n      return this;\r\n    },\r\n\r\n    // Creates a face with the vertices 'eyeVertex.point', 'horizonEdge.tail' and 'horizonEdge.head' in CCW order\r\n\r\n    addAdjoiningFace: function(eyeVertex, horizonEdge) {\r\n      // all the half edges are created in ccw order thus the face is always pointing outside the hull\r\n\r\n      var face = Face.create(eyeVertex, horizonEdge.tail(), horizonEdge.head());\r\n\r\n      this.faces.push(face);\r\n\r\n      // join face.getEdge( - 1 ) with the horizon's opposite edge face.getEdge( - 1 ) = face.getEdge( 2 )\r\n\r\n      face.getEdge(-1).setTwin(horizonEdge.twin);\r\n\r\n      return face.getEdge(0); // the half edge whose vertex is the eyeVertex\r\n    },\r\n\r\n    //  Adds 'horizon.length' faces to the hull, each face will be linked with the\r\n    //  horizon opposite face and the face on the left/right\r\n\r\n    addNewFaces: function(eyeVertex, horizon) {\r\n      this.newFaces = [];\r\n\r\n      var firstSideEdge = null;\r\n      var previousSideEdge = null;\r\n\r\n      for (var i = 0; i < horizon.length; i++) {\r\n        var horizonEdge = horizon[i];\r\n\r\n        // returns the right side edge\r\n\r\n        var sideEdge = this.addAdjoiningFace(eyeVertex, horizonEdge);\r\n\r\n        if (firstSideEdge === null) {\r\n          firstSideEdge = sideEdge;\r\n        } else {\r\n          // joins face.getEdge( 1 ) with previousFace.getEdge( 0 )\r\n\r\n          sideEdge.next.setTwin(previousSideEdge);\r\n        }\r\n\r\n        this.newFaces.push(sideEdge.face);\r\n        previousSideEdge = sideEdge;\r\n      }\r\n\r\n      // perform final join of new faces\r\n\r\n      firstSideEdge.next.setTwin(previousSideEdge);\r\n\r\n      return this;\r\n    },\r\n\r\n    // Adds a vertex to the hull\r\n\r\n    addVertexToHull: function(eyeVertex) {\r\n      var horizon = [];\r\n      var i, face;\r\n\r\n      this.unassigned.clear();\r\n\r\n      // remove 'eyeVertex' from 'eyeVertex.face' so that it can't be added to the 'unassigned' vertex list\r\n\r\n      this.removeVertexFromFace(eyeVertex, eyeVertex.face);\r\n\r\n      this.computeHorizon(eyeVertex.point, null, eyeVertex.face, horizon);\r\n\r\n      this.addNewFaces(eyeVertex, horizon);\r\n\r\n      // reassign 'unassigned' vertices to the new faces\r\n\r\n      this.resolveUnassignedPoints(this.newFaces);\r\n\r\n      return this;\r\n    },\r\n\r\n    cleanup: function() {\r\n      this.assigned.clear();\r\n      this.unassigned.clear();\r\n      this.newFaces = [];\r\n\r\n      return this;\r\n    },\r\n\r\n    compute: function() {\r\n      var vertex;\r\n\r\n      this.computeInitialHull();\r\n\r\n      // add all available vertices gradually to the hull\r\n\r\n      while ((vertex = this.nextVertexToAdd()) !== undefined) {\r\n        this.addVertexToHull(vertex);\r\n      }\r\n\r\n      this.reindexFaces();\r\n\r\n      this.cleanup();\r\n\r\n      return this;\r\n    }\r\n  });\r\n\r\n  //\r\n\r\n  function Face() {\r\n    this.normal = new THREE.Vector3();\r\n    this.midpoint = new THREE.Vector3();\r\n    this.area = 0;\r\n\r\n    this.constant = 0; // signed distance from face to the origin\r\n    this.outside = null; // reference to a vertex in a vertex list this face can see\r\n    this.mark = Visible;\r\n    this.edge = null;\r\n  }\r\n\r\n  Object.assign(Face, {\r\n    create: function(a, b, c) {\r\n      var face = new Face();\r\n\r\n      var e0 = new HalfEdge(a, face);\r\n      var e1 = new HalfEdge(b, face);\r\n      var e2 = new HalfEdge(c, face);\r\n\r\n      // join edges\r\n\r\n      e0.next = e2.prev = e1;\r\n      e1.next = e0.prev = e2;\r\n      e2.next = e1.prev = e0;\r\n\r\n      // main half edge reference\r\n\r\n      face.edge = e0;\r\n\r\n      return face.compute();\r\n    }\r\n  });\r\n\r\n  Object.assign(Face.prototype, {\r\n    getEdge: function(i) {\r\n      var edge = this.edge;\r\n\r\n      while (i > 0) {\r\n        edge = edge.next;\r\n        i--;\r\n      }\r\n\r\n      while (i < 0) {\r\n        edge = edge.prev;\r\n        i++;\r\n      }\r\n\r\n      return edge;\r\n    },\r\n\r\n    compute: (function() {\r\n      var triangle;\r\n\r\n      return function compute() {\r\n        if (triangle === undefined) triangle = new THREE.Triangle();\r\n\r\n        var a = this.edge.tail();\r\n        var b = this.edge.head();\r\n        var c = this.edge.next.head();\r\n\r\n        triangle.set(a.point, b.point, c.point);\r\n\r\n        triangle.normal(this.normal);\r\n        triangle.midpoint(this.midpoint);\r\n        this.area = triangle.area();\r\n\r\n        this.constant = this.normal.dot(this.midpoint);\r\n\r\n        return this;\r\n      };\r\n    })(),\r\n\r\n    distanceToPoint: function(point) {\r\n      return this.normal.dot(point) - this.constant;\r\n    }\r\n  });\r\n\r\n  // Entity for a Doubly-Connected Edge List (DCEL).\r\n\r\n  function HalfEdge(vertex, face) {\r\n    this.vertex = vertex;\r\n    this.prev = null;\r\n    this.next = null;\r\n    this.twin = null;\r\n    this.face = face;\r\n  }\r\n\r\n  Object.assign(HalfEdge.prototype, {\r\n    head: function() {\r\n      return this.vertex;\r\n    },\r\n\r\n    tail: function() {\r\n      return this.prev ? this.prev.vertex : null;\r\n    },\r\n\r\n    length: function() {\r\n      var head = this.head();\r\n      var tail = this.tail();\r\n\r\n      if (tail !== null) {\r\n        return tail.point.distanceTo(head.point);\r\n      }\r\n\r\n      return -1;\r\n    },\r\n\r\n    lengthSquared: function() {\r\n      var head = this.head();\r\n      var tail = this.tail();\r\n\r\n      if (tail !== null) {\r\n        return tail.point.distanceToSquared(head.point);\r\n      }\r\n\r\n      return -1;\r\n    },\r\n\r\n    setTwin: function(edge) {\r\n      this.twin = edge;\r\n      edge.twin = this;\r\n\r\n      return this;\r\n    }\r\n  });\r\n\r\n  // A vertex as a double linked list node.\r\n\r\n  function VertexNode(point) {\r\n    this.point = point;\r\n    this.prev = null;\r\n    this.next = null;\r\n    this.face = null; // the face that is able to see this vertex\r\n  }\r\n\r\n  // A double linked list that contains vertex nodes.\r\n\r\n  function VertexList() {\r\n    this.head = null;\r\n    this.tail = null;\r\n  }\r\n\r\n  Object.assign(VertexList.prototype, {\r\n    first: function() {\r\n      return this.head;\r\n    },\r\n\r\n    last: function() {\r\n      return this.tail;\r\n    },\r\n\r\n    clear: function() {\r\n      this.head = this.tail = null;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Inserts a vertex before the target vertex\r\n\r\n    insertBefore: function(target, vertex) {\r\n      vertex.prev = target.prev;\r\n      vertex.next = target;\r\n\r\n      if (vertex.prev === null) {\r\n        this.head = vertex;\r\n      } else {\r\n        vertex.prev.next = vertex;\r\n      }\r\n\r\n      target.prev = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Inserts a vertex after the target vertex\r\n\r\n    insertAfter: function(target, vertex) {\r\n      vertex.prev = target;\r\n      vertex.next = target.next;\r\n\r\n      if (vertex.next === null) {\r\n        this.tail = vertex;\r\n      } else {\r\n        vertex.next.prev = vertex;\r\n      }\r\n\r\n      target.next = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Appends a vertex to the end of the linked list\r\n\r\n    append: function(vertex) {\r\n      if (this.head === null) {\r\n        this.head = vertex;\r\n      } else {\r\n        this.tail.next = vertex;\r\n      }\r\n\r\n      vertex.prev = this.tail;\r\n      vertex.next = null; // the tail has no subsequent vertex\r\n\r\n      this.tail = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Appends a chain of vertices where 'vertex' is the head.\r\n\r\n    appendChain: function(vertex) {\r\n      if (this.head === null) {\r\n        this.head = vertex;\r\n      } else {\r\n        this.tail.next = vertex;\r\n      }\r\n\r\n      vertex.prev = this.tail;\r\n\r\n      // ensure that the 'tail' reference points to the last vertex of the chain\r\n\r\n      while (vertex.next !== null) {\r\n        vertex = vertex.next;\r\n      }\r\n\r\n      this.tail = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Removes a vertex from the linked list\r\n\r\n    remove: function(vertex) {\r\n      if (vertex.prev === null) {\r\n        this.head = vertex.next;\r\n      } else {\r\n        vertex.prev.next = vertex.next;\r\n      }\r\n\r\n      if (vertex.next === null) {\r\n        this.tail = vertex.prev;\r\n      } else {\r\n        vertex.next.prev = vertex.prev;\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    // Removes a list of vertices whose 'head' is 'a' and whose 'tail' is b\r\n\r\n    removeSubList: function(a, b) {\r\n      if (a.prev === null) {\r\n        this.head = b.next;\r\n      } else {\r\n        a.prev.next = b.next;\r\n      }\r\n\r\n      if (b.next === null) {\r\n        this.tail = a.prev;\r\n      } else {\r\n        b.next.prev = a.prev;\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    isEmpty: function() {\r\n      return this.head === null;\r\n    }\r\n  });\r\n\r\n  // export\r\n\r\n  THREE.QuickHull = QuickHull;\r\n})();\r\n","/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\r\n\r\n(function() {\r\n  // ConvexGeometry\r\n\r\n  function ConvexGeometry(points) {\r\n    THREE.Geometry.call(this);\r\n\r\n    this.type = \"ConvexGeometry\";\r\n\r\n    this.fromBufferGeometry(new ConvexBufferGeometry(points));\r\n    this.mergeVertices();\r\n  }\r\n\r\n  ConvexGeometry.prototype = Object.create(THREE.Geometry.prototype);\r\n  ConvexGeometry.prototype.constructor = ConvexGeometry;\r\n\r\n  // ConvexBufferGeometry\r\n\r\n  function ConvexBufferGeometry(points) {\r\n    THREE.BufferGeometry.call(this);\r\n\r\n    this.type = \"ConvexBufferGeometry\";\r\n\r\n    // buffers\r\n\r\n    var vertices = [];\r\n    var normals = [];\r\n\r\n    // execute QuickHull\r\n\r\n    if (THREE.QuickHull === undefined) {\r\n      console.error(\r\n        \"THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on THREE.QuickHull\"\r\n      );\r\n    }\r\n\r\n    var quickHull = new THREE.QuickHull().setFromPoints(points);\r\n\r\n    // generate vertices and normals\r\n\r\n    var faces = quickHull.faces;\r\n\r\n    for (var i = 0; i < faces.length; i++) {\r\n      var face = faces[i];\r\n      var edge = face.edge;\r\n\r\n      // we move along a doubly-connected edge list to access all face points (see HalfEdge docs)\r\n\r\n      do {\r\n        var point = edge.head().point;\r\n\r\n        vertices.push(point.x, point.y, point.z);\r\n        normals.push(face.normal.x, face.normal.y, face.normal.z);\r\n\r\n        edge = edge.next;\r\n      } while (edge !== face.edge);\r\n    }\r\n\r\n    // build geometry\r\n\r\n    this.addAttribute(\r\n      \"position\",\r\n      new THREE.Float32BufferAttribute(vertices, 3)\r\n    );\r\n    this.addAttribute(\"normal\", new THREE.Float32BufferAttribute(normals, 3));\r\n  }\r\n\r\n  ConvexBufferGeometry.prototype = Object.create(\r\n    THREE.BufferGeometry.prototype\r\n  );\r\n  ConvexBufferGeometry.prototype.constructor = ConvexBufferGeometry;\r\n\r\n  // export\r\n\r\n  THREE.ConvexGeometry = ConvexGeometry;\r\n  THREE.ConvexBufferGeometry = ConvexBufferGeometry;\r\n})();\r\n","/**\r\n * Based on http://www.emagix.net/academic/mscs-project/item/camera-sync-with-css3-and-webgl-threejs\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar THREE = require(\"three\");\r\n\r\nTHREE.CSS3DObject = function(element) {\r\n  THREE.Object3D.call(this);\r\n\r\n  this.element = element;\r\n  this.element.style.position = \"absolute\";\r\n\r\n  this.addEventListener(\"removed\", function() {\r\n    if (this.element.parentNode !== null) {\r\n      this.element.parentNode.removeChild(this.element);\r\n    }\r\n  });\r\n};\r\n\r\nTHREE.CSS3DObject.prototype = Object.create(THREE.Object3D.prototype);\r\nTHREE.CSS3DObject.prototype.constructor = THREE.CSS3DObject;\r\n\r\nTHREE.CSS3DSprite = function(element) {\r\n  THREE.CSS3DObject.call(this, element);\r\n};\r\n\r\nTHREE.CSS3DSprite.prototype = Object.create(THREE.CSS3DObject.prototype);\r\nTHREE.CSS3DSprite.prototype.constructor = THREE.CSS3DSprite;\r\n\r\n//\r\n\r\nTHREE.CSS3DRenderer = function() {\r\n  console.log(\"THREE.CSS3DRenderer\", THREE.REVISION);\r\n\r\n  var _width, _height;\r\n\r\n  var matrix = new THREE.Matrix4();\r\n\r\n  var cache = {\r\n    camera: { fov: 0, style: \"\" },\r\n    objects: {}\r\n  };\r\n\r\n  var domElement = document.createElement(\"div\");\r\n  domElement.style.overflow = \"hidden\";\r\n\r\n  domElement.style.WebkitTransformStyle = \"preserve-3d\";\r\n  domElement.style.MozTransformStyle = \"preserve-3d\";\r\n  domElement.style.oTransformStyle = \"preserve-3d\";\r\n  domElement.style.transformStyle = \"preserve-3d\";\r\n\r\n  this.domElement = domElement;\r\n\r\n  var cameraElement = document.createElement(\"div\");\r\n\r\n  cameraElement.style.position = \"absolute\";\r\n  cameraElement.style.left = \"50%\";\r\n  cameraElement.style.top = \"50%\";\r\n\r\n  cameraElement.style.WebkitTransformStyle = \"preserve-3d\";\r\n  cameraElement.style.MozTransformStyle = \"preserve-3d\";\r\n  cameraElement.style.oTransformStyle = \"preserve-3d\";\r\n  cameraElement.style.transformStyle = \"preserve-3d\";\r\n\r\n  domElement.appendChild(cameraElement);\r\n\r\n  this.setClearColor = function() {};\r\n\r\n  // Added by Argo-lite, for optimization\r\n  this.isPaused = false;\r\n\r\n  this.getSize = function() {\r\n    return {\r\n      width: _width,\r\n      height: _height\r\n    };\r\n  };\r\n\r\n  this.setSize = function(width, height) {\r\n    _width = width;\r\n    _height = height;\r\n\r\n    domElement.style.width = width + \"px\";\r\n    domElement.style.height = height + \"px\";\r\n  };\r\n\r\n  function epsilon(value) {\r\n    return Math.abs(value) < Number.EPSILON ? 0 : value;\r\n  }\r\n\r\n  function getCameraCSSMatrix(matrix) {\r\n    var elements = matrix.elements;\r\n\r\n    return (\r\n      \"matrix3d(\" +\r\n      epsilon(elements[0]) +\r\n      \",\" +\r\n      epsilon(-elements[1]) +\r\n      \",\" +\r\n      epsilon(elements[2]) +\r\n      \",\" +\r\n      epsilon(elements[3]) +\r\n      \",\" +\r\n      epsilon(elements[4]) +\r\n      \",\" +\r\n      epsilon(-elements[5]) +\r\n      \",\" +\r\n      epsilon(elements[6]) +\r\n      \",\" +\r\n      epsilon(elements[7]) +\r\n      \",\" +\r\n      epsilon(elements[8]) +\r\n      \",\" +\r\n      epsilon(-elements[9]) +\r\n      \",\" +\r\n      epsilon(elements[10]) +\r\n      \",\" +\r\n      epsilon(elements[11]) +\r\n      \",\" +\r\n      epsilon(elements[12]) +\r\n      \",\" +\r\n      epsilon(-elements[13]) +\r\n      \",\" +\r\n      epsilon(elements[14]) +\r\n      \",\" +\r\n      epsilon(elements[15]) +\r\n      \")\"\r\n    );\r\n  }\r\n\r\n  function getObjectCSSMatrix(matrix) {\r\n    var elements = matrix.elements;\r\n\r\n    return (\r\n      \"translate3d(-50%,-50%,0) matrix3d(\" +\r\n      epsilon(elements[0]) +\r\n      \",\" +\r\n      epsilon(elements[1]) +\r\n      \",\" +\r\n      epsilon(elements[2]) +\r\n      \",\" +\r\n      epsilon(elements[3]) +\r\n      \",\" +\r\n      epsilon(-elements[4]) +\r\n      \",\" +\r\n      epsilon(-elements[5]) +\r\n      \",\" +\r\n      epsilon(-elements[6]) +\r\n      \",\" +\r\n      epsilon(-elements[7]) +\r\n      \",\" +\r\n      epsilon(elements[8]) +\r\n      \",\" +\r\n      epsilon(elements[9]) +\r\n      \",\" +\r\n      epsilon(elements[10]) +\r\n      \",\" +\r\n      epsilon(elements[11]) +\r\n      \",\" +\r\n      epsilon(elements[12]) +\r\n      \",\" +\r\n      epsilon(elements[13]) +\r\n      \",\" +\r\n      epsilon(elements[14]) +\r\n      \",\" +\r\n      epsilon(elements[15]) +\r\n      \")\"\r\n    );\r\n  }\r\n\r\n  function renderObject(object, camera) {\r\n    if (object instanceof THREE.CSS3DObject) {\r\n      var style;\r\n\r\n      if (object instanceof THREE.CSS3DSprite) {\r\n        // http://swiftcoder.wordpress.com/2008/11/25/constructing-a-billboard-matrix/\r\n\r\n        matrix.copy(camera.matrixWorldInverse);\r\n        matrix.transpose();\r\n        matrix.copyPosition(object.matrixWorld);\r\n        matrix.scale(object.scale);\r\n\r\n        matrix.elements[3] = 0;\r\n        matrix.elements[7] = 0;\r\n        matrix.elements[11] = 0;\r\n        matrix.elements[15] = 1;\r\n\r\n        style = getObjectCSSMatrix(matrix);\r\n      } else {\r\n        style = getObjectCSSMatrix(object.matrixWorld);\r\n      }\r\n\r\n      var element = object.element;\r\n      var cachedStyle = cache.objects[object.id];\r\n\r\n      if (cachedStyle === undefined || cachedStyle !== style) {\r\n        element.style.WebkitTransform = style;\r\n        element.style.MozTransform = style;\r\n        element.style.oTransform = style;\r\n        element.style.transform = style;\r\n\r\n        cache.objects[object.id] = style;\r\n      }\r\n\r\n      if (element.parentNode !== cameraElement) {\r\n        cameraElement.appendChild(element);\r\n      }\r\n    }\r\n\r\n    for (var i = 0, l = object.children.length; i < l; i++) {\r\n      renderObject(object.children[i], camera);\r\n    }\r\n  }\r\n\r\n  this.render = function(scene, camera) {\r\n    if (this.isPaused) {\r\n      return;\r\n    }\r\n    var fov =\r\n      (0.5 / Math.tan(THREE.Math.degToRad(camera.getEffectiveFOV() * 0.5))) *\r\n      _height;\r\n\r\n    if (cache.camera.fov !== fov) {\r\n      domElement.style.WebkitPerspective = fov + \"px\";\r\n      domElement.style.MozPerspective = fov + \"px\";\r\n      domElement.style.oPerspective = fov + \"px\";\r\n      domElement.style.perspective = fov + \"px\";\r\n\r\n      cache.camera.fov = fov;\r\n    }\r\n\r\n    scene.updateMatrixWorld();\r\n\r\n    if (camera.parent === null) camera.updateMatrixWorld();\r\n\r\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\r\n\r\n    var style =\r\n      \"translateZ(\" +\r\n      fov +\r\n      \"px)\" +\r\n      getCameraCSSMatrix(camera.matrixWorldInverse);\r\n\r\n    if (cache.camera.style !== style) {\r\n      cameraElement.style.WebkitTransform = style;\r\n      cameraElement.style.MozTransform = style;\r\n      cameraElement.style.oTransform = style;\r\n      cameraElement.style.transform = style;\r\n\r\n      cache.camera.style = style;\r\n    }\r\n\r\n    renderObject(scene, camera);\r\n  };\r\n};\r\n","var $ = require(\"jquery\");\r\n\r\nmodule.exports = function(THREE) {\r\n  /**\r\n   * @author qiao / https://github.com/qiao\r\n   * @author mrdoob / http://mrdoob.com\r\n   * @author alteredq / http://alteredqualia.com/\r\n   * @author WestLangley / http://github.com/WestLangley\r\n   * @author erich666 / http://erichaines.com\r\n   */\r\n\r\n  // This set of controls performs orbiting, dollying (zooming), and panning.\r\n  // Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\r\n  //\r\n  //    Orbit - left mouse / touch: one finger move\r\n  //    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\r\n  //    Pan - right mouse, or arrow keys / touch: three finter swipe\r\n\r\n  function OrbitControls(object, domElement, appState) {\r\n\r\n    \r\n    this.appState = appState;\r\n\r\n    this.object = object;\r\n\r\n    this.domElement = domElement !== undefined ? domElement : document;\r\n\r\n    // Set to false to disable this control\r\n    this.enabled = true;\r\n\r\n    // \"target\" sets the location of focus, where the object orbits around\r\n    this.target = new THREE.Vector3();\r\n\r\n    // How far you can dolly in and out ( PerspectiveCamera only )\r\n    this.minDistance = 0;\r\n    this.maxDistance = Infinity;\r\n\r\n    // How far you can zoom in and out ( OrthographicCamera only )\r\n    this.minZoom = 0;\r\n    this.maxZoom = Infinity;\r\n\r\n    // How far you can orbit vertically, upper and lower limits.\r\n    // Range is 0 to Math.PI radians.\r\n    this.minPolarAngle = 0; // radians\r\n    this.maxPolarAngle = Math.PI; // radians\r\n\r\n    // How far you can orbit horizontally, upper and lower limits.\r\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\r\n    this.minAzimuthAngle = -Infinity; // radians\r\n    this.maxAzimuthAngle = Infinity; // radians\r\n\r\n    // Set to true to enable damping (inertia)\r\n    // If damping is enabled, you must call controls.update() in your animation loop\r\n    this.enableDamping = false;\r\n    this.dampingFactor = 0.25;\r\n\r\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\r\n    // Set to false to disable zooming\r\n    this.enableZoom = true;\r\n    this.zoomSpeed = 1.0;\r\n\r\n    // Set to false to disable rotating\r\n    this.enableRotate = true;\r\n    this.rotateSpeed = 1.0;\r\n\r\n    // Set to false to disable panning\r\n    this.enablePan = true;\r\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\r\n\r\n    // Set to true to automatically rotate around the target\r\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\r\n    this.autoRotate = false;\r\n    this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\r\n\r\n    // Set to false to disable use of the keys\r\n    this.enableKeys = true;\r\n\r\n    // The four arrow keys\r\n    this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40, SPACE: 32 };\r\n\r\n    // Mouse buttons\r\n    this.mouseButtons = {\r\n      ORBIT: THREE.MOUSE.LEFT,\r\n      ZOOM: THREE.MOUSE.MIDDLE,\r\n      PAN: THREE.MOUSE.RIGHT\r\n    };\r\n\r\n    // for reset\r\n    this.target0 = this.target.clone();\r\n    this.position0 = this.object.position.clone();\r\n    this.zoom0 = this.object.zoom;\r\n\r\n    // for space panning\r\n    this.spacePan = false;\r\n    this.bothPan = false;\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    this.getPolarAngle = function() {\r\n      return spherical.phi;\r\n    };\r\n\r\n    this.getAzimuthalAngle = function() {\r\n      return spherical.theta;\r\n    };\r\n\r\n    this.reset = function() {\r\n      scope.target.copy(scope.target0);\r\n      scope.object.position.copy(scope.position0);\r\n      scope.object.zoom = scope.zoom0;\r\n\r\n      scope.object.updateProjectionMatrix();\r\n      scope.dispatchEvent(changeEvent);\r\n\r\n      scope.update();\r\n\r\n      state = STATE.NONE;\r\n    };\r\n\r\n    // this method is exposed, but perhaps it would be better if we can make it private...\r\n    this.update = (function() {\r\n      var offset = new THREE.Vector3();\r\n\r\n      // so camera.up is the orbit axis\r\n      var quat = new THREE.Quaternion().setFromUnitVectors(\r\n        object.up,\r\n        new THREE.Vector3(0, 1, 0)\r\n      );\r\n      var quatInverse = quat.clone().inverse();\r\n\r\n      var lastPosition = new THREE.Vector3();\r\n      var lastQuaternion = new THREE.Quaternion();\r\n\r\n      return function update() {\r\n        var position = scope.object.position;\r\n\r\n        offset.copy(position).sub(scope.target);\r\n\r\n        // rotate offset to \"y-axis-is-up\" space\r\n        offset.applyQuaternion(quat);\r\n\r\n        // angle from z-axis around y-axis\r\n        spherical.setFromVector3(offset);\r\n\r\n        if (scope.autoRotate && state === STATE.NONE) {\r\n          rotateLeft(getAutoRotationAngle());\r\n        }\r\n\r\n        spherical.theta += sphericalDelta.theta;\r\n        spherical.phi += sphericalDelta.phi;\r\n\r\n        // restrict theta to be between desired limits\r\n        spherical.theta = Math.max(\r\n          scope.minAzimuthAngle,\r\n          Math.min(scope.maxAzimuthAngle, spherical.theta)\r\n        );\r\n\r\n        // restrict phi to be between desired limits\r\n        spherical.phi = Math.max(\r\n          scope.minPolarAngle,\r\n          Math.min(scope.maxPolarAngle, spherical.phi)\r\n        );\r\n\r\n        spherical.makeSafe();\r\n\r\n        spherical.radius *= scale;\r\n\r\n        // restrict radius to be between desired limits\r\n        spherical.radius = Math.max(\r\n          scope.minDistance,\r\n          Math.min(scope.maxDistance, spherical.radius)\r\n        );\r\n\r\n        // move target to panned location\r\n        scope.target.add(panOffset);\r\n\r\n        offset.setFromSpherical(spherical);\r\n\r\n        // rotate offset back to \"camera-up-vector-is-up\" space\r\n        offset.applyQuaternion(quatInverse);\r\n\r\n        position.copy(scope.target).add(offset);\r\n\r\n        scope.object.lookAt(scope.target);\r\n\r\n        if (scope.enableDamping === true) {\r\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\r\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\r\n        } else {\r\n          sphericalDelta.set(0, 0, 0);\r\n        }\r\n\r\n        scale = 1;\r\n        panOffset.set(0, 0, 0);\r\n\r\n        // update condition is:\r\n        // min(camera displacement, camera rotation in radians)^2 > EPS\r\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\r\n\r\n        if (\r\n          zoomChanged ||\r\n          lastPosition.distanceToSquared(scope.object.position) > EPS ||\r\n          8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\r\n        ) {\r\n          scope.dispatchEvent(changeEvent);\r\n\r\n          lastPosition.copy(scope.object.position);\r\n          lastQuaternion.copy(scope.object.quaternion);\r\n          zoomChanged = false;\r\n\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      };\r\n    })();\r\n\r\n    this.dispose = function() {\r\n      scope.domElement.removeEventListener(\"contextmenu\", onContextMenu, false);\r\n      scope.domElement.removeEventListener(\"mousedown\", onMouseDown, false);\r\n      scope.domElement.removeEventListener(\"wheel\", onMouseWheel, false);\r\n\r\n      scope.domElement.removeEventListener(\"touchstart\", onTouchStart, false);\r\n      scope.domElement.removeEventListener(\"touchend\", onTouchEnd, false);\r\n      scope.domElement.removeEventListener(\"touchmove\", onTouchMove, false);\r\n\r\n      document.removeEventListener(\"mousemove\", onMouseMove, false);\r\n      document.removeEventListener(\"mouseup\", onMouseUp, false);\r\n\r\n      window.removeEventListener(\"keydown\", onKeyDown, false);\r\n\r\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\r\n    };\r\n\r\n    //\r\n    // internals\r\n    //\r\n\r\n    var scope = this;\r\n    var changeEvent = { type: \"change\" };\r\n    var startEvent = { type: \"start\" };\r\n    var endEvent = { type: \"end\" };\r\n\r\n    var STATE = {\r\n      NONE: -1,\r\n      ROTATE: 0,\r\n      DOLLY: 1,\r\n      PAN: 2,\r\n      TOUCH_ROTATE: 3,\r\n      TOUCH_DOLLY: 4,\r\n      TOUCH_PAN: 5\r\n    };\r\n\r\n    var state = STATE.NONE;\r\n\r\n    var EPS = 0.000001;\r\n\r\n    // current position in spherical coordinates\r\n    var spherical = new THREE.Spherical();\r\n    var sphericalDelta = new THREE.Spherical();\r\n\r\n    var scale = 1;\r\n    var panOffset = new THREE.Vector3();\r\n    var zoomChanged = false;\r\n\r\n    var rotateStart = new THREE.Vector2();\r\n    var rotateEnd = new THREE.Vector2();\r\n    var rotateDelta = new THREE.Vector2();\r\n\r\n    var panStart = new THREE.Vector2();\r\n    var panEnd = new THREE.Vector2();\r\n    var panDelta = new THREE.Vector2();\r\n\r\n    var dollyStart = new THREE.Vector2();\r\n    var dollyEnd = new THREE.Vector2();\r\n    var dollyDelta = new THREE.Vector2();\r\n\r\n    function getAutoRotationAngle() {\r\n      return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\r\n    }\r\n\r\n    function getZoomScale() {\r\n      return Math.pow(0.95, scope.zoomSpeed);\r\n    }\r\n\r\n    function rotateLeft(angle) {\r\n      sphericalDelta.theta -= angle;\r\n    }\r\n\r\n    function rotateUp(angle) {\r\n      sphericalDelta.phi -= angle;\r\n    }\r\n\r\n    var panLeft = (function() {\r\n      var v = new THREE.Vector3();\r\n\r\n      return function panLeft(distance, objectMatrix) {\r\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\r\n        v.multiplyScalar(-distance);\r\n\r\n        panOffset.add(v);\r\n      };\r\n    })();\r\n\r\n    var panUp = (function() {\r\n      var v = new THREE.Vector3();\r\n\r\n      return function panUp(distance, objectMatrix) {\r\n        v.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix\r\n        v.multiplyScalar(distance);\r\n\r\n        panOffset.add(v);\r\n      };\r\n    })();\r\n\r\n    // deltaX and deltaY are in pixels; right and down are positive\r\n    var pan = (function() {\r\n      var offset = new THREE.Vector3();\r\n\r\n      return function pan(deltaX, deltaY) {\r\n        var element =\r\n          scope.domElement === document\r\n            ? scope.domElement.body\r\n            : scope.domElement;\r\n\r\n        if (scope.object instanceof THREE.PerspectiveCamera) {\r\n          // perspective\r\n          var position = scope.object.position;\r\n          offset.copy(position).sub(scope.target);\r\n          var targetDistance = offset.length();\r\n\r\n          // half of the fov is center to top of screen\r\n          targetDistance *= Math.tan(\r\n            ((scope.object.fov / 2) * Math.PI) / 180.0\r\n          );\r\n\r\n          // we actually don't use screenWidth, since perspective camera is fixed to screen height\r\n          panLeft(\r\n            (2 * deltaX * targetDistance) / element.clientHeight,\r\n            scope.object.matrix\r\n          );\r\n          panUp(\r\n            (2 * deltaY * targetDistance) / element.clientHeight,\r\n            scope.object.matrix\r\n          );\r\n        } else if (scope.object instanceof THREE.OrthographicCamera) {\r\n          // orthographic\r\n          panLeft(\r\n            (deltaX * (scope.object.right - scope.object.left)) /\r\n              scope.object.zoom /\r\n              element.clientWidth,\r\n            scope.object.matrix\r\n          );\r\n          panUp(\r\n            (deltaY * (scope.object.top - scope.object.bottom)) /\r\n              scope.object.zoom /\r\n              element.clientHeight,\r\n            scope.object.matrix\r\n          );\r\n        } else {\r\n          // camera neither orthographic nor perspective\r\n          console.warn(\r\n            \"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"\r\n          );\r\n          scope.enablePan = false;\r\n        }\r\n      };\r\n    })();\r\n\r\n    // Expose panning for external usage\r\n    this.pan = pan;\r\n\r\n\r\n    function dollyIn(dollyScale, mousePos, event) {\r\n      if (scope.object instanceof THREE.PerspectiveCamera) {\r\n        scale /= dollyScale;\r\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\r\n        scope.object.zoom = Math.max(\r\n          scope.minZoom,\r\n          Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\r\n        );\r\n        scope.object.updateProjectionMatrix();\r\n        zoomChanged = true;\r\n      } else {\r\n        console.warn(\r\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\r\n        );\r\n        scope.enableZoom = false;\r\n      }\r\n    }\r\n\r\n    function dollyOut(dollyScale, mousePos) {\r\n      if (scope.object instanceof THREE.PerspectiveCamera) {\r\n        scale *= dollyScale;\r\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\r\n        scope.object.zoom = Math.max(\r\n          scope.minZoom,\r\n          Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\r\n        );\r\n        scope.object.updateProjectionMatrix();\r\n        zoomChanged = true;\r\n      } else {\r\n        console.warn(\r\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\r\n        );\r\n        scope.enableZoom = false;\r\n      }\r\n    }\r\n\r\n    //public zoom in function, used when zoom in button clicked\r\n    this.dollyIn = function(scale) {\r\n      dollyIn(scale);\r\n      scope.update()\r\n    }\r\n    //public zoom out function, used when zoom out button clicked\r\n    this.dollyOut = function(scale) {\r\n      dollyOut(scale);\r\n      scope.update()\r\n    }\r\n\r\n    //\r\n    // event callbacks - update the object state\r\n    //\r\n\r\n    function handleMouseDownRotate(event) {\r\n      //console.log( 'handleMouseDownRotate' );\r\n\r\n      rotateStart.set(event.clientX, event.clientY);\r\n    }\r\n\r\n    function handleMouseDownDolly(event) {\r\n      //console.log( 'handleMouseDownDolly' );\r\n      dollyStart.set(event.clientX, event.clientY);\r\n    }\r\n\r\n    function handleMouseDownPan(event) {\r\n      //console.log( 'handleMouseDownPan' );\r\n\r\n      panStart.set(event.clientX, event.clientY);\r\n    }\r\n\r\n    function handleMouseMoveRotate(event) {\r\n      //console.log( 'handleMouseMoveRotate' );\r\n    \r\n      rotateEnd.set(event.clientX, event.clientY);\r\n      rotateDelta.subVectors(rotateEnd, rotateStart);\r\n\r\n      var element =\r\n        scope.domElement === document\r\n          ? scope.domElement.body\r\n          : scope.domElement;\r\n\r\n      // rotating across whole screen goes 360 degrees around\r\n      rotateLeft(\r\n        ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\r\n          scope.rotateSpeed\r\n      );\r\n\r\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\r\n      rotateUp(\r\n        ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\r\n          scope.rotateSpeed\r\n      );\r\n\r\n      rotateStart.copy(rotateEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleMouseMoveDolly(event) {\r\n      //console.log( 'handleMouseMoveDolly' );\r\n      dollyEnd.set(event.clientX, event.clientY);\r\n\r\n      dollyDelta.subVectors(dollyEnd, dollyStart);\r\n\r\n      if (dollyDelta.y > 0) {\r\n        dollyIn(getZoomScale());\r\n      } else if (dollyDelta.y < 0) {\r\n        dollyOut(getZoomScale());\r\n      }\r\n\r\n      dollyStart.copy(dollyEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleMouseMovePan(event) {\r\n      //console.log( 'handleMouseMovePan' );\r\n\r\n      panEnd.set(event.clientX, event.clientY);\r\n\r\n      panDelta.subVectors(panEnd, panStart);\r\n\r\n      pan(panDelta.x, panDelta.y);\r\n\r\n      panStart.copy(panEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleMouseUp(event) {\r\n      //console.log( 'handleMouseUp' );\r\n    }\r\n\r\n    function handleMouseWheel(event) {\r\n      \r\n      mousePos = {x: event.clientX, y: event.clientY}\r\n\r\n      if (event.deltaY < 0) {\r\n        dollyOut(getZoomScale(), mousePos, event);\r\n      } else if (event.deltaY > 0) {\r\n        dollyIn(getZoomScale(), mousePos, event);\r\n      }\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleKeyUp(event) {\r\n      switch (event.keyCode) {\r\n        case scope.keys.SPACE:\r\n          if (scope.spacePan == true) {\r\n            scope.spacePanStart = false;\r\n            state = STATE.NONE;\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n    function handleKeyDown(event) {\r\n      //console.log( 'handleKeyDown' );\r\n\r\n      switch (event.keyCode) {\r\n        case scope.keys.UP:\r\n          pan(0, scope.keyPanSpeed);\r\n          scope.update();\r\n          break;\r\n\r\n        case scope.keys.BOTTOM:\r\n          pan(0, -scope.keyPanSpeed);\r\n          scope.update();\r\n          break;\r\n\r\n        case scope.keys.LEFT:\r\n          pan(scope.keyPanSpeed, 0);\r\n          scope.update();\r\n          break;\r\n\r\n        case scope.keys.RIGHT:\r\n          pan(-scope.keyPanSpeed, 0);\r\n          scope.update();\r\n          break;\r\n\r\n        case scope.keys.SPACE:\r\n          if (scope.spacePan == true) {\r\n            scope.spacePanStart = true;\r\n            state = STATE.PAN;\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n    function handleTouchStartRotate(event) {\r\n      //console.log( 'handleTouchStartRotate' );\r\n\r\n      rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\r\n    }\r\n\r\n    function handleTouchStartDolly(event) {\r\n      //console.log( 'handleTouchStartDolly' );\r\n\r\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\r\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\r\n\r\n      var distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      dollyStart.set(0, distance);\r\n    }\r\n\r\n    function handleTouchStartPan(event) {\r\n      //console.log( 'handleTouchStartPan' );\r\n\r\n      panStart.set(event.touches[0].pageX, event.touches[0].pageY);\r\n    }\r\n\r\n    function handleTouchMoveRotate(event) {\r\n      //console.log( 'handleTouchMoveRotate' );\r\n\r\n      rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\r\n      rotateDelta.subVectors(rotateEnd, rotateStart);\r\n\r\n      var element =\r\n        scope.domElement === document\r\n          ? scope.domElement.body\r\n          : scope.domElement;\r\n\r\n      // rotating across whole screen goes 360 degrees around\r\n      rotateLeft(\r\n        ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\r\n          scope.rotateSpeed\r\n      );\r\n\r\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\r\n      rotateUp(\r\n        ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\r\n          scope.rotateSpeed\r\n      );\r\n\r\n      rotateStart.copy(rotateEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleTouchMoveDolly(event) {\r\n      //console.log( 'handleTouchMoveDolly' );\r\n\r\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\r\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\r\n\r\n      var distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      dollyEnd.set(0, distance);\r\n\r\n      dollyDelta.subVectors(dollyEnd, dollyStart);\r\n\r\n      if (dollyDelta.y > 0) {\r\n        dollyOut(getZoomScale());\r\n      } else if (dollyDelta.y < 0) {\r\n        dollyIn(getZoomScale());\r\n      }\r\n\r\n      dollyStart.copy(dollyEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleTouchMovePan(event) {\r\n      //console.log( 'handleTouchMovePan' );\r\n\r\n      panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\r\n\r\n      panDelta.subVectors(panEnd, panStart);\r\n\r\n      pan(panDelta.x, panDelta.y);\r\n\r\n      panStart.copy(panEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleTouchEnd(event) {\r\n      //console.log( 'handleTouchEnd' );\r\n    }\r\n\r\n    //\r\n    // event handlers - FSM: listen for events and reset state\r\n    //\r\n\r\n    function onMouseDown(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      event.preventDefault();\r\n\r\n      if (event.button === scope.mouseButtons.ORBIT) {\r\n        if (scope.enableRotate === false) return;\r\n\r\n        handleMouseDownRotate(event);\r\n\r\n        state = STATE.ROTATE;\r\n      } else if (event.button === scope.mouseButtons.ZOOM) {\r\n        if (scope.enableZoom === false) return;\r\n\r\n        handleMouseDownDolly(event);\r\n\r\n        state = STATE.DOLLY;\r\n      } else if (event.button === scope.mouseButtons.PAN) {\r\n        if (scope.enablePan === false) return;\r\n\r\n        if (!scope.spacePan || scope.bothPan) {\r\n          handleMouseDownPan(event);\r\n\r\n          state = STATE.PAN;\r\n        }\r\n      }\r\n\r\n      if (state !== STATE.NONE) {\r\n        document.addEventListener(\"mousemove\", onMouseMove, false);\r\n        document.addEventListener(\"mouseup\", onMouseUp, false);\r\n\r\n        scope.dispatchEvent(startEvent);\r\n      }\r\n    }\r\n\r\n    function onMouseMove(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      event.preventDefault();\r\n\r\n      if (state === STATE.ROTATE) {\r\n        if (scope.enableRotate === false) return;\r\n\r\n        handleMouseMoveRotate(event);\r\n      } else if (state === STATE.DOLLY) {\r\n        if (scope.enableZoom === false) return;\r\n\r\n        handleMouseMoveDolly(event);\r\n      } else if (state === STATE.PAN) {\r\n        if (scope.enablePan === false) return;\r\n\r\n        if (scope.spacePan == true) {\r\n          if (scope.spacePanStart == true) {\r\n            handleMouseDownPan(event);\r\n            scope.spacePanStart = false;\r\n          }\r\n        }\r\n\r\n        handleMouseMovePan(event);\r\n      }\r\n    }\r\n\r\n    function onMouseUp(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      handleMouseUp(event);\r\n\r\n      //document.removeEventListener( 'mousemove', onMouseMove, false );\r\n      document.removeEventListener(\"mouseup\", onMouseUp, false);\r\n\r\n      scope.dispatchEvent(endEvent);\r\n\r\n      state = STATE.NONE;\r\n    }\r\n\r\n    function onMouseWheel(event) {\r\n      if (\r\n        scope.enabled === false ||\r\n        scope.enableZoom === false ||\r\n        (state !== STATE.NONE && state !== STATE.ROTATE)\r\n      )\r\n        return;\r\n\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      handleMouseWheel(event);\r\n\r\n      scope.dispatchEvent(startEvent); // not sure why these are here...\r\n      scope.dispatchEvent(endEvent);\r\n    }\r\n\r\n    function onKeyDown(event) {\r\n      if (\r\n        scope.enabled === false ||\r\n        scope.enableKeys === false ||\r\n        scope.enablePan === false\r\n      )\r\n        return;\r\n\r\n      document.addEventListener(\"mousemove\", onMouseMove, false);\r\n\r\n      handleKeyDown(event);\r\n    }\r\n\r\n    function onKeyUp(event) {\r\n      if (\r\n        scope.enabled === false ||\r\n        scope.enableKeys === false ||\r\n        scope.enablePan === false\r\n      )\r\n        return;\r\n\r\n      handleKeyUp(event);\r\n    }\r\n\r\n    function onTouchStart(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      switch (event.touches.length) {\r\n        case 1: // one-fingered touch: rotate\r\n          if (scope.enableRotate === false) return;\r\n\r\n          handleTouchStartRotate(event);\r\n\r\n          state = STATE.TOUCH_ROTATE;\r\n\r\n          break;\r\n\r\n        case 2: // two-fingered touch: dolly\r\n          if (scope.enableZoom === false) return;\r\n\r\n          handleTouchStartDolly(event);\r\n\r\n          state = STATE.TOUCH_DOLLY;\r\n\r\n          break;\r\n\r\n        case 3: // three-fingered touch: pan\r\n          if (scope.enablePan === false) return;\r\n\r\n          handleTouchStartPan(event);\r\n\r\n          state = STATE.TOUCH_PAN;\r\n\r\n          break;\r\n\r\n        default:\r\n          state = STATE.NONE;\r\n      }\r\n\r\n      if (state !== STATE.NONE) {\r\n        scope.dispatchEvent(startEvent);\r\n      }\r\n    }\r\n\r\n    function onTouchMove(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      switch (event.touches.length) {\r\n        case 1: // one-fingered touch: rotate\r\n          if (scope.enableRotate === false) return;\r\n          if (state !== STATE.TOUCH_ROTATE) return; // is this needed?...\r\n\r\n          handleTouchMoveRotate(event);\r\n\r\n          break;\r\n\r\n        case 2: // two-fingered touch: dolly\r\n          if (scope.enableZoom === false) return;\r\n          if (state !== STATE.TOUCH_DOLLY) return; // is this needed?...\r\n\r\n          handleTouchMoveDolly(event);\r\n\r\n          break;\r\n\r\n        case 3: // three-fingered touch: pan\r\n          if (scope.enablePan === false) return;\r\n          if (state !== STATE.TOUCH_PAN) return; // is this needed?...\r\n\r\n          handleTouchMovePan(event);\r\n\r\n          break;\r\n\r\n        default:\r\n          state = STATE.NONE;\r\n      }\r\n    }\r\n\r\n    function onTouchEnd(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      handleTouchEnd(event);\r\n\r\n      scope.dispatchEvent(endEvent);\r\n\r\n      state = STATE.NONE;\r\n    }\r\n\r\n    function onContextMenu(event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    //\r\n\r\n    scope.domElement.addEventListener(\"contextmenu\", onContextMenu, false);\r\n\r\n    scope.domElement.addEventListener(\"mousedown\", onMouseDown, false);\r\n    scope.domElement.addEventListener(\"wheel\", onMouseWheel, false);\r\n\r\n    scope.domElement.addEventListener(\"touchstart\", onTouchStart, false);\r\n    scope.domElement.addEventListener(\"touchend\", onTouchEnd, false);\r\n    scope.domElement.addEventListener(\"touchmove\", onTouchMove, false);\r\n\r\n    window.addEventListener(\"keydown\", onKeyDown, false);\r\n    window.addEventListener(\"keyup\", onKeyUp, false);\r\n\r\n    // force an update at start\r\n\r\n    this.update();\r\n\r\n    \r\n    \r\n  }\r\n\r\n  OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\r\n  OrbitControls.prototype.constructor = OrbitControls;\r\n\r\n  Object.defineProperties(OrbitControls.prototype, {\r\n    center: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .center has been renamed to .target\"\r\n        );\r\n        return this.target;\r\n      }\r\n    },\r\n\r\n    // backward compatibility\r\n\r\n    noZoom: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"\r\n        );\r\n        return !this.enableZoom;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"\r\n        );\r\n        this.enableZoom = !value;\r\n      }\r\n    },\r\n\r\n    noRotate: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"\r\n        );\r\n        return !this.enableRotate;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"\r\n        );\r\n        this.enableRotate = !value;\r\n      }\r\n    },\r\n\r\n    noPan: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"\r\n        );\r\n        return !this.enablePan;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"\r\n        );\r\n        this.enablePan = !value;\r\n      }\r\n    },\r\n\r\n    noKeys: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"\r\n        );\r\n        return !this.enableKeys;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"\r\n        );\r\n        this.enableKeys = !value;\r\n      }\r\n    },\r\n\r\n    staticMoving: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"\r\n        );\r\n        return !this.enableDamping;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"\r\n        );\r\n        this.enableDamping = !value;\r\n      }\r\n    },\r\n\r\n    dynamicDampingFactor: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"\r\n        );\r\n        return this.dampingFactor;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"\r\n        );\r\n        this.dampingFactor = value;\r\n      }\r\n    }\r\n  });\r\n\r\n  \r\n\r\n  return OrbitControls;\r\n};\r\n","var def = require(\"../imports\").default;\r\nvar appState = require(\"../../../stores\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   * Calculates coordinates of mouse on canvas adjusted for padding\r\n   * @param {*} event\r\n   * @param {*} currentElement\r\n   */\r\n  self.relMouseCoords = function(pageX, pageY, currentElement) {\r\n    var totalOffsetX = 0;\r\n    var totalOffsetY = 0;\r\n    var canvasX = 0;\r\n    var canvasY = 0;\r\n\r\n    do {\r\n      totalOffsetX += currentElement.offsetLeft - currentElement.scrollLeft;\r\n      totalOffsetY += currentElement.offsetTop - currentElement.scrollTop ;\r\n    } while ((currentElement = currentElement.offsetParent));\r\n\r\n    canvasX = pageX - totalOffsetX;\r\n    canvasY = pageY - totalOffsetY;\r\n\r\n    return { x: canvasX, y: canvasY };\r\n  };\r\n\r\n  /**\r\n   * Add metadata to node\r\n   * @param {*} node\r\n   */\r\n  self.prepNode = function(node) {\r\n    let nodeToAdd = node;\r\n    if (!node.data) {\r\n      node.data = {};\r\n    }\r\n\r\n    let hexToRGB = (hex) => {\r\n      var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n      return result ? \r\n      new THREE.Color(appState.graph.edges.color)\r\n      : null;\r\n  }\r\n    nodeToAdd.renderData = {\r\n      label: node.data.label || \"No Label\",\r\n      color: node.data.color || def.NODE_COLOR,\r\n      hcolor: node.data.hcolor || def.NODE_HIGHLIGHT,\r\n      shape: node.data.shape || def.NODE_SHAPE,\r\n      linecolor:  hexToRGB(appState.graph.edges.color),\r\n      numYeast: Math.ceil(Math.random() * 8),\r\n      size: node.data.size,\r\n      tsize: node.data.tsize || def.TEXT_SIZE,\r\n      x: 0,\r\n      y: 0,\r\n      vx: 0,\r\n      vy: 0\r\n    };\r\n    return nodeToAdd;\r\n  };\r\n\r\n  /**\r\n   * Creates a generic rectangle shape to use for selection and boundaries\r\n   */\r\n  self.make1x1Rect = function() {\r\n    var rectShape = new THREE.Shape();\r\n    rectShape.moveTo(0, 0);\r\n    rectShape.lineTo(0, 1);\r\n    rectShape.lineTo(1, 1);\r\n    rectShape.lineTo(1, 0);\r\n    rectShape.lineTo(0, 0);\r\n    rectShape.lineTo(0, 1);\r\n    return new THREE.ShapeGeometry(rectShape);\r\n  };\r\n\r\n  /**\r\n   * Creates a centered 2x2 Rectangle\r\n   */\r\n  self.make2x2Rect = function() {\r\n    var rectShape = new THREE.Shape();\r\n    rectShape.moveTo(-1, -1);\r\n    rectShape.lineTo(-1, 1);\r\n    rectShape.lineTo(1, 1);\r\n    rectShape.lineTo(1, -1);\r\n    rectShape.lineTo(-1, -1);\r\n    return new THREE.ShapeGeometry(rectShape);\r\n  };\r\n\r\n  /**\r\n   *  find radius of circle given the volume\r\n   * @param {*} volume\r\n   */\r\n  self.volToRadius = function(volume) {\r\n    return Math.pow((volume / Math.PI) * (3.0 / 4.0), 1.0 / 3.0);\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar MeshLine = def.MeshLine;\r\nvar MeshLineMaterial = def.MeshLineMaterial;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\nconst { default: appState } = require(\"../../stores\");\r\n\r\n// import { Line2 } from '../src/lines/Line2.js';\r\n// import { LineMaterial } from '../src/lines/LineMaterial.js';\r\n// import { LineGeometry } from '../src/lines/LineGeometry.js';\r\n\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   * Creates or converts ngraph or d3 graph\r\n   */\r\n  self.setupGraph = function() {\r\n    var createNGraph = require(\"ngraph.graph\");\r\n    self.graph = createNGraph();\r\n    if (self.inGraph) {\r\n      self.updateGraph(self.inGraph);\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  Create layout using d3\r\n   */\r\n  self.setupLayout = function() {\r\n    if (self.options.layout == \"ngraph\") {\r\n      self.setupNgraphLayout();\r\n    } else if (self.options.layout == \"d3\") {\r\n      self.setupD3Layout();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set graph layout to ngraph\r\n   */\r\n  self.setupNgraphLayout = function() {\r\n    self.force = require(\"ngraph.forcelayout\")(self.graph);\r\n  };\r\n\r\n  /**\r\n   * Set graph layout to D3 Force Directed and set decay parameters\r\n   */\r\n  self.setupD3Layout = function() {\r\n    self.force = d3\r\n      .forceSimulation()\r\n      .force(\"charge\", d3.forceManyBody().strength(-1))\r\n      .force(\"link\", d3.forceLink())\r\n      .force(\"y\", d3.forceY(0).strength(0.001))\r\n      .force(\"x\", d3.forceX(0).strength(0.001))\r\n      .stop();\r\n\r\n    // set alpha decay to be lower than the default 0.0228\r\n    // so force layout does not prematurely stop\r\n    self.force.alphaDecay(0.005);\r\n\r\n    // set velocity decay to be lower than the default 0.4\r\n    // so nodes move to their final locations\r\n    self.force.velocityDecay(0.1);\r\n  };\r\n\r\n  self.setDisplayParams = function() {\r\n    self.element = document.getElementById(\"graph-container\");\r\n    self.containerDiv = document.querySelector(\"#graph-container\");\r\n    self.clientRect = self.element.getBoundingClientRect();\r\n    self.width = self.containerDiv.offsetWidth;\r\n    self.height = self.containerDiv.offsetHeight;\r\n    self.aspect = self.width / self.height;\r\n    self.resolution = new THREE.Vector2(self.width, self.height);\r\n  };\r\n\r\n  self.setRendererParams = function() {\r\n    self.renderer.setSize(self.width, self.height);\r\n    self.cssRenderer = new THREE.CSS3DRenderer();\r\n    self.cssRenderer.setSize(self.width, self.height);\r\n    self.cssRenderer.domElement.style.position = \"absolute\";\r\n    self.cssRenderer.domElement.style.top = 0;\r\n    self.minimapRenderer.domElement.style.position = \"absolute\";\r\n    self.minimapRenderer.domElement.style.bottom = \"50px\";\r\n    self.minimapRenderer.domElement.style.offsetBottom = 50;  //numberic value of the minimap bottom offset for mouse position locate \r\n    self.minimapRenderer.domElement.style.left = 0;\r\n    self.minimapRenderer.setSize(0.2 * self.height, 0.2 * self.height);\r\n    self.minimapRenderer.zIndex = 1000;\r\n    self.renderer.setPixelRatio(window.devicePixelRatio);\r\n  };\r\n\r\n  /**\r\n   *  Create initial camera and parameters\r\n   */\r\n  self.setupCamera = function() {\r\n    self.ccamera = new THREE.PerspectiveCamera(\r\n      self.fov,\r\n      self.width / self.height,\r\n      self.near,\r\n      self.far\r\n    );\r\n    self.ccamera.position.z = 200;\r\n    var controls = new OrbitControls(self.ccamera, self.element, appState);\r\n    \r\n    //add orbitcontrols to appstate\r\n    appState.controls = controls\r\n\r\n    controls.spacePan = true; // Space bar panning\r\n    controls.bothPan = true; // Space bar and right click panning\r\n    controls.minDistance = 10;\r\n    controls.maxDistance = self.renderWidth * 2;\r\n    controls.target.set(0, 0, 0);\r\n    controls.enableRotate = false;\r\n    self.controls = controls;\r\n  };\r\n\r\n  /**\r\n   *  Create minimap\r\n   */\r\n  self.setupMinimap = function() {\r\n    self.minimap = {};\r\n    self.minimap.camera = new THREE.PerspectiveCamera(\r\n      self.fov,\r\n      1,\r\n      self.near,\r\n      self.far\r\n    );\r\n    self.minimap.camera.position.z = self.renderWidth * 2;\r\n\r\n    (self.oldCoords = {\r\n      x: null,\r\n      y: null,\r\n      z: null\r\n    }),\r\n      /**\r\n       * Pan the ccamera according to mouse position on screen (should be called only when mouse is on minimap)\r\n       * @param coordX mouse position on screen returned by relMouseCoords\r\n       * @param coordY mouse position on screen returned by relMouseCoords\r\n       */\r\n      (self.minimap.panToMousePosition = function(coordX, coordY) {\r\n        // ensures that the camera position is updated from the last pan.\r\n        if (\r\n          self.ccamera.position.x == self.oldCoords.x &&\r\n          self.ccamera.position.y == self.oldCoords.y &&\r\n          self.ccamera.position.z == self.oldCoords.z\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        self.oldCoords.x = self.ccamera.position.x;\r\n        self.oldCoords.y = self.ccamera.position.y;\r\n        self.oldCoords.z = self.ccamera.position.z;\r\n\r\n        // 850 is an approximation\r\n        const coefficient = (self.height - 200) / self.ccamera.position.z;\r\n\r\n        self.controls.pan(\r\n          ((coordX / self.minimap.width) * 4000 -\r\n            2000 -\r\n            self.ccamera.position.x) *\r\n            -coefficient,\r\n          (((self.height - coordY) / self.minimap.height) * 4000 -\r\n            2000 -\r\n            self.ccamera.position.y) *\r\n            coefficient\r\n        );\r\n      });\r\n\r\n      appState.panToMousePosition = self.minimap.panToMousePosition;\r\n  };\r\n\r\n  /**\r\n   *  Create initial scene geometry and attributes\r\n   */\r\n  self.setupGeometry = function() {\r\n    self.scene = new THREE.Scene();\r\n\r\n    self.points = new THREE.BufferGeometry();\r\n    self.nodes = new THREE.Group();\r\n    self.scene.add(self.nodes);\r\n\r\n    if (def.LINES == \"fancy\") {\r\n      self.setupFancyEdges();\r\n    } else {\r\n      self.setUpSimpleEdges();\r\n    }\r\n\r\n    var rect = self.make1x1Rect();\r\n\r\n    self.setupSelectionBox(rect);\r\n    self.setupBoundaries(rect);\r\n    self.setupViewPort(rect);\r\n  };\r\n\r\n  /**\r\n   * Setup data structures for fancy edges\r\n   */\r\n  self.setupFancyEdges = function() {\r\n    self.edges = new THREE.BufferGeometry();\r\n    var positions = new THREE.BufferAttribute(\r\n      new Float32Array(self.MAX_LINES * 3),\r\n      3\r\n    );\r\n    var colors = new THREE.BufferAttribute(\r\n      new Float32Array(self.MAX_LINES * 3),\r\n      3\r\n    );\r\n\r\n    self.edges.addAttribute(\"position\", positions);\r\n    self.edges.addAttribute(\"color\", colors);\r\n    const geometry = new LineGeometry();\r\n    geometry.setPositions( self.edges.attributes.positions );\r\n    geometry.setColors( self.edges.attributes.colors );\r\n\r\n    matLine = new LineMaterial( {\r\n\r\n      color: 0xffffff,\r\n      linewidth: 5, // in world units with size attenuation, pixels otherwise\r\n      vertexColors: true,\r\n\r\n      //resolution:  // to be set by renderer, eventually\r\n      dashed: false,\r\n      alphaToCoverage: true,\r\n\r\n    } );\r\n\r\n    var line = new Line2( geometry, matLine );\r\n    line.computeLineDistances();\r\n    line.scale.set( 1, 1, 1 );\r\n    scene.add( line );\r\n  };\r\n\r\n  /**\r\n   * Sets up data structures for simple edges\r\n   */\r\n  self.setUpSimpleEdges = function() {\r\n    self.edges = new THREE.BufferGeometry();\r\n    var material = new THREE.LineBasicMaterial({\r\n      linewidth: 2,\r\n      color: 0xffffff,\r\n      vertexColors: THREE.VertexColors,\r\n      shading: THREE.FlatShading\r\n    });\r\n    self.line = new THREE.LineSegments(self.edges, material);\r\n    self.line.frustumCulled = false;\r\n    self.scene.add(self.line);\r\n\r\n    var positions = new THREE.BufferAttribute(\r\n      new Float32Array(self.MAX_LINES * 3),\r\n      3\r\n    );\r\n    var colors = new THREE.BufferAttribute(\r\n      new Float32Array(self.MAX_LINES * 3),\r\n      3\r\n    );\r\n\r\n    self.edges.addAttribute(\"position\", positions);\r\n    self.edges.addAttribute(\"color\", colors);\r\n\r\n    /**Adding triangles for directed edges update*/\r\n    self.directedArrows = new THREE.BufferGeometry();\r\n    var arrowMaterial = new THREE.MeshBasicMaterial({\r\n      color: 0xffffff,\r\n    });\r\n    self.arrow = new THREE.Mesh(self.directedArrows, arrowMaterial);\r\n    self.arrow.frustumCulled = false;\r\n    self.scene.add(self.arrow)\r\n    var arrowPositions = new THREE.BufferAttribute(\r\n      new Float32Array(self.MAX_LINES * 3),\r\n      3\r\n    );\r\n    var arrowColors = new THREE.BufferAttribute(\r\n      new Float32Array(self.MAX_LINES * 3),\r\n      3\r\n    );\r\n\r\n    self.directedArrows.addAttribute(\"position\", arrowPositions);\r\n    self.directedArrows.addAttribute(\"color\", arrowColors);\r\n    \r\n    self.drawCount = 0;\r\n  };\r\n\r\n  /**\r\n   * Adds box to screen that is displayed when selecting groups of nodes\r\n   */\r\n  self.setupSelectionBox = function(rect) {\r\n    self.selectBox = new THREE.Line(\r\n      rect,\r\n      new THREE.LineBasicMaterial({ linewidth: 3, color: 0x3399aa })\r\n    );\r\n    self.selectBox.visible = false;\r\n    self.scene.add(self.selectBox);\r\n  };\r\n\r\n  /**\r\n   * Sets boundaries for max edges of graph\r\n   */\r\n  self.setupBoundaries = function(rect) {\r\n    self.boundaries = new THREE.Line(\r\n      rect,\r\n      new THREE.LineBasicMaterial({ linewidth: 3, color: 0x999999 })\r\n    ); \r\n    self.scene.add(self.boundaries);\r\n    self.setBoundarySize(self.renderWidth * 2);\r\n  };\r\n\r\n  /**\r\n   * Sets viewport to match size of display\r\n   */\r\n  self.setupViewPort = function(rect) {\r\n    self.viewPort = new THREE.Line(\r\n      rect,\r\n      new THREE.LineBasicMaterial({ linewidth: 3, color: self.darkMode? 0xffffff : 0x000000})\r\n    );\r\n    self.scene.add(self.viewPort);\r\n    self.setViewPortSize(self.ccamera);\r\n  };\r\n\r\n  /**\r\n   *  Creates listeners and events for selecting nodes\r\n   */\r\n  self.setupSelect = function() {\r\n    self.points.addAttribute(\r\n      \"position\",\r\n      new THREE.BufferAttribute(new Float32Array(20 * 3), 3)\r\n    );\r\n    self.points.computeBoundingSphere();\r\n    self.nodeCount = 0;\r\n    var mouseHandler = function(callback) {\r\n      return function(event) {\r\n        event.preventDefault();\r\n        let pageX, pageY;\r\n        if (event.touches && event.touches.length > 0) {\r\n          // for touch events\r\n          pageX = event.touches.item(0).pageX;\r\n          pageY = event.touches.item(0).pageY;\r\n        } else {\r\n          pageX = event.pageX;\r\n          pageY = event.pageY;\r\n        }\r\n        \r\n        var coords = self.relMouseCoords(pageX, pageY, this);\r\n        var mouseX = (coords.x / self.width) * 2 - 1;\r\n        var mouseY = 1 - (coords.y / self.height) * 2;\r\n        var mousePosition = new THREE.Vector3(mouseX, mouseY, 1);\r\n        mousePosition.unproject(self.ccamera);\r\n        var dir = mousePosition.sub(self.ccamera.position).clone();\r\n        mousePosition.normalize();\r\n        // Determine whether mouse is on minimap\r\n\r\n        self.isMouseCoordinatesOnMinimap =\r\n          coords.x <= self.minimap.width &&\r\n          self.height - coords.y <= (self.minimap.height + self.minimapRenderer.domElement.style.offsetBottom) &&\r\n          self.height - coords.y >= self.minimapRenderer.domElement.style.offsetBottom;\r\n        if (self.isMouseCoordinatesOnMinimap) {\r\n          self.minimap.mouseX = coords.x;\r\n          self.minimap.mouseY = coords.y + self.minimapRenderer.domElement.style.offsetBottom;\r\n        }\r\n\r\n        // Determine intersects\r\n        var raycaster = new THREE.Raycaster(\r\n          self.ccamera.position,\r\n          mousePosition\r\n        );\r\n\r\n        // Find real location of mouse\r\n        var distance = -self.ccamera.position.z / dir.z;\r\n        var pos = self.ccamera.position\r\n          .clone()\r\n          .add(dir.multiplyScalar(distance));\r\n\r\n        if (callback == self.onRightClick && event.which != 3) {\r\n          return;\r\n        }\r\n\r\n        if (\r\n          callback == self.onRightClick &&\r\n          event.target.getAttribute(\"contenteditable\")\r\n        ) {\r\n          event.target.focus();\r\n        } else {\r\n          event.preventDefault();\r\n          if (callback == self.onRightClick) {\r\n            self.onRightClickCoords(event);\r\n          }\r\n          self.callMouseHandler(event, raycaster, pos, callback);\r\n        }\r\n      };\r\n    };\r\n\r\n    //Add listeners to web page\r\n    self.setupMouseHandlers(mouseHandler);\r\n  };\r\n\r\n  /**\r\n   * Checks if a node has been clicked, and calls the appropriate mouse handler function\r\n   */\r\n  self.callMouseHandler = function(event, raycaster, pos, callback) {\r\n    var intersects = raycaster.intersectObjects(self.nodes.children);\r\n    if (intersects.length) {\r\n      // If a node has been clicked\r\n      var nodeIndex = intersects[0].object.index;\r\n      self.oldIntersect = nodeIndex;\r\n      callback(\r\n        self.graph.getNode(nodeIndex),\r\n        pos.x,\r\n        pos.y,\r\n        event.button,\r\n        event.ctrlKey\r\n      );\r\n    } else {\r\n      callback(null, pos.x, pos.y, event.button, event.ctrlKey);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Add Mouse Event Listeners to page\r\n   */\r\n  self.setupMouseHandlers = function(mouseHandler) {\r\n    self.element.addEventListener(\r\n      \"mousemove\",\r\n      mouseHandler(self.onMouseMove),\r\n      false\r\n    );\r\n    self.element.addEventListener(\r\n      \"mousedown\",\r\n      mouseHandler(self.onMouseDown),\r\n      false\r\n    );\r\n    self.element.addEventListener(\r\n      \"mouseup\",\r\n      mouseHandler(self.onMouseUp),\r\n      false\r\n    );\r\n    self.element.addEventListener(\r\n      \"mouseup\",\r\n      mouseHandler(self.onRightClick),\r\n      false\r\n    );\r\n    self.element.addEventListener(\r\n      \"touchstart\",\r\n      mouseHandler(self.onMouseDown),\r\n      false\r\n    );\r\n    self.element.addEventListener(\r\n      \"touchmove\",\r\n      mouseHandler(self.onMouseMove),\r\n      false\r\n    );\r\n    self.element.addEventListener(\r\n      \"touchend\",\r\n      mouseHandler(self.onMouseUp),\r\n      false\r\n    );\r\n    self.element.addEventListener(\r\n      \"touchcancel\",\r\n      mouseHandler(self.onMouseUp),\r\n      false\r\n    );\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\nvar $ = require(\"jquery\");\r\n\r\nmodule.exports = function(self) {\r\n  self.addNode = function(node) {\r\n    self.graph.addNode(node.id, node.data);\r\n    var graphNode = self.graph.getNode(node.id);\r\n    graphNode.x = node.x;\r\n    graphNode.y = node.y;\r\n    graphNode.fx = node.fx;\r\n    graphNode.fy = node.fy;\r\n    graphNode.pinnedx = node.fx != undefined;\r\n    graphNode.pinnedy = node.fy != undefined;\r\n    self.prepNode(graphNode);\r\n    self.drawNode(graphNode);\r\n    graphNode.links = [];\r\n    self.layoutInit = true;\r\n    return graphNode;\r\n  };\r\n\r\n  self.removeNode = function(node) {\r\n    if (!node || !node.id) {\r\n      return;\r\n    }\r\n    self.removeGraphEdges(node);\r\n    self.undrawEdges(node);\r\n    self.nodes.remove(node.renderData.draw_object);\r\n    self.graph.removeNode(node.id);\r\n    self.undrawNode(node);\r\n    self.nodeCount -= 1;\r\n  };\r\n\r\n  self.removeGraphEdges = function(node) {\r\n    var nodeLinks = self.graph.getLinks(node.id);\r\n    if (nodeLinks) {\r\n      nodeLinks.forEach(function(edge) {\r\n        self.graph.removeLink(edge);\r\n      });\r\n    }\r\n  };\r\n\r\n  self.undrawNode = function(node) {\r\n    var nodes = self.force.nodes();\r\n    if (nodes) {\r\n      for (var i = 0; i < nodes.length; i++) {\r\n        if (nodes[i].id == node.id) {\r\n          self.scene.remove(nodes[i].renderData.draw_object);\r\n          nodes[i].renderData.textHolder.children[0].element.hidden = true;\r\n          nodes.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  self.undrawEdges = function(node) {\r\n    var positions = self.edges.attributes.position.array;\r\n    var colors = self.edges.attributes.color.array;\r\n    var killed = 0;\r\n    for (var i = 0; i - killed < self.lineIndices.length; i++) {\r\n      if (\r\n        self.lineIndices[i - killed].source.id == node.id ||\r\n        self.lineIndices[i - killed].target.id == node.id\r\n      ) {\r\n        for (var j = i - killed; j < self.lineIndices.length; j++) {\r\n          var k = j + 1;\r\n          if (k == self.lineIndices.length) {\r\n            positions[j * 6] = 0;\r\n            positions[j * 6 + 1] = 0;\r\n            positions[j * 6 + 3] = 0;\r\n            positions[j * 6 + 4] = 0;\r\n            colors[j * 6] = 255;\r\n            colors[j * 6 + 1] = 160;\r\n            colors[j * 6 + 2] = 80;\r\n            colors[j * 6 + 3] = 255;\r\n            colors[j * 6 + 4] = 160;\r\n            colors[j * 6 + 5] = 80;\r\n          } else {\r\n            self.lineIndices[j] = self.lineIndices[k];\r\n            self.lineObjects[j * 2] = self.lineObjects[k * 2];\r\n            self.lineObjects[j * 2 + 1] = self.lineObjects[k * 2 + 1];\r\n            positions[j * 6] = positions[k * 6];\r\n            positions[j * 6 + 1] = positions[k * 6 + 1];\r\n            positions[j * 6 + 3] = positions[k * 6 + 3];\r\n            positions[j * 6 + 4] = positions[k * 6 + 4];\r\n            colors[j * 6] = colors[k * 6];\r\n            colors[j * 6 + 1] = colors[k * 6 + 1];\r\n            colors[j * 6 + 2] = colors[k * 6 + 2];\r\n            colors[j * 6 + 3] = colors[k * 6 + 3];\r\n            colors[j * 6 + 4] = colors[k * 6 + 4];\r\n            colors[j * 6 + 5] = colors[k * 6 + 5];\r\n          }\r\n        }\r\n        self.lineIndices.pop();\r\n        self.lineObjects.pop();\r\n        self.lineObjects.pop();\r\n        self.drawCount -= 2;\r\n        killed += 1;\r\n      }\r\n    }\r\n    // console.log(\"Deleted \" + killed.toString() + \" edges\");\r\n  };\r\n\r\n  self.getNode = function(node_id) {\r\n    return self.graph.getNode(node_id);\r\n  };\r\n\r\n  self.addEdge = function(source, target, visible = true) {\r\n    var withinState = (source.data.ref.GEOID === target.data.ref.GEOID)\r\n    var withinFamily = (source.data.ref.Family === target.data.ref.Family)\r\n    var locdata = {\r\n      fromlocLatY: source.data.ref.LatY,\r\n      fromlocLonX : source.data.ref.LonX,\r\n      tolocLatY : target.data.ref.LatY,\r\n      tolocLonX: target.data.ref.LonX,\r\n      withinState: withinState,\r\n      withinFamily: withinFamily\r\n    }\r\n    self.graph.addLink(source.id, target.id,locdata);\r\n    self.drawEdge(self.getNode(source.id), self.getNode(target.id), visible);\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function (self) {\r\n  /**\r\n   *  Change color of node edges\r\n   */\r\n  self.highlightNode = function (node, toggle, color = def.NODE_HIGHLIGHT) {\r\n    // if (toggle) {\r\n    //   node.renderData.draw_object.children[0].material.color.setHex(color);\r\n    //   node.renderData.draw_object.children[0].visible = false;\r\n    // } else {\r\n    //   node.renderData.draw_object.children[0].material.color.set(\r\n    //     node.renderData.hcolor\r\n    //   );\r\n    //   node.renderData.draw_object.children[0].visible = false;\r\n    // }\r\n  };\r\n\r\n  /**\r\n   *  Highlight edges from and to a node and hide others\r\n   */\r\n  self.highlightEdges = function (node, toggle) {\r\n    const froms = [];\r\n    const tos = [];\r\n    for (var i = 0; i < self.selection.length; i++) {\r\n      for (var j = 0; j < self.selection[i].links.length; j++) {\r\n        froms.push(self.selection[i].links[j].fromId);\r\n        tos.push(self.selection[i].links[j].toId);\r\n      }\r\n    }\r\n    if (toggle) {\r\n      for (var i = 0; i < node.links.length; i++) {\r\n        froms.push(node.links[i].fromId);\r\n        tos.push(node.links[i].toId);\r\n      }\r\n      self.highlightNeighbors(node, froms, tos);\r\n    } else {\r\n      self.highlightNeighbors(node, froms, tos);\r\n    }\r\n  };\r\n\r\n /**\r\n   *  Highlight edges and nodes on the path \r\n   */\r\n  self.highlightPathEdgeNode = function (pathnode) {\r\n\r\n    //highlight nodes\r\n\r\n    //first dehighlight all nodes \r\n    self.graph.forEachNode(function (n) {\r\n\r\n      self.colorNodeOpacity(n, 0.2);\r\n    })\r\n\r\n    pathnode.forEach((node)=>{\r\n     self.colorNodeOpacity(node, 1);\r\n    })\r\n    self.highlightNode(pathnode[0], true)\r\n    self.highlightNode(pathnode[pathnode.length - 1], true)\r\n    // pathnode[0].renderData.draw_object.children[0].material.color.setHex(def.NODE_HIGHLIGHT);\r\n    // pathnode[pathnode.length - 1].renderData.draw_object.children[0].material.color.setHex(def.NODE_HIGHLIGHT);\r\n    \r\n\r\n    //highlight edges\r\n    let red = new THREE.Color(appState.graph.edges.color).r;\r\n    let blue = new THREE.Color(appState.graph.edges.color).g;\r\n    let green = new THREE.Color(appState.graph.edges.color).b;\r\n    \r\n    //first dehighlight all edges\r\n    self.lineIndices.forEach(function (link) {\r\n      link.linecolor.r = self.darkMode ? 0.25 : 0.89; //black/white\r\n      link.linecolor.g = self.darkMode ? 0.25 : 0.89;\r\n      link.linecolor.b = self.darkMode ? 0.25 : 0.89;\r\n    })\r\n    //undirected \r\n    //then highlight only the node's edges\r\n    for (let i = 0; i < pathnode.length-1; i++) {\r\n      self.lineIndices.forEach(function (link) {\r\n        if ((link.source.id == pathnode[i].id && link.target.id == pathnode[i+1].id) || (link.source.id == pathnode[i+1].id && link.target.id == pathnode[i].id))  {\r\n          link.linecolor.r = red;\r\n          link.linecolor.g = blue;\r\n          link.linecolor.b = green;\r\n        }\r\n      })\r\n    } \r\n  }\r\n\r\n\r\n  /**\r\n   * Highlight adjacent nodes\r\n   * \r\n   * Also highlights edges.\r\n   */\r\n  self.highlightNeighbors = function (node, froms, tos) {\r\n    self.graph.forEachNode(n => {\r\n      if (self.selection.indexOf(n) != -1 || n == node) {\r\n        // If the node is selected or the node is the node to be highlighted\r\n        self.colorNodeOpacity(n, 1);\r\n        self.colorNodeEdge(n);  //set the node.renderData.linecolor , i.e. color edges by nodes  \r\n        // for (var i = 0; n.linkObjs && i < n.linkObjs.length; i++) {\r\n        //   n.linkObjs[i].linecolor = n.renderData.linecolor;\r\n        // }\r\n      } else if (\r\n        self.doHighlightNeighbors &&\r\n        (froms.indexOf(n.id) != -1 || tos.indexOf(n.id) != -1)\r\n      ) {\r\n        // If the node is not selected or highlighted and\r\n        // if the node is present in either froms or tos arrays\r\n        self.colorNodeOpacity(n, 1);\r\n        // self.colorNodeEdge(n, false);\r\n      } else if (\r\n        !self.prevHighlights ||\r\n        self.prevHighlights.indexOf(n.id) == -1\r\n      ) {\r\n        self.colorNodeOpacity(n, 0.2);\r\n        // self.colorNodeEdge(n, false);\r\n        self.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   *  Change color of node edges\r\n   */\r\n  //  self.colorNodeEdge = function(node, isHighlighted) {\r\n  //   let red = new THREE.Color(appState.graph.edges.color).r;\r\n  //   let blue = new THREE.Color(appState.graph.edges.color).g;\r\n  //   let green = new THREE.Color(appState.graph.edges.color).b;\r\n  //   if(isHighlighted) {\r\n  //     node.renderData.linecolor.r = red;\r\n  //     node.renderData.linecolor.g = blue;\r\n  //     node.renderData.linecolor.b = green;\r\n  //     self.arrow.material.color.setRGB(red, blue, green);\r\n  //   } else {\r\n  //     node.renderData.linecolor.r =  self.darkMode ? 0.25 : .75;\r\n  //     node.renderData.linecolor.g = self.darkMode ? 0.25 : .75;\r\n  //     node.renderData.linecolor.b = self.darkMode ? 0.25 : .75;\r\n  //   }\r\n\r\n  // };\r\n\r\n\r\n  self.colorNodeEdge = function (node) {\r\n    let red = new THREE.Color(appState.graph.edges.color).r;\r\n    let blue = new THREE.Color(appState.graph.edges.color).g;\r\n    let green = new THREE.Color(appState.graph.edges.color).b;\r\n    if (!node) {  //highlight all the edges \r\n\r\n\r\n      self.lineIndices.forEach(function (link) {\r\n\r\n        link.linecolor.r = red;\r\n        link.linecolor.g = blue;\r\n        link.linecolor.b = green;\r\n      })\r\n\r\n    } else {                     //only highlight the node's edges\r\n      //first dehighlight all edges\r\n      self.lineIndices.forEach(function (link) {\r\n        link.linecolor.r = self.darkMode ? 0.25 : 0.89; //black/white\r\n        link.linecolor.g = self.darkMode ? 0.25 : 0.89;\r\n        link.linecolor.b = self.darkMode ? 0.25 : 0.89;\r\n      })\r\n      //then highlight only the node's edges\r\n      self.lineIndices.forEach(function (link) {\r\n        if (link.source.id == node.id || link.target.id == node.id) {\r\n          link.linecolor.r = red;\r\n          link.linecolor.g = blue;\r\n          link.linecolor.b = green;\r\n        }\r\n      })\r\n\r\n\r\n    }\r\n\r\n    // if (isHighlighted) {\r\n    //   self.lineIndices.forEach(function (link) {\r\n    //     if (link.source.id == node.id || link.target.id == node.id) {\r\n    //       link.linecolor.r = red;\r\n    //       link.linecolor.g = blue;\r\n    //       link.linecolor.b = green;\r\n    //     } else {\r\n    //       link.linecolor.r = self.darkMode ? 0.25 : 0.89;\r\n    //       link.linecolor.g = self.darkMode ? 0.25 : 0.89;\r\n    //       link.linecolor.b = self.darkMode ? 0.25 : 0.89;\r\n    //     }\r\n\r\n    //   })\r\n\r\n    //   // node.renderData.linecolor.r = red;\r\n    //   // node.renderData.linecolor.g = blue;\r\n    //   // node.renderData.linecolor.b = green;\r\n    //   self.arrow.material.color.setRGB(red, blue, green);\r\n\r\n    // } else {\r\n    //   self.lineIndices.forEach(function (link) {\r\n    //     link.linecolor.r = self.darkMode ? 0.25 : 0.89;\r\n    //     link.linecolor.g = self.darkMode ? 0.25 : 0.89;\r\n    //     link.linecolor.b = self.darkMode ? 0.25 : 0.89;\r\n    //   })\r\n\r\n      // node.renderData.linecolor.r =  self.darkMode ? 0.25 : 0.89;\r\n      // node.renderData.linecolor.g = self.darkMode ? 0.25 : 0.89;\r\n      // node.renderData.linecolor.b = self.darkMode ? 0.25 : 0.89;\r\n    }\r\n\r\n  // };\r\n\r\n\r\n\r\n  /**\r\n   *  Change node opacity\r\n   */\r\n  self.colorNodeOpacity = function (node, op) {\r\n    node.renderData.draw_object.material.opacity = op;\r\n  };\r\n  self.colorNode = function (node, op) {\r\n    node.renderData.draw_object.material.color.setHex(op);\r\n  }\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\nvar $ = require(\"jquery\");\r\nconst { default: appState } = require(\"../../stores\");\r\n\r\nmodule.exports = function (self) {\r\n  \r\n\r\n\r\n  /**\r\n   * Mouse move event that selections nodes in selection box\r\n   */\r\n  self.onMouseMove = function (selection, mouseX, mouseY, button, ctrl) {  \r\n    // check if left button is not down\r\n    self.mouseX = mouseX;\r\n    self.mouseY = mouseY;\r\n    if (self.leftMouseDown && self.mouseDown) {\r\n      appState.graph.mapClicked = null\r\n      // appState.graph.networkClicked = null\r\n      \r\n      // left-clicked empty space (i.e., not clicking a node)\r\n      if (!self.dragging && self.selection.indexOf(selection) == -1 && !ctrl) {\r\n        self.clearSelection();\r\n        appState.graph.mapClicked = null\r\n      }\r\n      \r\n\r\n\r\n      if (!self.dragging) {\r\n        // add nodes enclosed by selection box into node selection\r\n        self.checkSelection(mouseX, mouseY);\r\n      }\r\n    }\r\n\r\n    \r\n\r\n\r\n    if (self.selection.length > 0) {\r\n      // reactivate (in D3's terminology: reheat) the force layout\r\n      if (self.dragging) {\r\n        self.force.alpha(1);\r\n      }\r\n      // update position of nodes in selection\r\n      self.updateSelection(mouseX, mouseY);\r\n    }\r\n\r\n    if (!self.mouseDown) {\r\n      self.onHover(selection);\r\n      self.mouseStart = new THREE.Vector3(mouseX, mouseY, 0);\r\n    } else {\r\n      // if mouse is in minimap, do nothing else\r\n      if (self.isMouseCoordinatesOnMinimap && self.mapShowing) {\r\n        self.minimap.panToMousePosition(\r\n          self.minimap.mouseX,\r\n          self.minimap.mouseY\r\n        );\r\n        return;\r\n      }\r\n\r\n\r\n\r\n      // update selection box size/position\r\n      if (self.leftMouseDown && !self.dragging) {\r\n        if (self.showBox) {\r\n          self.selectBox.visible = true;\r\n          self.showBox = false;\r\n        }\r\n        self.selectBox.position.x = mouseX;\r\n        self.selectBox.position.y = mouseY;\r\n        var diffx = self.mouseStart.x - mouseX;\r\n        var diffy = self.mouseStart.y - mouseY;\r\n        self.selectBox.scale.set(diffx, diffy, 1);\r\n      } else {\r\n        self.selectBox.visible = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Mouse hover over node event that highlights the node and neighbors at mouse position\r\n   */\r\n  self.onHover = function (node) {\r\n    if(appState.graph.mapClicked) return;\r\n    if(self.selection.length>0) return;\r\n    if (self.lastHover && self.selection.indexOf(self.lastHover) == -1) {\r\n      self.highlightNode(self.lastHover, false);\r\n      self.lastHover.renderData.textHolder.children[0].element.hideme = true;\r\n      self.highlightEdges(node, false);\r\n    }\r\n    self.lastHover = node;\r\n    if (node) {\r\n      // self.highlightNode(node, true);\r\n      // node.renderData.textHolder.children[0].element.hideme = false;\r\n      // self.highlightEdges(node, true);\r\n      self.highlightClickNode(node)\r\n      //set currently hovered node\r\n      appState.graph.currentlyHovered = node;\r\n    } else if (self.selection.length == 0) {\r\n      self.graph.forEachNode(n => {\r\n        self.colorNodeOpacity(n, 1);\r\n        \r\n        self.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\r\n      });\r\n      self.colorNodeEdge(null);\r\n      appState.graph.currentlyHovered = null;\r\n    }\r\n    if (self.prevHighlights != undefined) {\r\n      for (var i = 0; i < self.prevHighlights.length; i++) {\r\n        self.colorNodeOpacity(self.prevHighlights[i], 1);\r\n        self.highlightNode(self.prevHighlights[i], true, def.SEARCH_HIGHLIGHT);\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n\r\n\r\n\r\n  // vars to get time at mouse press and time at mouse release\r\n  var startTime = 0;\r\n  var endTime = 0;\r\n  /**\r\n   * Mouse down event to start a selection box or start dragging a node\r\n   */\r\n  self.onMouseDown = function (selection, mouseX, mouseY, button, ctrl) {\r\n    // console.log(\"triggered\")\r\n    // if mouse is in minimap, do nothing else\r\n    if (self.isMouseCoordinatesOnMinimap && self.mapShowing) {\r\n      self.mouseDown = true;\r\n      self.minimap.panToMousePosition(self.minimap.mouseX, self.minimap.mouseY);\r\n      return;\r\n    }\r\n\r\n    \r\n\r\n    self.leftMouseDown = true;\r\n    if (self.leftMouseDown) {\r\n      self.mouseDown = true;\r\n      self.mouseStart = new THREE.Vector3(mouseX, mouseY, 0);\r\n      if (button == 0 && !self.dragging) {\r\n        self.showBox = true;\r\n      }\r\n\r\n      \r\n      \r\n      if (self.selection.indexOf(selection) == -1 && !ctrl) {\r\n        for (var i = 0; i < self.selection.length; i++) {\r\n          self.selection[i].renderData.isSelected = false;\r\n          if (!def.NODE_NO_HIGHLIGHT) {\r\n            self.selection[\r\n              i\r\n            ].renderData.draw_object.children[0].visible = false;\r\n            // self.selection[\r\n            //   i\r\n            // ].renderData.draw_object.material.opacity = 0.2;\r\n          } else {\r\n            self.selection[i].renderData.draw_object.material.color.set(\r\n              new THREE.Color(self.selection[i].renderData.color)\r\n            );\r\n          }\r\n          self.selection[\r\n            i\r\n          ].renderData.textHolder.children[0].element.hideme = true;\r\n          // self.selection[\r\n          //   i\r\n          // ].renderData.draw_object.material.opacity = 0.2;\r\n        }\r\n        self.selection = [];\r\n      }\r\n\r\n\r\n      if(selection) {\r\n        //when any node is clicked, un-smartpause if smartpaused\r\n        //appState.graph.smartPause.lastUnpaused = Date.now(); //old code using lastUnpaused\r\n        appState.graph.smartPause.interactingWithGraph = true;\r\n        \r\n        \r\n        \r\n      }\r\n\r\n\r\n\r\n      \r\n\r\n\r\n      //captures click times to measure time distance between clicks\r\n      oldStartTime = startTime;\r\n      startTime = Date.now();\r\n\r\n      //keeps track of time difference\r\n      clickDifference = startTime - oldStartTime;\r\n\r\n      //sets whether or not last click was \r\n      //double click or not\r\n      // console.log(clickDifference)\r\n      if (clickDifference < 500) {\r\n        self.doubleClicked = true;\r\n        \r\n      } else {\r\n        self.doubleClicked = false;\r\n      }\r\n\r\n      \r\n\r\n      //selects single node when dragged\r\n      if (selection) {\r\n        self.dragging = selection;\r\n        if (self.selection.indexOf(selection) == -1) {\r\n          self.selection.push(selection);\r\n          selection.renderData.isSelected = false;\r\n        }\r\n      }\r\n\r\n    //   if(self.selection.length == 1){\r\n          \r\n    //     appState.graph.mapClicked = self.selection[0]\r\n      \r\n    // }\r\n\r\n      if (selection) {\r\n        self.dragging = selection;\r\n        //only pins node if double-clicked\r\n        if (self.doubleClicked) {\r\n          //passing in 'selection' node to pass information for node to pin\r\n          // self.updateSelection(self.dragging.x, self.dragging.y, selection);\r\n\r\n        } else if (ctrl) {\r\n          self.selection.splice(self.selection.indexOf(selection), 1);\r\n          selection.renderData.isSelected = false;\r\n          if (!def.NODE_NO_HIGHLIGHT) {\r\n            selection.renderData.draw_object.children[0].visible = false;\r\n            // selection.renderData.draw_object.material.opacity = 0.2;\r\n          } else {\r\n            selection.renderData.draw_object.material.color.set(\r\n              new THREE.Color(self.selection[i].renderData.color)\r\n            );\r\n          }\r\n          selection.renderData.textHolder.children[0].element.hideme = true;\r\n          // selection.renderData.draw_object.material.opacity = 0.2;\r\n          self.dragging = null;\r\n        }\r\n      } else {\r\n        if (self.newNodeIds) {\r\n          self.highlightNodeIds([], true);\r\n          self.newNodeIds = undefined;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Mouse up event that closes selection flags and emits selection to Argo\r\n   */\r\n  self.onMouseUp = function (selection, mouseX, mouseY, button) {\r\n    endTime = Date.now();\r\n    self.mouseDown = false;\r\n\r\n    //when not clicking, nodes aren't being interacted with\r\n    appState.graph.smartPause.interactingWithGraph = false;\r\n\r\n    \r\n    self.updateSelectionOpacity();\r\n\r\n    if(self.selection.length == 1){\r\n      const thenode = self.selection[0]\r\n      self.highlightClickNode(thenode)\r\n      appState.graph.mapClicked = thenode\r\n      // self.selection = self.getNeighborNodesFromGraph(thenode);\r\n      appState.graph.selectedNodes = self.getNeighborNodesFromGraph(thenode);\r\n        \r\n      \r\n      // appState.graph.networkClicked = thenode\r\n    }\r\n\r\n    if(self.selection.length == 0){\r\n      appState.graph.mapClicked = null\r\n    }\r\n    \r\n  \r\n    // Left or right mouse button\r\n    if (true) {\r\n      self.showBox = false;\r\n      self.dragging = null;\r\n      self.selectBox.visible = false;\r\n\r\n      self.ee.emit(\"select-nodes\", self.selection);\r\n      \r\n    }\r\n\r\n  };\r\n\r\n\r\n\r\n  /**\r\n   * Right click event to save right clicked node\r\n   */\r\n  self.onRightClick = function (selection) {\r\n    if (selection) {\r\n      self.rightClickedNode = selection;\r\n    } else {\r\n      self.rightClickedNode = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Right click event that emits context menu event to Argo\r\n   */\r\n  self.onRightClickCoords = function (event) {\r\n    // Don't show menu if dragging camera\r\n    if (endTime - startTime < 200) {\r\n      self.ee.emit(\"right-click\", {\r\n        pageX: event.pageX,\r\n        pageY: event.pageY\r\n      });\r\n    }\r\n  };\r\n};","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   * Set all nodes to a size\r\n   */\r\n  self.setUniformNodeSize = function(s) {\r\n    self.graph.forEachNode(function(node) {\r\n      node.renderData.draw_object.scale.set(s, s, 1);\r\n      var hsize = 1 + def.HIGHLIGHT_SIZE / s;\r\n      node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Set all nodes to a size based on a value in the node's data\r\n   */\r\n  self.setNodeDataSize = function(dataValue) {\r\n    self.graph.forEachNode(function(node) {\r\n      dataVal = node.renderData[dataValue];\r\n      if (!dataVal) {\r\n        console.log(\"Data value does not exist\");\r\n      } else {\r\n        dataVal = Math.log(dataVal + 1);\r\n        node.renderData.draw_object.scale.set(dataVal, dataVal, 1);\r\n        var hsize = 1 + def.HIGHLIGHT_SIZE / dataVal;\r\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Set all nodes to a color\r\n   */\r\n  self.setUniformNodeColor = function(hsvDegree) {\r\n    self.graph.forEachNode(function(node) {\r\n      node.renderData.draw_object.material.color.set(\r\n        new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 43%)\")\r\n      );\r\n      if (!def.NODE_NO_HIGHLIGHT) {\r\n        node.renderData.draw_object.children[0].material.color.set(\r\n          new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 63%)\")\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Set all nodes to a color based on a value in the node's data\r\n   */\r\n  self.setNodeDataColor = function(dataValue) {\r\n    var i = 0;\r\n    values = [];\r\n    min = null;\r\n    max = null;\r\n\r\n    self.graph.forEachNode(function(node) {\r\n      if ((dataVal = node.renderData[dataValue])) {\r\n        if (min == null) min = dataVal;\r\n        if (max == null) max = dataVal;\r\n        if (dataVal < min) min = dataVal;\r\n        else if (dataVal > max) max = dataVal;\r\n        values[i] = dataVal;\r\n        i += 1;\r\n      } else {\r\n        values[i] = -1;\r\n      }\r\n    });\r\n\r\n    i = 0;\r\n    self.graph.forEachNode(function(node) {\r\n      var hsvDegree;\r\n      if (values[i] == -1) {\r\n        hsvDegree = 0;\r\n      } else {\r\n        values[i] = (values[i] - min) / (max - min);\r\n        hsvDegree = values[i] * 120;\r\n      }\r\n      node.renderData.draw_object.material.color.set(\r\n        new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 48%)\")\r\n      );\r\n      if (!def.NODE_NO_HIGHLIGHT) {\r\n        node.renderData.draw_object.children[0].material.color.set(\r\n          new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 63%)\")\r\n        );\r\n      }\r\n      i++;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Map a node attribute based on some mapping function\r\n   */\r\n  self.mapNodeAttributes = function(mapping, nodes = null) {\r\n    let val;\r\n    if (mapping[0] == \"degree\") {\r\n      val = node => (node.links ? node.links.length + 2 : 2);\r\n    } else if (mapping[0] == \"scalex\") {\r\n      val = node => node.renderData.draw_object.scale.x;\r\n    } else {\r\n      val = node => mapping[0];\r\n    }\r\n\r\n    let mod;\r\n    if (mapping[1] == \"volume\") {\r\n      mod = val => self.volToRadius(val);\r\n    } else if (mapping[1] == \"mult\") {\r\n      mod = val => val * mapping[3](val);\r\n    } else if (mapping[1] == \"add\") {\r\n      mod = val => val + mapping[3](val);\r\n    } else if (mapping[1] == \"log\") {\r\n      mod = val => Math.log(val);\r\n    } else {\r\n      mod = val => val;\r\n    }\r\n\r\n    let attr;\r\n    if (mapping[2] == \"scalexy\") {\r\n      attr = (node, val) => {\r\n        node.renderData.draw_object.scale.set(val, val, 1);\r\n        var hsize = 1 + def.HIGHLIGHT_SIZE / val;\r\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\r\n      };\r\n    } else if (mapping[2] == \"edgeColorRed\") {\r\n      attr = (node, val) => {\r\n        node.renderData.linecolor.r = 1;\r\n        node.renderData.linecolor.b = 1 - val / 5;\r\n        node.renderData.linecolor.g = 1 - val / 5;\r\n      };\r\n    } else if (mapping[2] == \"edgeColorBlue\") {\r\n      attr = (node, val) => {\r\n        node.renderData.linecolor.b = 1;\r\n        node.renderData.linecolor.r = 1 - val / 5;\r\n        node.renderData.linecolor.g = 1 - val / 5;\r\n      };\r\n    } else if (mapping[2] == \"edgeColorGreen\") {\r\n      attr = (node, val) => {\r\n        node.renderData.linecolor.g = 1;\r\n        node.renderData.linecolor.b = 1 - val / 5;\r\n        node.renderData.linecolor.r = 1 - val / 5;\r\n      };\r\n    } else if (mapping[2] == \"nodeColorBlue\") {\r\n      attr = (node, val) => {\r\n        node.renderData.draw_object.material.color.b = 1;\r\n        node.renderData.draw_object.material.color.r = 1 - val / 5;\r\n        node.renderData.draw_object.material.color.g = 1 - val / 5;\r\n      };\r\n    } else if (mapping[2] == \"pinned\") {\r\n      attr = (node, val) => {\r\n        node.pinnedx = val;\r\n        node.pinnedy = val;\r\n      };\r\n    } else if (mapping[2] == \"labelSize\") {\r\n      attr = (node, val) => {\r\n        self.changeLabelFontSize(node, val);\r\n      };\r\n    } else if (mapping[2] == \"labelLength\") {\r\n      attr = (node, val) => {\r\n        self.changeLabelLength(node, val);\r\n      };\r\n    }\r\n\r\n    self.changeNodes(val, mod, attr, nodes);\r\n  };\r\n\r\n  /**\r\n   *  get attribute from node using function val\r\n   *  modify result with function mode\r\n   *  set node attribute with attr\r\n   */\r\n  self.changeNode = function(val, mod, attr, node) {\r\n    var v = val(node);\r\n    if (v != undefined) {\r\n      var r = mod(v);\r\n      if (r != undefined) {\r\n        attr(node, r);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  perform changeNode on many nodes\r\n   */\r\n  self.changeNodes = function(val, mod, attr, nodes = null) {\r\n    if (nodes == null) {\r\n      self.graph.forEachNode(function(node) {\r\n        self.changeNode(val, mod, attr, node);\r\n      });\r\n    } else {\r\n      for (var i = 0; i < nodes.length; i++) {\r\n        self.changeNode(val, mod, attr, nodes[i]);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Limit label size by (estimated) characters\r\n   * This is only accurate if the label is monospaced\r\n   */\r\n  self.changeLabelLength = function(node, numChars) {\r\n    node.renderData.textHolder.children[0].element.children[0].style.width =\r\n      numChars.toString() + \"ch\";\r\n  };\r\n\r\n  /**\r\n   * Limit label size by (estimated) characters\r\n   * This is only accurate if the label is monospaced\r\n   */\r\n  self.changeLabelFontSize = function(node, size, relativeSize = 1) {\r\n    size = size * relativeSize *13;\r\n    node.renderData.textHolder.children[0].element.children[0].style.fontSize =\r\n      size.toString() + \"px\";\r\n  };\r\n\r\n  /**\r\n   * Change boundary size\r\n   */\r\n  self.setBoundarySize = function(size) {\r\n    self.renderWidth = size;\r\n    self.renderHeight = size;\r\n    self.boundaries.scale.set(size * 2, size * 2, 1);\r\n    self.boundaries.position.x = -size;\r\n    self.boundaries.position.y = -size;\r\n    self.controls.maxDistance = size * 2;\r\n    self.minimap.camera.position.z = self.renderWidth * 2;\r\n  };\r\n\r\n  /**\r\n   * Change viewport size\r\n   */\r\n  self.setViewPortSize = function(camera) {\r\n    var distance = self.ccamera.position.z;\r\n    var height =\r\n      Math.tan(((camera.fov * Math.PI) / 180) * 0.5) * distance * 2 + 5;\r\n    var width = height * camera.aspect + 5;\r\n    self.viewPort.scale.set(width, height, 1);\r\n    self.viewPort.position.x = camera.position.x - width / 2;\r\n    self.viewPort.position.y = camera.position.y - height / 2;\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\nconst { default: appState } = require(\"../../stores\");\r\n\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   *  Create highlight mesh\r\n   */\r\n  self.createHighlightMesh = function(node, texture) {\r\n    var shape =\r\n      node.renderData.hshape || node.renderData.shape || def.NODE_HSHAPE;\r\n    if (shape == \"square\") {\r\n      var hgeometry = self.make2x2Rect();\r\n    } else {\r\n      var hgeometry = new THREE.CircleGeometry(1, 32);\r\n    }\r\n\r\n    return self.createHighlightDrawObject(hgeometry, node, texture);\r\n  };\r\n\r\n  /**\r\n   * Sets the material, color, visibility, and size of the highlight drawing for a node.\r\n   */\r\n  self.createHighlightDrawObject = function(hgeometry, node, texture) {\r\n    var size = self.getNodeSize(node);\r\n    var hsize = def.HIGHLIGHT_SIZE;\r\n\r\n    texture = def.NODE_NO_HTEX ? null : texture;\r\n    var color = def.NODE_NO_HCOLOR\r\n      ? null\r\n      : parseInt(node.renderData.hcolor || def.NODE_HIGHLIGHT);\r\n    var hmaterial = new THREE.MeshBasicMaterial({ color: color, map: texture });\r\n    hmaterial.transparent = true;\r\n    var highlight = new THREE.Mesh(hgeometry, hmaterial);\r\n    highlight.visible = true;\r\n    highlight.scale.set(1 + hsize / size, 1 + hsize / size, 1);\r\n    highlight.position.z = -0.01;\r\n    return highlight;\r\n  };\r\n\r\n  /**\r\n   *  Create node mesh\r\n   */\r\n  self.createNodeMesh = function(node, texture) {\r\n    var shape = node.renderData.shape || def.NODE_SHAPE;\r\n    if (shape == \"square\") {\r\n      var geometry = self.make2x2Rect();\r\n    } else {\r\n      var geometry = new THREE.CircleGeometry(1, 32);\r\n    }\r\n    return self.createNodeDrawObject(geometry, node, texture);\r\n  };\r\n\r\n  /**\r\n   * Create mesh to visual show pinning\r\n   */\r\n  self.createPinMesh = function(size) {\r\n    var geometry = self.make2x2Rect();\r\n    var color = new THREE.Color(def.PIN_COLOR);\r\n    var material = new THREE.MeshBasicMaterial({ color: color });\r\n    var pinMesh = new THREE.Mesh(geometry, material);\r\n    pinMesh.scale.set(0.1, 0.1, 1);\r\n    pinMesh.position.z = 0.01;\r\n    pinMesh.visible = false;\r\n    return pinMesh;\r\n  };\r\n\r\n  /**\r\n   * Create the drawing information for a node\r\n   */\r\n  self.createNodeDrawObject = function(geometry, node, texture) {\r\n    var size = self.getNodeSize(node);\r\n\r\n    texture = def.NODE_NO_TEX ? null : texture;\r\n    var color = def.NODE_NO_COLOR\r\n      ? null\r\n      : new THREE.Color(node.renderData.color || def.NODE_COLOR);\r\n    var material = new THREE.MeshBasicMaterial({ color: color, map: texture });\r\n    material.transparent = true;\r\n    var draw_object = new THREE.Mesh(geometry, material);\r\n    draw_object.scale.set(size, size, 1);\r\n    return draw_object;\r\n  };\r\n\r\n  /**\r\n   * Get the size of a node if it exists, otherwise get it from the render data.\r\n   */\r\n  self.getNodeSize = function(node) {\r\n    var size;\r\n    if (node.renderData.size != undefined) size = node.renderData.size;\r\n    else size = node.renderData[\"size\"];\r\n    return size;\r\n  };\r\n\r\n  self.createNodeLabel = function(node) {\r\n    var material = new THREE.MeshBasicMaterial({\r\n      color: 0x000000,\r\n      wireframe: true,\r\n      wireframeLinewidth: 1,\r\n      side: THREE.DoubleSide\r\n    });\r\n    var geometry = new THREE.PlaneGeometry(1000, 200);\r\n    var textMesh = self.createAndSetupLabelTextMesh(geometry, material);\r\n    var label = self.createAndSetupLabelDiv(node, textMesh);\r\n    var textHolder = self.createAndSetupTextHolder(label, textMesh);\r\n    node.renderData.textHolder = textHolder;\r\n    self.scene.add(textHolder);\r\n  };\r\n\r\n  self.createAndSetupLabelTextMesh = function(geometry, material) {\r\n    var textMesh = new THREE.Mesh(geometry, material);\r\n    textMesh.scale.set(def.TEXT_SIZE, def.TEXT_SIZE, 1);\r\n    var bbox = new THREE.Box3().setFromObject(textMesh);\r\n    textMesh.position.x += (bbox.max.x - bbox.min.x) * def.TEXT_X_OFFSET;\r\n    textMesh.position.y -= (bbox.max.y - bbox.min.y) * def.TEXT_Y_OFFSET;\r\n    textMesh.visible = def.TEXT_WIREFRAME;\r\n    return textMesh;\r\n  };\r\n\r\n  self.createAndSetupLabelDiv = function(node, textMesh) {\r\n    var label = self.createLabelDiv(node);\r\n    label.element.hidden = true;\r\n    label.position.copy(textMesh.position);\r\n    label.scale.copy(textMesh.scale);\r\n    return label;\r\n  };\r\n\r\n  self.createAndSetupTextHolder = function(label, textMesh) {\r\n    var textHolder = new THREE.Object3D();\r\n    textHolder.add(label);\r\n    textHolder.add(textMesh);\r\n    return textHolder;\r\n  };\r\n\r\n  /**\r\n   *  Create label div\r\n   */\r\n  self.createLabelDiv = function(node) {\r\n    // Create canvas to draw text label onto sprite image\r\n    var element = self.createLabelDivElement();\r\n    var content = document.createTextNode(node.renderData.label);\r\n    var textElement = self.createLabelTextElement();\r\n    textElement.appendChild(content);\r\n    element.appendChild(textElement);\r\n    var labelObj = new THREE.CSS3DObject(element);\r\n    return labelObj;\r\n  };\r\n\r\n  /**\r\n   * Creates the Label Div Element for a node's label\r\n   */\r\n  self.createLabelDivElement = function() {\r\n    var element = document.createElement(\"div\");\r\n    element.style.width = \"1000px\";\r\n    element.style.height = \"200px\";\r\n    element.style.backgroundColor = def.TEXT_BACK_COLOR;\r\n    element.style.opacity = def.TEXT_OPACITY;\r\n    return element;\r\n  };\r\n\r\n  /**\r\n   * Creates the text element to add to the label div for a node.\r\n   */\r\n  self.createLabelTextElement = function() {\r\n    var textElement = document.createElement(\"div\");\r\n    textElement.style.width = \"1000px\";\r\n    textElement.style.height = \"2ch\";\r\n    textElement.style.fontSize = \"96px\";\r\n    textElement.style.textOverflow = \"ellipsis\";\r\n    textElement.style.overflow = \"hidden\";\r\n    textElement.style.userSelect = \"all\";\r\n    textElement.style.whiteSpace = \"nowrap\";\r\n    //textElement.setAttribute('contenteditable', 'true');\r\n    return textElement;\r\n  };\r\n\r\n  /**\r\n   * Instantiates, sets highlight for, and sets position for the actual THREE\r\n   * drawing of a node\r\n   */\r\n  self.setupNodeDrawObject = function(node, htexture, texture) {\r\n    var draw_object = self.createNodeMesh(node, texture);\r\n\r\n    // Create highlight\r\n    if (!def.NODE_NO_HIGHLIGHT) {\r\n      var highlight = self.createHighlightMesh(node, htexture);\r\n      draw_object.add(highlight);\r\n    }\r\n\r\n    var pinMesh = self.createPinMesh();\r\n    draw_object.add(pinMesh);\r\n\r\n    draw_object.position.x = node.renderData.x;\r\n    draw_object.position.y = node.renderData.y;\r\n    draw_object.index = node.id;\r\n    draw_object.name = node.id;\r\n    node.renderData.draw_object = draw_object;\r\n\r\n    return draw_object;\r\n  };\r\n\r\n  /**\r\n   *  Create a node object and add it to the scene.\r\n   */\r\n  self.drawNode = function(node) {\r\n    function onHTextureLoad(node, htexture) {\r\n      // Load node texture\r\n      self.textureLoader.load(\r\n        node.renderData.image || def.NODE_TEXTURE,\r\n        onTextureLoad.bind(null, node, htexture)\r\n      );\r\n    }\r\n\r\n    function onTextureLoad(node, htexture, texture) {\r\n      // Create mesh for node\r\n      var draw_object = self.setupNodeDrawObject(node, htexture, texture);\r\n\r\n      // Create div for label\r\n      self.createNodeLabel(node);\r\n\r\n      self.nodeCount += 1;\r\n      self.nodes.add(draw_object);\r\n    }\r\n\r\n    if (def.NODE_NO_HTEX && def.NODE_NO_TEX) {\r\n      onTextureLoad(node, null, null);\r\n    } else {\r\n      // Load highlight texture\r\n      self.textureLoader.load(\r\n        node.renderData.himage || def.NODE_HTEXTURE,\r\n        onHTextureLoad.bind(null, node)\r\n      );\r\n    }\r\n  };\r\n\r\n  let hexToRGB = (hex) => {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? \r\n    new THREE.Color(appState.graph.edges.color)\r\n    : null;\r\n}\r\n\r\nself.getDistanceFromLatLonInKm = (lat1, lon1, lat2, lon2) => {\r\n  var p = 0.017453292519943295;    // Math.PI / 180\r\n  var c = Math.cos;\r\n  var a = 0.5 - c((lat2 - lat1) * p)/2 + \r\n          c(lat1 * p) * c(lat2 * p) * \r\n          (1 - c((lon2 - lon1) * p))/2;\r\n\r\n  return 12742 * Math.asin(Math.sqrt(a)); // 2 * R; R = 6371 km\r\n}\r\n\r\n  /**\r\n   *  Create an edge and add it to the lineSegments.\r\n   */\r\n  self.drawEdge = function(source, target, visible = true) {\r\n    if (\r\n      source.renderData.draw_object === undefined ||\r\n      target.renderData.draw_object === undefined\r\n    ) {\r\n      setTimeout(self.drawEdge.bind(null, source, target), 50);\r\n      return;\r\n    }\r\n    var index = self.drawCount * 3;\r\n    self.lineObjects[index / 3] = source;\r\n    self.lineObjects[index / 3 + 1] = target;\r\n    if (!source.linkObjs) {\r\n      source.linkObjs = [];\r\n    }\r\n    if (!target.linkObjs) {\r\n      target.linkObjs = [];\r\n    }\r\n    var edgeDist\r\n    if(source.data.ref.LonX){\r\n      const lon1 = source.data.ref.LonX\r\n      const lat1 = source.data.ref.LatY\r\n      const lon2 = target.data.ref.LonX\r\n      const lat2 = target.data.ref.LatY\r\n      edgeDist = self.getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2)\r\n    }\r\n    \r\n\r\n    self.lineIndices.push({\r\n      source: source,\r\n      target: target,\r\n      hide: !visible,\r\n      linecolor: hexToRGB(appState.graph.edges.color),\r\n      edgeDist:edgeDist\r\n      // hexToRGB(appState.graph.edges.color),\r\n      // source.renderData.linecolor, \r\n    });\r\n\r\n    source.linkObjs.push(self.lineIndices[index / 6]);\r\n    target.linkObjs.push(self.lineIndices[index / 6]);\r\n    self.updateColorsAndPositions(source, target, index);\r\n    self.drawCount += 2;\r\n  };\r\n\r\n  /**\r\n   * Update the colors and positions of the edges between source and target\r\n   */\r\n  self.updateColorsAndPositions = function(source, target, index) {\r\n    var positions = self.edges.attributes.position.array;\r\n    var colors = self.edges.attributes.color.array;\r\n\r\n    var v1pos = source.renderData.draw_object.position;\r\n    var v2pos = target.renderData.draw_object.position;\r\n    var v1color = self.lineIndices[index / 6].linecolor;\r\n    var v2color = self.lineIndices[index / 6].linecolor;\r\n    colors[index] = v1color.b;\r\n    positions[index++] = v1pos.x;\r\n    colors[index] = v1color.g;\r\n    positions[index++] = v1pos.y;\r\n    colors[index] = v1color.r;\r\n    positions[index++] = v1pos.z - 0.02;\r\n    colors[index] = v2color.b;\r\n    positions[index++] = v2pos.x;\r\n    colors[index] = v2color.g;\r\n    positions[index++] = v2pos.y;\r\n    colors[index] = v2color.r;\r\n    positions[index++] = v2pos.z - 0.02;\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\n/**\r\n * These functions are endpoints revealed to Argo frontend\r\n */\r\nmodule.exports = function(self) {\r\n  /**\r\n   * Set frame.mouseMode to the specified mode\r\n   * @param {string} mode name of the mode, currently supports ['select', 'move']\r\n   */\r\n  self.setMouseMode = mode => {\r\n    if (mode === \"select\") {\r\n      // This is the default mode, where users can select one or multiple nodes\r\n      self.mouseMode = \"select\";\r\n      self.isMouseModeMove = false;\r\n    } else if (mode === \"move\") {\r\n      // move mode, where user can drag the screen to achieve panning\r\n      self.mouseMode = \"move\";\r\n      self.isMouseModeMove = true;\r\n    }\r\n  };\r\n\r\n  self.pauseLayout = () => {\r\n    self.paused = true;\r\n  };\r\n  window.pause = self.pauseLayout;\r\n\r\n  self.resumeLayout = () => {\r\n    self.paused = false;\r\n  };\r\n\r\n  self.mapSelectedNodes = () => {\r\n    self.mapNodeAttributes([\"degree\", \"log\", \"scalexy\"], self.selection);\r\n  };\r\n\r\n  self.mapAllNodes = () => {\r\n    self.mapNodeAttributes([\"degree\", \"log\", \"scalexy\"]);\r\n  };\r\n\r\n  self.pinSelectedNodes = () => {\r\n    self.mapNodeAttributes([true, \"\", \"pinned\"], self.selection);\r\n  };\r\n\r\n  self.unpinSelectedNodes = () => {\r\n    self.mapNodeAttributes([false, \"\", \"pinned\"], self.selection);\r\n  };\r\n\r\n  self.setLabelFontSize = size => {\r\n    self.graph.forEachNode(function(node) {\r\n      self.changeLabelFontSize(node, size, self.relativeFontSize);\r\n    });\r\n\r\n    // change the map label size\r\n    size = (size * self.relativeFontSize *2 ) ;\r\n    document.querySelectorAll('.maptooltip').forEach(node=>{\r\n      node.style.fontSize = size.toString() + \"px\";\r\n    })\r\n    \r\n  };\r\n\r\n  self.setLabelRelativeSize = size => {\r\n    self.relativeFontSize = size;\r\n    self.setLabelFontSize(self.labelSize);\r\n  };\r\n\r\n  self.setLabelLength = numChars => {\r\n    self.graph.forEachNode(function(node) {\r\n      self.changeLabelLength(node, numChars);\r\n    });\r\n    document.querySelectorAll('.maptooltip').forEach(node=>{\r\n      node.style.width = numChars.toString() + \"ch\";\r\n    })\r\n    \r\n  };\r\n\r\n  self.toggleMiniMap = () => {\r\n    if (self.mapShowing) {\r\n      self.hideMiniMap();\r\n    } else {\r\n      self.showMiniMap();\r\n    }\r\n  };\r\n\r\n  self.showMiniMap = () => {\r\n    if (self.mapShowing) {\r\n      return;\r\n    }\r\n    self.mapShowing = true;\r\n    // self.element.appendChild(self.minimapRenderer.domElement);\r\n  };\r\n\r\n  self.hideMiniMap = () => {\r\n    if (!self.mapShowing) {\r\n      return;\r\n    }\r\n    self.mapShowing = false;\r\n    // self.element.removeChild(self.minimapRenderer.domElement);\r\n  };\r\n\r\n  // The CSS Renderer for rendering labels is the most expensive\r\n  // renderer. For 300+ nodes it's recommended to turn it off by\r\n  // default and only use it when no node is moving to prevent\r\n  // visible lagging (during layout, dragging etc.)\r\n  self.turnOffLabelCSSRenderer = () => {\r\n    if (self.cssRenderer.isPaused) {\r\n      return;\r\n    }\r\n    self.element.removeChild(self.cssRenderer.domElement);\r\n    self.cssRenderer.isPaused = true;\r\n  };\r\n\r\n  // See turnOffLabelCSSRenderer.\r\n  self.turnOnLabelCSSRenderer = () => {\r\n    if (!self.cssRenderer.isPaused) {\r\n      return;\r\n    }\r\n    self.element.appendChild(self.cssRenderer.domElement);\r\n    self.cssRenderer.isPaused = false;\r\n  };\r\n\r\n  // Emits id of every node with label being displayed at this moment.\r\n  // Used to keep mobx state in sync since GraphStore and snapshot\r\n  // needs to save what nodes have labels shown and what not.\r\n  // Also turns off label CSSRenderer when no node is showing label.\r\n  self.updateNodesShowingLabels = () => {\r\n    var nodes = [];\r\n    self.graph.forEachNode(n => {\r\n      var node = self.graph.getNode(n.id);\r\n      if (node.renderData.textHolder.children[0].element.override) {\r\n        nodes.push(n.id);\r\n      }\r\n    });\r\n\r\n    // Turns off label CSSRenderer when no node is showing label.\r\n    // This is because CSSRenderer is slow.\r\n    if (nodes.length == 0) {\r\n      self.turnOffLabelCSSRenderer();\r\n    } else if (!((self.selection.length > 0) && (self.dragging)) || (appState.graph.frame.paused)) { \r\n      //Only turns on when no node is moving\r\n      self.turnOnLabelCSSRenderer();\r\n    }\r\n\r\n    self.ee.emit(\"show-node-label\", nodes);\r\n  };\r\n\r\n  self.toggleSelectedLabels = () => {\r\n    self.toggleLabels(self.selection.map(n => n.id));\r\n  };\r\n\r\n  self.showSelectedLabels = () => {\r\n    document.getElementById(\"showSelected\").style.display=\"none\";\r\n    document.getElementById(\"hideSelected\").style.display=\"inline\";\r\n    self.showLabels(self.selection.map(n => n.id));\r\n  };\r\n\r\n  self.hideSelectedLabels = () => {\r\n    document.getElementById(\"hideSelected\").style.display=\"none\";\r\n    document.getElementById(\"showSelected\").style.display=\"inline\";\r\n    self.hideLabels(self.selection.map(n => n.id));\r\n  };\r\n\r\n  self.toggleLabels = nodeids => {\r\n    self.graph.forEachNode(n => {\r\n      if (nodeids.includes(n.id)) {\r\n        var node = self.graph.getNode(n.id);\r\n        if (\r\n          node.renderData.textHolder.children[0].element.override == undefined\r\n        ) {\r\n          node.renderData.textHolder.children[0].element.override = false;\r\n        }\r\n        node.renderData.textHolder.children[0].element.override = !node\r\n          .renderData.textHolder.children[0].element.override;\r\n      }\r\n    });\r\n    self.updateNodesShowingLabels();\r\n  };\r\n\r\n  self.showLabels = nodeids => {\r\n    self.graph.forEachNode(n => {\r\n      if (nodeids.includes(n.id)) {\r\n        var node = self.graph.getNode(n.id);\r\n        node.renderData.textHolder.children[0].element.override = true;\r\n      }\r\n    });\r\n    self.updateNodesShowingLabels();\r\n  };\r\n\r\n  self.hideLabels = nodeids => {\r\n    self.graph.forEachNode(n => {\r\n      if (nodeids.includes(n.id)) {\r\n        var node = self.graph.getNode(n.id);\r\n        node.renderData.textHolder.children[0].element.override = false;\r\n      }\r\n    });\r\n    self.updateNodesShowingLabels();\r\n  };\r\n\r\n  self.hideAllLabels = () => {\r\n    document.getElementById(\"hideAll\").style.display=\"none\";\r\n    document.getElementById(\"showAll\").style.display=\"inline\";\r\n    self.graph.forEachNode(function(node) {\r\n      var node = self.graph.getNode(node.id);\r\n      node.renderData.textHolder.children[0].element.override = false;\r\n    });\r\n    self.updateNodesShowingLabels();\r\n    //update map tooltip \r\n    document.querySelectorAll('.maptooltip').forEach(node=>{\r\n      node.style.opacity=0;\r\n    })\r\n  };\r\n\r\n  self.showAllLabels = () => {\r\n    document.getElementById(\"showAll\").style.display=\"none\";\r\n    document.getElementById(\"hideAll\").style.display=\"inline\";\r\n    self.graph.forEachNode(function(node) {\r\n      var node = self.graph.getNode(node.id);\r\n      node.renderData.textHolder.children[0].element.override = true;\r\n    });\r\n    self.updateNodesShowingLabels();\r\n    document.querySelectorAll('.maptooltip').forEach(node=>{\r\n      node.style.opacity=1;\r\n    })\r\n  };\r\n\r\n  self.setCanvasSize = function(size) {\r\n    self.setBoundarySize(size);\r\n  };\r\n\r\n  self.setAllNodesShape = function(shape) {\r\n    if (self.selection.length == 0) {\r\n      self.graph.forEachNode(function(node) {\r\n        self.setNodeShape(self.graph.getNode(node.id), shape);\r\n      });\r\n    } else {\r\n      self.selection.forEach(function(node) {\r\n        self.setNodeShape(self.graph.getNode(node.id), shape);\r\n      });\r\n    }\r\n  };\r\n\r\n  self.setAllNodesShapeWithOverride = function(shape, overrides) {\r\n    self.graph.forEachNode(function(node) {\r\n      if (overrides.has(node.id) && overrides.get(node.id).has('shape')) {\r\n        self.setNodeShape(self.graph.getNode(node.id), overrides.get(node.id).get('shape'));\r\n      } else {\r\n        self.setNodeShape(self.graph.getNode(node.id), shape);\r\n      }\r\n    });\r\n  }\r\n\r\n  self.setNodeShape = function(node, shape) {\r\n    if (shape == \"square\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = self.make2x2Rect();\r\n      node.renderData.draw_object.children[0].geometry = self.make2x2Rect();\r\n    } else if (shape == \"circle\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 32);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        32\r\n      );\r\n    } else if (shape == \"triangle\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 3);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        3\r\n      );\r\n    } else if (shape == \"pentagon\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 5);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        5\r\n      );\r\n    } else if (shape == \"hexagon\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 6);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        6\r\n      );\r\n    } else if (shape == \"octagon\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 8);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        8\r\n      );\r\n    }\r\n  };\r\n\r\n  self.getNumSelected = function() {\r\n    if (self.selection.length == self.graph.getNodesCount()) {\r\n      return 0;\r\n    }\r\n    return self.selection.length;\r\n  };\r\n\r\n  self.toggleDark = function() {\r\n    self.darkMode = !self.darkMode;\r\n    self.updateViewPortEdgeColor();\r\n  };\r\n\r\n  self.updateViewPortEdgeColor = function() {\r\n    self.viewPort.material.color = new THREE.Color( self.darkMode? 0xffffff : 0x000000 );       \r\n  }\r\n\r\n  self.getGraph = function() {\r\n    return self.graph;\r\n  };\r\n\r\n  self.getNodeList = function() {\r\n    var nodes = [];\r\n    self.graph.forEachNode(function(node) {\r\n      nodes.push(node);\r\n    });\r\n    return nodes;\r\n  };\r\n\r\n  self.getEdgeList = function(){\r\n    var edges = [];\r\n\r\n    self.graph.forEachLink(function(edge) {\r\n      edges.push(edge);\r\n    });\r\n    return edges;\r\n  }\r\n\r\n  self.getPositions = function() {\r\n    var poses = {};\r\n    self.graph.forEachNode(function(node) {\r\n      poses[node.id] = [node.x, node.y];\r\n    });\r\n    return poses;\r\n  };\r\n\r\n  self.getPinPositions = function() {\r\n    var poses = {};\r\n    self.graph.forEachNode(function(node) {\r\n      poses[node.id] = [node.fx, node.fy];\r\n    });\r\n    return poses;\r\n  };\r\n\r\n  // retrieves current graph's pinned nodes \r\n  self.getPinnedNodes = function() {\r\n    var poses = new Set();\r\n    self.graph.forEachNode(function(node) {\r\n      if(node.pinnedx && node.pinnedy) {\r\n        poses.add(node.id);\r\n      }\r\n    });\r\n    return poses;\r\n  }\r\n\r\n  //pins nodes that were pinned from a graph loaded in\r\n  self.setPinnedNodes = function(nodesToPin) {\r\n    self.mapNodeAttributes([true, \"\", \"pinned\"], nodesToPin);\r\n  }\r\n\r\n  var alias = false;\r\n  self.toggleAlias = () => {\r\n    // TODO: recreate renderer with new antialias\r\n    // self.init(alias);\r\n    // self.display();\r\n    alias = !alias;\r\n  };\r\n\r\n  self.setLastNode = id => {\r\n    self.lastNode = self.graph.getNode(id);\r\n  };\r\n\r\n  self.dragLastNode = () => {\r\n    self.selectNode(self.lastNode);\r\n  };\r\n\r\n  var x = 1.0;\r\n  self.lowerRes = () => {\r\n    x -= 0.1;\r\n    self.renderer.setPixelRatio(x);\r\n    self.onWindowResize();\r\n  };\r\n\r\n  self.toggleNeighborHighlight = function() {\r\n    self.doHighlightNeighbors = !self.doHighlightNeighbors;\r\n  };\r\n\r\n  self.highlightNodeIds = function(nodeids, toggle) {\r\n    if (nodeids.length > 0 && Array.isArray(nodeids[0])) {\r\n      nodeids = nodeids[0];\r\n    }\r\n    if (self.prevHighlights) {\r\n      for (var i = 0; i < self.prevHighlights.length; i++) {\r\n        self.highlightNode(\r\n          self.prevHighlights[i],\r\n          !toggle,\r\n          def.SEARCH_HIGHLIGHT\r\n        );\r\n      }\r\n    }\r\n    self.prevHighlights = [];\r\n    self.graph.forEachNode(function(node) {\r\n      if (nodeids.indexOf(node.id) != -1) {\r\n        self.highlightNode(node, toggle, def.SEARCH_HIGHLIGHT);\r\n        self.prevHighlights.push(node);\r\n      }\r\n    });\r\n  };\r\n\r\n  self.removeSelected = function() {\r\n    for (var i = 0; i < self.selection.length; i++) {\r\n      self.removeNode(self.selection[i]);\r\n    }\r\n    self.selection = [];\r\n  };\r\n\r\n  self.removeNodesByIds = function(nodeids) {\r\n    for (var i = 0; i < nodeids.length; i++) {\r\n      const node = self.graph.getNode(nodeids[i]);\r\n      if (node) {\r\n        self.removeNode(node);\r\n      }\r\n    }\r\n    self.selection = [];\r\n  };\r\n\r\n  self.getSelected = function() {\r\n    return self.selection;\r\n  };\r\n\r\n  self.getSelectedIds = function() {\r\n    return self.selection.map(n => n.id);\r\n  };\r\n};","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   *  Update the position and color of the edges\r\n   */\r\n  self.updateEdges = function() {\r\n    self.edges.setDrawRange(0, self.drawCount + 6);\r\n    var total = self.drawCount + 6;\r\n    var positions = self.edges.attributes.position.array;\r\n    var colors = self.edges.attributes.color.array;\r\n    // var width = self.edges.attributes.width.array;\r\n\r\n     //directed arrows\r\n     self.directedArrows.attributes.position.array = new Float32Array(self.MAX_LINES * 3);\r\n     var arrowPosition = self.directedArrows.attributes.position.array;\r\n     var arrowColor = self.directedArrows.attributes.color.array;\r\n\r\n    for (var i = 0; i < total; i += 2) {\r\n      if (self.lineIndices[i / 2]) {\r\n        if (self.lineIndices[i / 2].hide) {\r\n          var v1pos = self.lineObjects[i].renderData.draw_object.position;\r\n          var v2pos = self.lineObjects[i + 1].renderData.draw_object.position;\r\n          positions[i * 3] = v1pos.x;\r\n          positions[i * 3 + 1] = v1pos.y;\r\n          positions[i * 3 + 3] = v2pos.x;\r\n          positions[i * 3 + 4] = v2pos.y;\r\n          colors[i * 3] = 255;\r\n          colors[i * 3 + 1] = 255;\r\n          colors[i * 3 + 2] = 255;\r\n          colors[i * 3 + 3] = 255;\r\n          colors[i * 3 + 4] = 255;\r\n          colors[i * 3 + 5] = 255;\r\n        } else {\r\n          var v1pos = self.lineObjects[i].renderData.draw_object.position;\r\n          var v2pos = self.lineObjects[i + 1].renderData.draw_object.position;\r\n          var v1color = self.lineIndices[i / 2].linecolor;\r\n          var v2color = self.lineIndices[i / 2].linecolor;\r\n          positions[i * 3] = v1pos.x;\r\n          positions[i * 3 + 1] = v1pos.y;\r\n          positions[i * 3 + 3] = v2pos.x;\r\n          positions[i * 3 + 4] = v2pos.y;\r\n          colors[i * 3] = v1color.r;\r\n          colors[i * 3 + 1] = v1color.g;\r\n          colors[i * 3 + 2] = v1color.b;\r\n          colors[i * 3 + 3] = v2color.r;\r\n          colors[i * 3 + 4] = v2color.g;\r\n          colors[i * 3 + 5] = v2color.b;\r\n          // width[i * 3] = 5;\r\n          // width[i * 3 + 1] = 5;\r\n          // width[i * 3 + 2] = 5;\r\n          // width[i * 3 + 3] = 5;\r\n          // width[i * 3 + 4] = 5;\r\n          // width[i * 3 + 5] = 5;\r\n\r\n          //directed edges\r\n          if (appState.graph.directedOrNot) {\r\n            self.arrow.visible = true;\r\n            var midPointX = (v1pos.x + v2pos.x)/2;\r\n            var midPointY = (v1pos.y + v2pos.y)/2;\r\n\r\n            var dX = v2pos.x - v1pos.x;\r\n            var dY = v2pos.y - v1pos.y;\r\n\r\n            if (dX === 0) {\r\n              dX = 0.001;\r\n            }\r\n            var radianDegree = Math.atan(dY / dX);\r\n            // var tempXCorner = midPointX - Math.cos(radianDegree) * 0.866;\r\n            // var tempYCorner = midPointY - Math.sin(radianDegree) * 0.866;\r\n\r\n            // var degreeDifference = Math.PI/2 - radianDegree\r\n            arrowPosition[i / 2 * 9] = midPointX;\r\n            arrowPosition[i / 2 * 9 + 1] = midPointY;\r\n\r\n            if (dX >= 0) {\r\n              var tempXCorner = midPointX - Math.cos(radianDegree) * 0.866;\r\n              var tempYCorner = midPointY - Math.sin(radianDegree) * 0.866;\r\n              var degreeDifference = Math.PI/2 - radianDegree;\r\n              arrowPosition[i / 2 * 9 + 3] = tempXCorner - 0.5 * Math.cos(degreeDifference);\r\n              arrowPosition[i / 2 * 9 + 4] = tempYCorner + 0.5 * Math.sin(degreeDifference);\r\n              arrowPosition[i / 2 * 9 + 6] = tempXCorner + 0.5 * Math.cos(degreeDifference);\r\n              arrowPosition[i / 2 * 9 + 7] = tempYCorner - 0.5 * Math.sin(degreeDifference);\r\n\r\n            } else {\r\n              var tempXCorner = midPointX + Math.cos(radianDegree) * 0.866;\r\n              var tempYCorner = midPointY + Math.sin(radianDegree) * 0.866;\r\n              var degreeDifference = Math.PI/2 - radianDegree;\r\n              arrowPosition[i / 2 * 9 + 3] = tempXCorner + 0.5 * Math.cos(degreeDifference);\r\n              arrowPosition[i / 2 * 9 + 4] = tempYCorner - 0.5 * Math.sin(degreeDifference);\r\n              arrowPosition[i / 2 * 9 + 6] = tempXCorner - 0.5 * Math.cos(degreeDifference);\r\n              arrowPosition[i / 2 * 9 + 7] = tempYCorner + 0.5 * Math.sin(degreeDifference);\r\n            }\r\n          } else {\r\n            self.arrow.visible = false;\r\n          } \r\n        }\r\n      }\r\n    }\r\n    self.edges.attributes.position.needsUpdate = true;\r\n    self.edges.attributes.color.needsUpdate = true;\r\n\r\n    self.directedArrows.attributes.position.needsUpdate = true;\r\n    self.directedArrows.attributes.color.needsUpdate = true;\r\n  };\r\n\r\n  /**\r\n   *  Update the position of the labels\r\n   */\r\n  self.updateLabels = function() {\r\n    var nodes = self.force.nodes();\r\n    for (var i = 0; i < nodes.length; i++) {\r\n      let thisNode = self.graph.getNode(nodes[i].id);\r\n      if (thisNode.renderData.textHolder != undefined) {\r\n        if (\r\n          //thisNode.renderData.textHolder.children[0].element.hideme != false &&\r\n          !thisNode.renderData.textHolder.children[0].element.override\r\n        ) {\r\n          thisNode.renderData.textHolder.children[0].element.hidden = true;\r\n        } else {\r\n          thisNode.renderData.textHolder.children[0].element.hidden = false;\r\n        }\r\n      }\r\n      thisNode.renderData.textHolder.position.x =\r\n        thisNode.renderData.size + thisNode.renderData.draw_object.position.x;\r\n      thisNode.renderData.textHolder.position.y =\r\n        thisNode.renderData.draw_object.position.y;\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  Update the position and color of the edges\r\n   */\r\n  self.updateNodes = function() {\r\n    // console.log(\"triggered\");\r\n    if (self.options.layout == \"ngraph\") {\r\n      self.graph.forEachNode(function(node) {\r\n        if (node.renderData) {\r\n          node.renderData.draw_object.position.x = self.force.getNodePosition(\r\n            node.id\r\n          ).x;\r\n          node.renderData.draw_object.position.y = self.force.getNodePosition(\r\n            node.id\r\n          ).y;\r\n        }\r\n      });\r\n      if (!self.paused) {\r\n        self.force.step();\r\n      }\r\n    } else if (self.options.layout == \"d3\") {\r\n      var nodes = self.force.nodes();\r\n      for (var i = 0; i < nodes.length; i++) {\r\n        nodes[i].x = Math.max(\r\n          -self.renderWidth,\r\n          Math.min(self.renderWidth, nodes[i].x)\r\n        );\r\n        nodes[i].y = Math.max(\r\n          -self.renderHeight,\r\n          Math.min(self.renderHeight, nodes[i].y)\r\n        );\r\n        let thisNode = self.graph.getNode(nodes[i].id);\r\n        if (thisNode && thisNode.renderData.draw_object) {\r\n          if (!thisNode.pinnedx) {\r\n            thisNode.fx = null;\r\n            thisNode.renderData.draw_object.children[1].visible = false;\r\n          } else {\r\n            thisNode.fx = thisNode.x;\r\n            thisNode.renderData.draw_object.children[1].visible = true;\r\n          }\r\n          if (!thisNode.pinnedy) {\r\n            thisNode.fy = null;\r\n          } else {\r\n            thisNode.fy = thisNode.y;\r\n          }\r\n          thisNode.renderData.draw_object.position.x = nodes[i].x;\r\n          thisNode.renderData.draw_object.position.y = nodes[i].y;\r\n        }\r\n      }\r\n\r\n      if (!self.paused) {\r\n        self.force.tick();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Restrict camera translation\r\n   */\r\n  self.updateCamera = function() {\r\n    self.controls.target.x -=\r\n      self.controls.object.position.x -\r\n      Math.max(\r\n        -self.renderWidth,\r\n        Math.min(self.renderWidth, self.controls.object.position.x)\r\n      );\r\n    self.controls.object.position.x -=\r\n      self.controls.object.position.x -\r\n      Math.max(\r\n        -self.renderWidth,\r\n        Math.min(self.renderWidth, self.controls.object.position.x)\r\n      );\r\n    self.controls.target.y -=\r\n      self.controls.object.position.y -\r\n      Math.max(\r\n        -self.renderHeight,\r\n        Math.min(self.renderHeight, self.controls.object.position.y)\r\n      );\r\n    self.controls.object.position.y -=\r\n      self.controls.object.position.y -\r\n      Math.max(\r\n        -self.renderHeight,\r\n        Math.min(self.renderHeight, self.controls.object.position.y)\r\n      );\r\n    self.setViewPortSize(self.ccamera);\r\n  };\r\n\r\n  /**\r\n   * Given an ngraph, update the current ngraph and add or remove inconsistent nodes\r\n   */\r\n  self.updateGraph = function(graph) {\r\n    var numNodesAdded = 0;\r\n    graph.forEachNode(function(node) {\r\n      var oldNode = self.graph.getNode(node.id);\r\n      if (!oldNode) {\r\n        if (!self.newNodeIds) {\r\n          self.newNodeIds = [];\r\n        }\r\n        self.newNodeIds.push(node.id);\r\n        self.addNode(node);\r\n        numNodesAdded += 1;\r\n        self.lastNode = self.graph.getNode(node.id);\r\n      } else {\r\n        self.updateNode(oldNode, node);\r\n      }\r\n    });\r\n    graph.forEachLink(function(link) {\r\n      if (!self.graph.getLink(link.fromId, link.toId)) {\r\n        self.addEdge(\r\n          self.graph.getNode(link.fromId),\r\n          self.graph.getNode(link.toId)\r\n        );\r\n      }\r\n    });\r\n\r\n    self.graph.forEachNode(function(node) {\r\n      var oldNode = graph.getNode(node.id);\r\n      if (!oldNode) {\r\n        self.removeNode(node);\r\n      }\r\n    });\r\n\r\n    self.force.alpha(1);\r\n    self.force.stop();\r\n\r\n    if (numNodesAdded > 10) {\r\n      // This seems unnecessary for now\r\n      // self.tickToStatic = true;\r\n      self.tickToStatic = false;\r\n    } else {\r\n      self.tickToStatic = false;\r\n    }\r\n\r\n    if (self.newNodeIds) {\r\n      // Highlight every new node.\r\n      self.highlightNodeIds(self.newNodeIds, true);\r\n\r\n      // Select every new node if there aren't too many of them.\r\n      if (self.newNodeIds.length < 10) {\r\n        for (let i = 0; i < self.newNodeIds.length; i++) {\r\n          self.selection.push(self.graph.getNode(self.newNodeIds[i]));\r\n        }\r\n        self.ee.emit(\"select-nodes\", self.selection);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * update positions in the ngraph given a list of positions\r\n   */\r\n  self.updatePositions = function(positions) {\r\n    self.graph.forEachNode(function(node) {\r\n      var pos = positions[node.id];\r\n      if (pos) {\r\n        node.x = pos[0];\r\n        node.y = pos[1];\r\n        if (node.pinnedx) {\r\n          node.fx = pos[0];\r\n        }\r\n        if (node.pinnedy) {\r\n          node.fy = pos[1];\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Update a node given a new node\r\n   */\r\n  self.updateNode = function(node, newNode) {\r\n    if (newNode.data) {\r\n      if (node.data.color && newNode.data.color) {\r\n        node.data.color = newNode.data.color;\r\n        node.renderData.color = node.data.color;\r\n        node.renderData.draw_object.material.color.set(\r\n          new THREE.Color(node.data.color)\r\n        );\r\n      }\r\n      if (newNode.data.size && newNode.data.size > 0) {\r\n        node.data.size = newNode.data.size;\r\n        node.renderData.size = newNode.data.size;\r\n        node.renderData.draw_object.scale.set(\r\n          newNode.data.size,\r\n          newNode.data.size,\r\n          1\r\n        );\r\n        var hsize = 1 + def.HIGHLIGHT_SIZE / newNode.data.size;\r\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\r\n      }\r\n      if (newNode.data.label) {\r\n        node.data.label = newNode.data.label;\r\n        node.renderData.label = node.data.label;\r\n        node.renderData.textHolder.children[0].element.childNodes[0].innerText =\r\n          node.data.label;\r\n      }\r\n      if (newNode.data.shape) {\r\n        node.data.shape = newNode.data.shape;\r\n        node.renderData.shape = node.data.shape;\r\n        self.setNodeShape(node, node.data.shape);\r\n      }\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Button, Classes, Dialog, Intent, Switch } from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\nimport { requestChangeWorkspace } from \"../ipc/client\";\r\n\r\n@observer\r\nclass PreferencesDialog extends React.Component {\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        iconName=\"cog\"\r\n        className={classnames({\r\n          [Classes.DARK]: appState.preferences.darkMode\r\n        })}\r\n        isOpen={appState.preferences.dialogOpen}\r\n        onClose={() => {\r\n          appState.preferences.dialogOpen = false;\r\n        }}\r\n        title=\"Preferences\"\r\n      >\r\n        <div className=\"pt-dialog-body\">\r\n          <Switch\r\n            label=\"Dark Mode\"\r\n            checked={appState.preferences.darkMode}\r\n            onChange={() => {\r\n              appState.preferences.darkMode = !appState.preferences.darkMode;\r\n              appState.preferences.saveUserConfig();\r\n              if (appState.graph.frame) {\r\n                appState.graph.frame.toggleDark();\r\n              }\r\n            }}\r\n          />\r\n          \r\n          <Switch\r\n           label=\"Minimap\"\r\n           checked={appState.preferences.minimapShowing}\r\n           onChange={() => {\r\n            appState.preferences.minimapShowing = !appState.preferences.minimapShowing;\r\n            appState.preferences.saveUserConfig();\r\n            if (appState.graph.frame) {\r\n              if (appState.preferences.minimapShowing) {\r\n                appState.graph.frame.showMiniMap();\r\n              } else {\r\n                appState.graph.frame.hideMiniMap();\r\n              }\r\n            } else {\r\n              console.log(\"Frame not ready when trying to toggle minimap.\");\r\n            }\r\n           }}\r\n          />\r\n        </div>\r\n        <div className=\"pt-dialog-footer\">\r\n          <div className=\"pt-dialog-footer-actions\">\r\n            <Button\r\n              intent={Intent.PRIMARY}\r\n              onClick={() => {\r\n                appState.preferences.dialogOpen = false;\r\n              }}\r\n              text=\"Done\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PreferencesDialog;","import React from \"react\";\r\nimport { Button, Classes, Collapse } from \"@blueprintjs/core\";\r\nimport classnames from \"classnames\";\r\n\r\nexport default ({ name, isOpen, onToggle, children }) => (\r\n  <div>\r\n    <Button\r\n      className={classnames(Classes.LARGE, Classes.FILL, Classes.MINIMAL, \"text-align-left\")}\r\n      rightIconName={isOpen ? \"chevron-up\" : \"chevron-down\"}\r\n      onClick={onToggle}\r\n    >\r\n      {name}\r\n    </Button>\r\n    <Collapse isOpen={isOpen}>{children}</Collapse>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Classes, MenuItem } from \"@blueprintjs/core\";\r\n\r\nexport default ({ handleClick, item, isActive }) => (\r\n  <MenuItem\r\n  iconName={item.charAt(0).toUpperCase() + item.slice(1).toLowerCase() == \"Distance to center\" \r\n            ||item.charAt(0).toUpperCase() + item.slice(1).toLowerCase() == \"Shortest path\" \r\n            ||item.charAt(0).toUpperCase() + item.slice(1).toLowerCase() == \"Pair distance\"\r\n            ? \"globe\" : \"graph\"}\r\n    className={isActive ? Classes.ACTIVE : \"\"}\r\n    key={item}\r\n    onClick={handleClick}\r\n    text={item.charAt(0).toUpperCase() + item.slice(1).toLowerCase()}\r\n  />\r\n);\r\n","import React from \"react\";\r\nimport { Button, Classes } from \"@blueprintjs/core\";\r\nimport { Select } from \"@blueprintjs/labs\";\r\nimport CommonItemRenderer from \"./CommonItemRenderer\";\r\nimport { Icon } from \"@blueprintjs/core\";\r\nexport default ({ items, onSelect, value, fill = false }) => (\r\n  <Select\r\n    items={items}\r\n    itemRenderer={CommonItemRenderer}\r\n    filterable={false}\r\n    onItemSelect={onSelect}\r\n  >\r\n        {/* <button style={{height: \"100%\" ,marginLeft: \"2px\"}} type=\"button\">\r\n          {value.charAt(0).toUpperCase() + value.slice(1).toLowerCase()}\r\n        </button> */}\r\n        <Button className={fill ? Classes.FILL : null} text={value} />\r\n\r\n  </Select>\r\n);\r\n","/* eslint-disable jsx-a11y/label-has-for */\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Dialog,\r\n  Intent,\r\n  Spinner,\r\n  Switch,\r\n  FileInput\r\n} from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\nimport SimpleSelect from \"./utils/SimpleSelect\";\r\n\r\n@observer\r\nclass PostImportOptions extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n            After import, show:\r\n            <SimpleSelect\r\n                items={Object.keys(appState.import.postImportFilteringOptions)}\r\n                value={appState.import.selectedPostImportFilteringOption}\r\n                onSelect={(selected) => {\r\n                    appState.import.selectedPostImportFilteringOption = selected;\r\n                }}\r\n            />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostImportOptions;","/* eslint-disable jsx-a11y/label-has-for */\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Dialog,\r\n  Intent,\r\n  Spinner,\r\n  Switch\r\n} from \"@blueprintjs/core\";\r\nimport { Cell, Column, Table } from \"@blueprintjs/table\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\nimport {\r\n  requestChooseEdgeFile,\r\n  requestChooseNodeFile,\r\n  requestImportGraphFromCSV,\r\n  requestCreateNewProject\r\n} from \"../ipc/client\";\r\nimport Collapsable from \"./utils/Collapsable\";\r\nimport SimpleSelect from \"./utils/SimpleSelect\";\r\nimport { NODE_AND_EDGE_FILE, ONLY_EDGE_FILE } from \"../constants/index\";\r\nimport PostImportOptions from './PostImportOptions';\r\n\r\n@observer\r\nclass PreviewTable extends React.Component {\r\n  render() {\r\n    const file = this.props.file;\r\n    return (\r\n      <Table\r\n        className=\"import-preview-table\"\r\n        numRows={file.topN.length}\r\n        selectedRegions={Object.values(file.mapping)\r\n          .map(it => file.columns.indexOf(it))\r\n          .map(it => ({ rows: null, cols: [it, it] }))}\r\n      >\r\n        {file.columns.map(it => (\r\n          <Column\r\n            key={it}\r\n            name={it}\r\n            renderCell={i => <Cell>{file.topN[i][it]}</Cell>}\r\n          />\r\n        ))}\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\n@observer\r\nclass ImportDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      available: ONLY_EDGE_FILE,\r\n      nodesOpen: true,\r\n      edgesOpen: true,\r\n      delimiter: ','\r\n    };\r\n  }\r\n\r\n  changeAvailable = targetValue => {\r\n    if (targetValue === ONLY_EDGE_FILE) {\r\n      appState.import.importConfig.edgeFile.createMissing = true;\r\n    }\r\n    this.setState({ available: targetValue });\r\n  };\r\n\r\n  canImport = () => {\r\n    if (this.state.available === NODE_AND_EDGE_FILE) {\r\n      return (\r\n        appState.import.importConfig.edgeFile.ready &&\r\n        appState.import.importConfig.nodeFile.ready\r\n      );\r\n    } else if (this.state.available === ONLY_EDGE_FILE) {\r\n      return appState.import.importConfig.edgeFile.ready;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  renderNodesSelection = () => {\r\n    const nodeFile = appState.import.importConfig.nodeFile;\r\n    if (this.state.available === ONLY_EDGE_FILE) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Collapsable\r\n        name=\"Nodes\"\r\n        isOpen={this.state.nodesOpen}\r\n        onToggle={() => this.setState({ nodesOpen: !this.state.nodesOpen })}\r\n      >\r\n        <div className={classnames(Classes.CONTROL_GROUP)} style={{margin: \"10px\"}}>\r\n        <div className={classnames(Classes.CONTROL_GROUP)}>\r\n          <div style={{lineHeight:\"10px\"}} className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n            <input\r\n              type=\"file\"\r\n              className={classnames(Classes.DISABLED)}\r\n              onChange={(event) => {\r\n                if (event.target.files.length < 1) {\r\n                  return;\r\n                }\r\n                appState.import.selectedNodeFileFromInput = event.target.files[0];\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        </div>\r\n        <Switch\r\n          label=\"Has Headers\"\r\n          checked={nodeFile.hasColumns}\r\n          onChange={() => (nodeFile.hasColumns = !nodeFile.hasColumns)}\r\n        />\r\n        {nodeFile.ready && (\r\n          <div className=\"column-selection\">\r\n            <PreviewTable file={nodeFile} />\r\n            Column for Node ID:\r\n            <SimpleSelect\r\n              items={nodeFile.columns}\r\n              value={nodeFile.mapping.id}\r\n              onSelect={it => (nodeFile.mapping.id = it)}\r\n            />\r\n            <p sytle = {{margin: '0 0 0px',padding: '0'}}></p>\r\n            Column for Node Longitude:\r\n            <SimpleSelect\r\n              items={nodeFile.columns}\r\n              value={nodeFile.mapping.LonX}\r\n              onSelect={it => (nodeFile.mapping.LonX = it)}\r\n            />\r\n            <p sytle = {{margin: '0 0 0px',padding: '0'}}></p>\r\n            Column for Node Latitude:\r\n            <SimpleSelect\r\n              items={nodeFile.columns}\r\n              value={nodeFile.mapping.LatY}\r\n              onSelect={it => (nodeFile.mapping.LatY = it)}\r\n            />\r\n          </div>\r\n        )}\r\n      </Collapsable>\r\n    );\r\n  };\r\n\r\n  renderEdgesSelection = () => {\r\n    const edgeFile = appState.import.importConfig.edgeFile;\r\n    return (\r\n      <Collapsable\r\n        name=\"Edges\"\r\n        isOpen={this.state.edgesOpen}\r\n        onToggle={() => this.setState({ edgesOpen: !this.state.edgesOpen })}\r\n      >\r\n        <div className={classnames(Classes.CONTROL_GROUP)} style={{margin: \"10px\"}}>\r\n          <div style={{lineHeight:\"10px\"}} className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n            <input\r\n              type=\"file\"\r\n              className={classnames(Classes.DISABLED)}\r\n              onChange={(event) => {\r\n                if (event.target.files.length < 1) {\r\n                  return;\r\n                }\r\n                appState.import.selectedEdgeFileFromInput = event.target.files[0];\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Switch\r\n          label=\"Has Headers\"\r\n          checked={edgeFile.hasColumns}\r\n          onChange={() => (edgeFile.hasColumns = !edgeFile.hasColumns)}\r\n        />\r\n        <Switch\r\n          label=\"Create Missing Nodes\"\r\n          checked={edgeFile.createMissing}\r\n          disabled={this.state.available === ONLY_EDGE_FILE}\r\n          onChange={() => (edgeFile.createMissing = !edgeFile.createMissing)}\r\n        />\r\n        {edgeFile.ready && (\r\n          <div className=\"column-selection\">\r\n            <PreviewTable file={edgeFile} />\r\n            Column for Source ID:\r\n            <SimpleSelect\r\n              items={edgeFile.columns}\r\n              value={edgeFile.mapping.fromId}\r\n              onSelect={it => (edgeFile.mapping.fromId = it)}\r\n            />{\" \"}\r\n            <br />\r\n            Column for Target ID:\r\n            <SimpleSelect\r\n              items={edgeFile.columns}\r\n              value={edgeFile.mapping.toId}\r\n              onSelect={it => (edgeFile.mapping.toId = it)}\r\n            />\r\n          </div>\r\n        )}\r\n      </Collapsable>\r\n    );\r\n  };\r\n\r\n  updateDelimiter (newDelimiter) {\r\n    this.setState({delimiter: newDelimiter});\r\n\r\n    if (newDelimiter == \"\\\\t\") {\r\n      newDelimiter = \"\\t\"\r\n    }\r\n\r\n    appState.import.importConfig.edgeFile.delimiter = newDelimiter\r\n    appState.import.importConfig.nodeFile.delimiter = newDelimiter\r\n  }\r\n\r\n  renderDelimiterSelection() {\r\n    return (\r\n      <div className=\"column-selection\">\r\n        Selected Delimiter: \r\n        <SimpleSelect\r\n          items={[\",\", \"\\\\t\", \";\"]}\r\n          value={this.state.delimiter}\r\n          onSelect={it => { this.updateDelimiter(it) }}\r\n        />{\" \"}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        iconName=\"import\"\r\n        className={classnames({\r\n          [Classes.DARK]: appState.preferences.darkMode\r\n        })}\r\n        isOpen={appState.import.dialogOpen}\r\n        onClose={() => {\r\n          appState.import.dialogOpen = false;\r\n        }}\r\n        title=\"Import CSV\"\r\n      >\r\n        {appState.import.loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div>\r\n            <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\r\n              I have:\r\n              <SimpleSelect\r\n                items={[ONLY_EDGE_FILE, NODE_AND_EDGE_FILE]}\r\n                value={this.state.available}\r\n                onSelect={this.changeAvailable}\r\n              />\r\n              {this.renderNodesSelection()}\r\n              {this.renderEdgesSelection()}\r\n              {this.renderDelimiterSelection()}\r\n              <hr />\r\n              <PostImportOptions />\r\n            </div>\r\n            <div className={Classes.DIALOG_FOOTER}>\r\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n                <Button\r\n                  className={classnames({\r\n                    [Classes.DISABLED]: !this.canImport()\r\n                  })}\r\n                  intent={Intent.PRIMARY}\r\n                  onClick={() => {\r\n                    // TODO: this might be unsafe, check if there's racing condition\r\n\r\n                    //active layout when new graph imported\r\n                    appState.graph.runActiveLayout();\r\n\r\n                    requestCreateNewProject({\r\n                      name: appState.project.newProjectName,\r\n                      createdDate: new Date().toLocaleString(),\r\n                    });\r\n                    requestImportGraphFromCSV( //edgefile.delimiter and nodefile.delimiter are the same\r\n                      this.state.available === NODE_AND_EDGE_FILE, appState.import.importConfig.edgeFile.delimiter, appState.project.newProjectName\r\n                    );\r\n\r\n                    // Importing a graph means no label would be shown by default,\r\n                    // thus turn off label CSSRenderer for better performance.\r\n                    appState.graph.frame.turnOffLabelCSSRenderer();\r\n                  }}\r\n                  text=\"Import\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImportDialog;","/* eslint-disable jsx-a11y/label-has-for */\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Dialog,\r\n  Intent,\r\n  Spinner,\r\n} from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\nimport {\r\n  requestImportGraphFromGexf\r\n} from \"../ipc/client\";\r\nimport PostImportOptions from './PostImportOptions';\r\n\r\n@observer\r\nclass GEXFImportDialog extends React.Component {\r\n\r\n  renderImportButton() {\r\n    return (\r\n      <div className={Classes.DIALOG_FOOTER}>\r\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n          <Button\r\n            className={classnames({\r\n              [Classes.DISABLED]: appState.import.selectedGexfFileFromInput == null\r\n            })}\r\n            intent={Intent.PRIMARY}\r\n            onClick={() => {\r\n              // Temp\r\n              \r\n               //active layout when new graph imported\r\n               appState.graph.runActiveLayout();\r\n\r\n              appState.import.loading = true;\r\n              requestImportGraphFromGexf();\r\n            }}\r\n            text=\"Import\"\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        iconName=\"import\"\r\n        className={classnames({\r\n          [Classes.DARK]: appState.preferences.darkMode\r\n        })}\r\n        isOpen={appState.import.gexfDialogOpen}\r\n        onClose={() => {\r\n          appState.import.gexfDialogOpen = false;\r\n          appState.import.loading = false;\r\n        }}\r\n        title=\"Import GEXF\"\r\n      >\r\n        {appState.import.loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\r\n            <div>\r\n              <div className={classnames(Classes.CONTROL_GROUP)}>\r\n                <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n                <input\r\n                  type=\"file\"\r\n                  className={classnames(Classes.DISABLED)}\r\n                  onChange={(event) => {\r\n                    if (event.target.files.length < 1) {\r\n                      return;\r\n                    }\r\n                    appState.import.selectedGexfFileFromInput = event.target.files[0];\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <PostImportOptions />\r\n          </div>\r\n            {this.renderImportButton()}\r\n          </div>\r\n        )}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GEXFImportDialog;","/* eslint-disable jsx-a11y/label-has-for */\r\n\r\n/**\r\n * [Deprecated] This dialog is only used to open SQlite-based\r\n * graph file and optionally along with a snapshot file.\r\n * \r\n * For Argo-lite, which only has the JSON snapshot file,\r\n * use OpenSnapshotDialog.\r\n */\r\nimport React from \"react\";\r\nimport { Button, Classes, Dialog, Intent, Spinner } from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\nimport {\r\n  requestChooseGraphFile,\r\n  requestChooseStateFile,\r\n  requestOpen\r\n} from \"../ipc/client\";\r\nimport SimpleSelect from \"./utils/SimpleSelect\";\r\nimport {\r\n  GRAPH_AND_STATE_FILE,\r\n  ONLY_EDGE_FILE,\r\n  ONLY_GRAPH_FILE\r\n} from \"../constants\";\r\n\r\n@observer\r\nclass OpenDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      available: ONLY_GRAPH_FILE,\r\n      selectedGraph: null,\r\n      selectedState: null\r\n    };\r\n  }\r\n\r\n  canImport = () => {\r\n    if (this.state.available === GRAPH_AND_STATE_FILE) {\r\n      return appState.import.stateFile && appState.import.graphFile;\r\n    } else {\r\n      return appState.import.graphFile;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  changeAvailable = targetValue => {\r\n    if (targetValue === ONLY_EDGE_FILE) {\r\n      appState.import.importConfig.edgeFile.createMissing = true;\r\n    }\r\n    this.setState({ available: targetValue });\r\n  };\r\n\r\n  renderSelectGraph = () => {\r\n    return (\r\n      <div className={classnames(Classes.CONTROL_GROUP)}>\r\n        <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n          <input\r\n            type=\"text\"\r\n            className={classnames(Classes.DISABLED, Classes.INPUT)}\r\n            placeholder=\"Select graph file\"\r\n            readOnly\r\n            value={appState.import.graphFile}\r\n          />\r\n        </div>\r\n        <Button \r\n        style={{height:'15px'}}\r\n        intent={Intent.PRIMARY} onClick={requestChooseGraphFile}>\r\n          Choose File\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderSelectState = () => {\r\n    return (\r\n      <div className={classnames(Classes.CONTROL_GROUP)}>\r\n        <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n          <input\r\n            type=\"text\"\r\n            className={classnames(Classes.DISABLED, Classes.INPUT)}\r\n            placeholder=\"Select snapshot file\"\r\n            readOnly\r\n            value={appState.import.stateFile}\r\n          />\r\n        </div>\r\n        <Button \r\n        style={{height:'15px'}}\r\n        intent={Intent.PRIMARY} onClick={requestChooseStateFile}>\r\n          Choose File\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        iconName=\"import\"\r\n        className={classnames({\r\n          [Classes.DARK]: appState.preferences.darkMode\r\n        })}\r\n        isOpen={appState.preferences.openDialogOpen}\r\n        onClose={() => {\r\n          appState.preferences.openDialogOpen = false;\r\n        }}\r\n        title=\"Open File\"\r\n      >\r\n        {appState.import.loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div>\r\n            <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\r\n              I have:\r\n              <SimpleSelect\r\n                items={[GRAPH_AND_STATE_FILE, ONLY_GRAPH_FILE]}\r\n                value={this.state.available}\r\n                onSelect={this.changeAvailable}\r\n              />\r\n              {this.renderSelectGraph()}\r\n              {this.state.available === GRAPH_AND_STATE_FILE &&\r\n                this.renderSelectState()}\r\n            </div>\r\n            <div className={Classes.DIALOG_FOOTER}>\r\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n                <Button\r\n                  className={classnames({\r\n                    [Classes.DISABLED]: !this.canImport()\r\n                  })}\r\n                  intent={Intent.PRIMARY}\r\n                  onClick={() => {\r\n                    appState.preferences.openDialogOpen = false;\r\n                    requestOpen();\r\n                  }}\r\n                  text=\"Open\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenDialog;","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Dialog,\r\n  Intent,\r\n  Spinner,\r\n  Switch\r\n} from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\n\r\n@observer\r\nclass NewProjectDialog extends React.Component {\r\n  \r\n  render() {\r\n    const isNewProjectNameDuplicate = appState.project.projects.some(p => p.name === appState.project.newProjectName);\r\n    const isNewProjectNameEmpty = appState.project.newProjectName.trim() === '';\r\n    const isValidated = !(isNewProjectNameDuplicate || isNewProjectNameEmpty);\r\n  \r\n    return (\r\n      <Dialog\r\n        iconName=\"projects\"\r\n        isOpen={appState.project.isNewProjectDialogOpen}\r\n        onClose={() => {\r\n          appState.project.isNewProjectDialogOpen = false;\r\n        }}\r\n        title=\"Create New Project\"\r\n      >\r\n        <div className={Classes.DIALOG_BODY}>\r\n          <label className=\"pt-label .modifier\">\r\n            Project Name\r\n            <span className=\"pt-text-muted\"> (required){isNewProjectNameDuplicate && ' (This name has already been taken!)'}</span>\r\n            <input\r\n              className=\"pt-input\"\r\n              type=\"text\"\r\n              placeholder=\"New Project\"\r\n              dir=\"auto\"\r\n              value={appState.project.newProjectName}\r\n              onChange={event => {\r\n                appState.project.newProjectName = event.target.value;\r\n              }}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={Classes.DIALOG_FOOTER}>\r\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n            <Button\r\n              className={classnames({\r\n                [Classes.DISABLED]: !isValidated\r\n              })}\r\n              intent={Intent.PRIMARY}\r\n              onClick={() => {\r\n                if (isValidated) {\r\n                  appState.project.isNewProjectDialogOpen = false;\r\n                  appState.import.dialogOpen = true;\r\n                }\r\n              }}\r\n              text=\"Next\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewProjectDialog;","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Card,\r\n  Icon,\r\n  Dialog,\r\n  Intent,\r\n  Spinner\r\n} from \"@blueprintjs/core\";\r\nimport { requestOpen, requestDelete } from \"../ipc/client\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\n\r\n@observer\r\nclass ProjectDetailDialog extends React.Component {\r\n  render() {\r\n    return (\r\n      appState.project.currentProject && (\r\n        <Dialog\r\n          iconName=\"projects\"\r\n          isOpen={appState.project.isProjectDetailDialogOpen}\r\n          onClose={() => {\r\n            appState.project.isProjectDetailDialogOpen = false;\r\n          }}\r\n          title={`Load ${appState.project.currentProject.name} Project`}\r\n        >\r\n          {appState.project.currentProject.hasGraphData ? (\r\n            <div className={Classes.DIALOG_BODY}>\r\n              <Card\r\n                interactive={true}\r\n                elevation={Card.ELEVATION_TWO}\r\n                onClick={() => {\r\n                  appState.import.graphFile =\r\n                    appState.project.currentProject.graphDataPath;\r\n                  appState.project.isProjectDetailDialogOpen = false;\r\n                  requestOpen();\r\n                }}\r\n              >\r\n                <Icon iconName=\"graph\" /> Start fresh from original graph\r\n              </Card>\r\n              <hr />\r\n              <div className=\"argo-menu-list-header\">Load recent snapshots</div>\r\n              <div>\r\n                {appState.project.currentProject.snapshotPaths.map(\r\n                  snapshotPath => {\r\n                    return (\r\n                      <div key={snapshotPath}>\r\n                        <Card\r\n                          interactive={false}\r\n                          elevation={Card.ELEVATION_TWO}\r\n                        >\r\n                          {/* <Icon iconName=\"layout\" /> */}\r\n                          <h5>\r\n                            {snapshotPath\r\n                              .replace(/^.*[\\\\\\/]/, \"\")\r\n                              .replace(/\\.[^/.]+$/, \"\")}\r\n                          </h5>\r\n                          <Button\r\n                            className={classnames([\r\n                              Classes.BUTTON,\r\n                              Classes.INTENT_PRIMARY\r\n                            ])}\r\n                            onClick={() => {\r\n                              appState.import.graphFile =\r\n                                appState.project.currentProject.graphDataPath;\r\n                              appState.import.stateFile = snapshotPath;\r\n                              appState.project.currentSnapshotName = snapshotPath\r\n                                .replace(/^.*[\\\\\\/]/, \"\")\r\n                                .replace(/\\.[^/.]+$/, \"\");\r\n                              appState.project.isProjectDetailDialogOpen = false;\r\n                              requestOpen();\r\n                            }}\r\n                          >\r\n                            Load Snapshot\r\n                          </Button>\r\n                          <Button\r\n                            className={classnames([Classes.BUTTON])}\r\n                            onClick={() => {\r\n                                requestDelete(snapshotPath);\r\n                                appState.project.currentProject.snapshotPaths = appState.project.currentProject.snapshotPaths.filter(\r\n                                  path => path !== snapshotPath\r\n                                );\r\n                            }}\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </Card>\r\n                      </div>\r\n                    );\r\n                  }\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              Error: Cannot find .argograph file in this project directory.\r\n            </div>\r\n          )}\r\n        </Dialog>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectDetailDialog;","/**\r\n * [Argo-lite Modified]\r\n * In electron Argo, snapshots are saved to the active project folder.\r\n * In Argo-lite, snapshots are saved as a file download.\r\n * Sometimes, it's tricky to let browser download something without a backend\r\n * hosting the file. Thus we also allow user to copy paste from\r\n * a text area containing our snapshot JSON.\r\n * \r\n * Remember to change appState.project.stringCopyOfSnapshot\r\n * before showing the dialog.\r\n */\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Card,\r\n  Icon,\r\n  Dialog,\r\n  Intent,\r\n  Spinner\r\n} from \"@blueprintjs/core\";\r\nimport { requestSaveSnapshot } from \"../ipc/client\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\n\r\n@observer\r\nclass SaveSnapshotDialog extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     name: \"Quick Save\",\r\n  //   };\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n        <Dialog\r\n          iconName=\"projects\"\r\n          isOpen={appState.project.isSaveSnapshotDialogOpen}\r\n          onClose={() => {\r\n            appState.project.isSaveSnapshotDialogOpen = false;\r\n          }}\r\n          title={`Save Snapshot`}\r\n        >\r\n          <div className={classnames(Classes.DIALOG_BODY)}>\r\n            {/* <label className=\"pt-label .modifier\">\r\n              Snapshot Name\r\n              <span className=\"pt-text-muted\"> (required)</span>\r\n              <input\r\n                className=\"pt-input\"\r\n                type=\"text\"\r\n                placeholder=\"My Snapshot\"\r\n                dir=\"auto\"\r\n                value={this.state.name}\r\n                onChange={event => this.setState({ name: event.target.value })}\r\n              />\r\n            </label> */}\r\n            <p>If your browser doesn't start downloading the file, you can manually copy the content below and save to a plain text file.</p>\r\n            <input id=\"snapshot-textarea\" type=\"textarea\" value={appState.project.stringCopyOfSnapshot} readOnly />\r\n            <button\r\n              onClick={() => {\r\n                document.getElementById('snapshot-textarea').select();\r\n                document.execCommand(\"copy\");\r\n              }}\r\n            >\r\n              Copy to Clipboard\r\n            </button>\r\n          </div>\r\n\r\n          <div className={Classes.DIALOG_FOOTER}>\r\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n              <Button\r\n                // className={classnames({\r\n                //   [Classes.DISABLED]: !this.state.name\r\n                // })}\r\n                intent={Intent.PRIMARY}\r\n                onClick={() => {\r\n                  appState.project.isSaveSnapshotDialogOpen = false;\r\n                }}\r\n                text=\"Done\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SaveSnapshotDialog;","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Card,\r\n  Icon,\r\n  Dialog,\r\n  Intent,\r\n  Spinner\r\n} from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\n\r\n@observer\r\nclass SaveSnapshotDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Dialog\r\n          iconName=\"projects\"\r\n          isOpen={appState.project.isRenameSnapshotDialogOpen}\r\n          onClose={() => {\r\n            appState.project.isRenameSnapshotDialogOpen = false;\r\n          }}\r\n          title={`Rename Snapshot`}\r\n        >\r\n          <div className={classnames(Classes.DIALOG_BODY)}>\r\n            <label className=\"pt-label .modifier\">\r\n              Snapshot Name\r\n              <span className=\"pt-text-muted\"> (required)</span>\r\n              <input\r\n                className=\"pt-input\"\r\n                type=\"text\"\r\n                placeholder=\"My Snapshot\"\r\n                dir=\"auto\"\r\n                value={this.state.name}\r\n                onChange={event => this.setState({ name: event.target.value })}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div className={Classes.DIALOG_FOOTER}>\r\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n              <Button\r\n                className={classnames({\r\n                  [Classes.DISABLED]: !this.state.name\r\n                })}\r\n                intent={Intent.PRIMARY}\r\n                onClick={() => {\r\n                  appState.graph.metadata.snapshotName = this.state.name;\r\n                  appState.project.isRenameSnapshotDialogOpen = false;\r\n                }}\r\n                text=\"Done\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SaveSnapshotDialog;","/**\r\n * [Argo-lite] Open the Argo-lite JSON graph snapshot file\r\n */\r\nimport React from \"react\";\r\nimport { Button, Classes, Dialog, Intent } from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\nimport SimpleSelect from \"./utils/SimpleSelect\";\r\nimport { toaster } from '../notifications/client';\r\n\r\n@observer\r\nclass OpenSnapshotDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        selectedFile: null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        iconName=\"import\"\r\n        className={classnames({\r\n          [Classes.DARK]: appState.preferences.darkMode\r\n        })}\r\n        isOpen={appState.preferences.openSnapshotDialogOpen}\r\n        onClose={() => {\r\n          appState.preferences.openSnapshotDialogOpen = false;\r\n        }}\r\n        title=\"Open File\"\r\n      >\r\n        <div>\r\n            <div className={classnames(Classes.DIALOG_BODY)}>\r\n                <div className={classnames(Classes.CONTROL_GROUP)}>\r\n                    <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n                        <input\r\n                            type=\"file\"\r\n                            className={classnames(Classes.DISABLED)}\r\n                            onChange={(event) => {\r\n                                if (event.target.files.length < 1) {\r\n                                    return;\r\n                                }\r\n                                this.setState({\r\n                                    selectedFile: event.target.files[0]\r\n                                });\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={Classes.DIALOG_FOOTER}>\r\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n                <Button\r\n                  className={classnames({\r\n                    [Classes.DISABLED]: !this.state.selectedFile\r\n                  })}\r\n                  intent={Intent.PRIMARY}\r\n                  onClick={() => {\r\n                    // This dialog is closed when user is done selecting file\r\n                    appState.preferences.openSnapshotDialogOpen = false;\r\n\r\n                    // Show user a notification\r\n                    toaster.show({\r\n                        message: 'Loading Graph Snapshot. Please wait...',\r\n                        intent: Intent.NONE,\r\n                        timeout: 2000\r\n                    });\r\n                    \r\n                    // Read the file and load snapshot\r\n                    const reader = new FileReader();\r\n                    reader.readAsText(this.state.selectedFile);\r\n\r\n                    reader.onload = () => {\r\n                        const fileAsString = reader.result;\r\n                        appState.graph.loadImmediateStates(fileAsString);\r\n                    }\r\n                  }}\r\n                  text=\"Open\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenSnapshotDialog;","import React from \"react\";\r\nimport {\r\n    Button,\r\n    Classes,\r\n    Card,\r\n    Icon,\r\n    Dialog,\r\n    Intent,\r\n    Spinner\r\n} from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport { toaster } from '../notifications/client';\r\nimport * as Blueprint from \"@blueprintjs/core\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\nimport { BACKEND_URL } from \"../constants\";\r\n\r\nconst uuidv4 = require('uuid/v4');\r\n\r\n@observer\r\nclass ShareDialog extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShared: false,\r\n            isFetching: false,\r\n            sharedURL: 'Error: Sharing failed',\r\n            selectedContinue: false,\r\n        };\r\n\r\n        this.handleRequest = this.handleRequest.bind(this);\r\n    }\r\n\r\n\r\n\r\n\r\n    async handleRequest(uuid) {\r\n        // return await new Promise(resolve => setTimeout(resolve, 2000));\r\n        const backendURL = `${BACKEND_URL}/snapshots`;\r\n        // TODO: add better error handling\r\n        return await fetch(backendURL, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            referrer: 'no-referrer',\r\n            body: JSON.stringify({\r\n                uuid,\r\n                body: window.saveSnapshotToString()\r\n            }),\r\n        }).then(response => response.ok).catch(error => {\r\n            toaster.show({\r\n                message: 'Failed to publish to sharing server. Unexpected error.',\r\n                intent: Intent.DANGER,\r\n                timeout: -1\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <Dialog\r\n                iconName=\"projects\"\r\n                isOpen={appState.preferences.shareDialogOpen}\r\n                onClose={() => {\r\n                    appState.preferences.shareDialogOpen = false;\r\n                    this.setState({\r\n                        ...this.state,\r\n                        selectedContinue: false,\r\n                    });\r\n                }}\r\n                title={`Share Graph Snapshot`}\r\n                style={{ width: !this.state.selectedContinue ? 735 : 580 }}\r\n            >\r\n                <div className={classnames(Classes.DIALOG_BODY)}>\r\n                    {\r\n                        !this.state.selectedContinue && (\r\n                            <div>\r\n                                <p style={{ display: \"inline\", marginRight: \"20px\" }}>You can share your snapshot as\r\n                        <b> a public URL</b>, an <b> HTML iframe</b>, or a <b>Jupyter Notebook IFrame</b></p>\r\n                                {\r\n                                    !this.state.selectedContinue && (\r\n                                        <Button\r\n                                            className={classnames({\r\n                                                [Classes.DISABLED]: this.state.isFetching\r\n                                            })}\r\n                                            intent={Intent.PRIMARY}\r\n                                            onClick={async () => {\r\n                                                this.setState({ isFetching: true });\r\n                                                // Generate a random UUID\r\n                                                const uuid = uuidv4();\r\n                                                // Generate URL corresponding to the UUID\r\n                                                const sharedURL = `https://poloclub.github.io/argo-graph-lite/#${uuid}`;\r\n\r\n                                                // Wait for backend response\r\n                                                const requestSuccess = await this.handleRequest(uuid);\r\n                                                // Update local state\r\n                                                if (requestSuccess) {\r\n                                                    this.setState({ isFetching: false, isShared: true, sharedURL });\r\n                                                } else {\r\n                                                    // request fails, toast fires\r\n                                                    this.setState({ isFetching: false, isShared: false });\r\n                                                    toaster.show({\r\n                                                        message: 'Failed to publish to sharing server. Please try again later.',\r\n                                                        intent: Intent.DANGER,\r\n                                                        timeout: -1\r\n                                                    });\r\n                                                }\r\n                                                this.setState({\r\n                                                    ...this.state,\r\n                                                    selectedContinue: true,\r\n                                                });\r\n                                            }}\r\n                                            text=\"Continue\"\r\n                                        />\r\n                                    )\r\n                                }\r\n                                <hr />\r\n                                {/**pt-callout pt-intent-primary .modifier */}\r\n                                <div className=\"pt-callout pt-intent-warning\" style={{marginBottom: \"20px\",}}>\r\n                                    <p className=\"pt-callout-title\">This snapshot is “static”, like taking a photo of your visualization. This means that if your graph is changed in any ways (e.g., move nodes around) after creating a URL and you want to re-share those updates, you will need to create a new URL by selecting <b>Share Again to a new URL</b> in the next window.</p>\r\n                                </div>\r\n                                <div className=\"pt-callout pt-intent-danger\">\r\n                                    <p className=\"pt-callout-title \"><b>IMPORTANT!</b> This will make your graph snapshot public. If you are working with sensitive data (with custom access control), or large data (>400MB), please follow our guide on Github to easily deploy your own sharing server.</p>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    {\r\n                        this.state.isFetching && (\r\n                            <p style={{marginTop: \"10px\"}}><b>Sharing in progress. Please wait...</b></p>\r\n                        )\r\n                    }\r\n                    {\r\n                        this.state.selectedContinue && (\r\n                            <div>\r\n                                {/** graph URL */}\r\n                        Your current snapshot has been shared to\r\n                                <br />\r\n                                <input\r\n                                    id=\"snapshot-textarea\"\r\n                                    type=\"textarea\"\r\n                                    value={this.state.sharedURL}\r\n                                    readOnly\r\n                                    style={{\r\n                                        width: '400px',\r\n                                        marginTop: \"5px\"\r\n                                    }}\r\n                                />\r\n                                <button\r\n                                    onClick={() => {\r\n                                        document.getElementById('snapshot-textarea').select();\r\n                                        document.execCommand(\"copy\");\r\n                                    }}\r\n                                    className=\"copy-to-clipboard\"\r\n                                >\r\n                                    Copy to Clipboard\r\n                        </button>\r\n                                <br />\r\n                                <hr />\r\n\r\n                                {/** Embedding as HTML iframe */}\r\n                        Embed as an <b>HTML iframe</b>:\r\n                                <br />\r\n                                <input\r\n                                    id=\"iframe-html-textarea\"\r\n                                    type=\"textarea\"\r\n                                    value={`<iframe src=\"${this.state.sharedURL}\" width=\"850\" height=\"500\"></iframe>`}\r\n                                    style={{\r\n                                        width: '400px',\r\n                                        marginTop: \"5px\"\r\n                                    }}\r\n                                    readOnly\r\n                                />\r\n                                <button\r\n                                    onClick={() => {\r\n                                        document.getElementById('iframe-html-textarea').select();\r\n                                        document.execCommand(\"copy\");\r\n                                    }}\r\n                                    className=\"copy-to-clipboard\"\r\n                                >\r\n                                    Copy to Clipboard\r\n                        </button>\r\n                                <br />\r\n                                <hr />\r\n\r\n                                {/** Embedding as Jupyter Notebook IFrame */}\r\n                        Embed as a <b>Jupyter Notebook IFrame</b>:\r\n                                <br />\r\n                                <textarea\r\n                                    id=\"iframe-jupyter-textarea\"\r\n                                    rows=\"2\"\r\n                                    cols=\"60\"\r\n                                    style={{\r\n                                        overflow: \"hidden\",\r\n                                        marginTop: \"5px\",\r\n                                        width: \"400px\",\r\n                                        resize: \"none\"\r\n                                    }}\r\n                                    readOnly=\"true\"\r\n                                    value={`from IPython.display import IFrame` + \"\\n\" + `IFrame(\"${this.state.sharedURL}\", width=700, height=350)`} />\r\n                                <button\r\n                                    onClick={() => {\r\n                                        document.getElementById('iframe-jupyter-textarea').select();\r\n                                        document.execCommand(\"copy\");\r\n                                    }}\r\n                                    className=\"copy-to-clipboard\"\r\n                                    style={{\r\n                                        position: \"absolute\",\r\n                                        marginTop: \"20px\",\r\n                                    }}\r\n                                >\r\n                                    Copy to Clipboard\r\n                        </button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n                <div className={Classes.DIALOG_FOOTER}>\r\n                    <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n                        {\r\n                            this.state.selectedContinue && (\r\n\r\n\r\n                                <Button\r\n                                    className={classnames({\r\n                                        [Classes.DISABLED]: this.state.isFetching\r\n                                    })}\r\n                                    intent={Intent.PRIMARY}\r\n                                    onClick={async () => {\r\n                                        this.setState({ isFetching: true, isShared: false });\r\n                                        // Generate a random UUID\r\n                                        const uuid = uuidv4();\r\n                                        // Generate URL corresponding to the UUID\r\n                                        const sharedURL = `https://poloclub.github.io/argo-graph-lite/#${uuid}`;\r\n\r\n                                        // Wait for backend response\r\n                                        const requestSuccess = await this.handleRequest(uuid);\r\n                                        // Update local state\r\n                                        if (requestSuccess) {\r\n                                            this.setState({ isFetching: false, isShared: true, sharedURL });\r\n                                        } else {\r\n                                            // request fails, toast fires\r\n                                            this.setState({ isFetching: false, isShared: false });\r\n                                            toaster.show({\r\n                                                message: 'Failed to publish to sharing server. Please try again later.',\r\n                                                intent: Intent.DANGER,\r\n                                                timeout: -1\r\n                                            });\r\n                                        }\r\n\r\n                                    }}\r\n                                    text=\"Share Snapshot as New URL\"\r\n                                />\r\n                            )\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <style dangerouslySetInnerHTML={{\r\n                    __html:\r\n                        `\r\n                    .copy-to-clipboard{\r\n                        margin-top: 5px;\r\n                        margin-left: 5px;\r\n                        border-style: solid;\r\n                    }\r\n                    \r\n            `}} />\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShareDialog;","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Card,\r\n  Icon,\r\n  Dialog,\r\n  Intent,\r\n  Spinner,\r\n  Switch\r\n} from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\n\r\n@observer\r\nclass StatisticsDialog extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//   }\r\n\r\n  render() {\r\n    return (\r\n        <Dialog\r\n          iconName=\"projects\"\r\n          isOpen={appState.preferences.statisticsDialogOpen}\r\n          onClose={() => {\r\n            appState.preferences.statisticsDialogOpen = false;\r\n          }}\r\n          title={`Statistics`}\r\n        >\r\n          <div className={classnames(Classes.DIALOG_BODY)}>\r\n            <table className={Classes.TABLE} style={{width: '100%'}}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Statistics</th>\r\n                        <th>Value</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td># Nodes</td>\r\n                        <td>{appState.graph.metadata.fullNodes}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td># Edges</td>\r\n                        <td>{appState.graph.metadata.fullEdges}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Average Degree</td>\r\n                        <td>\r\n                          {appState.graph.hasGraph ? appState.graph.degree.toFixed(3) : 'loading graph'}\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Graph Density</td>\r\n                        <td>\r\n                          {appState.graph.hasGraph ? appState.graph.density.toFixed(3) : 'loading graph'}\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Graph Diameter</td>\r\n                        <td>\r\n                          {appState.graph.hasGraph ? appState.graph.diameter : 'loading graph'}\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Clustering Coefficient</td>\r\n                        <td>{(appState.graph.hasGraph & appState.preferences.statisticsDialogOpen) ? appState.graph.averageClustering.toFixed(3) : 'loading graph'}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Connected Component</td>\r\n                        <td>{(appState.graph.hasGraph & appState.preferences.statisticsDialogOpen) ? appState.graph.components : 'loading graph'}</td>\r\n\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div className={Classes.DIALOG_FOOTER}>\r\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n              <Button\r\n                intent={Intent.PRIMARY}\r\n                onClick={() => {\r\n                  appState.preferences.statisticsDialogOpen = false;\r\n                }}\r\n                text=\"Done\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatisticsDialog;","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Card,\r\n  Icon,\r\n  Dialog,\r\n  Intent,\r\n  Spinner,\r\n  Switch\r\n} from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\n\r\n@observer\r\nclass FilterDialog extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//   }\r\n\r\n  render() {\r\n    return (\r\n        <Dialog\r\n          iconName=\"projects\"\r\n          isOpen={appState.preferences.filterDialogOpen}\r\n          onClose={() => {\r\n            appState.preferences.filterDialogOpen = false;\r\n          }}\r\n          title={`Filters`}\r\n        >\r\n          <div className={classnames(Classes.DIALOG_BODY)}>\r\n            <table className={Classes.TABLE} style={{width: '100%'}}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Statistics</th>\r\n                        <th>Value</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td># Nodes</td>\r\n                        <td>{appState.graph.metadata.fullNodes}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td># Edges</td>\r\n                        <td>{appState.graph.metadata.fullEdges}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Average Degree</td>\r\n                        <td>\r\n                          {appState.graph.hasGraph ? appState.graph.degree : 'loading graph'}\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Graph Density</td>\r\n                        <td>\r\n                          {appState.graph.hasGraph ? appState.graph.density : 'loading graph'}\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Graph Diameter</td>\r\n                        <td>\r\n                          {appState.graph.hasGraph ? appState.graph.diameter : 'loading graph'}\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Clustering Coefficient</td>\r\n                        <td>{(appState.graph.hasGraph & appState.preferences.filterDialogOpen) ? appState.graph.averageClustering : 'loading graph'}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Connected Component</td>\r\n                        <td>{(appState.graph.hasGraph & appState.preferences.filterDialogOpen) ? appState.graph.components : 'loading graph'}</td>\r\n\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div className={Classes.DIALOG_FOOTER}>\r\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n              <Button\r\n                intent={Intent.PRIMARY}\r\n                onClick={() => {\r\n                  appState.preferences.filterDialogOpen = false;\r\n                }}\r\n                text=\"Done\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterDialog;","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Dialog,\r\n  Intent,\r\n} from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\n\r\n@observer\r\nclass HelpDialog extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n        <Dialog\r\n          iconName=\"help\"\r\n          isOpen={appState.preferences.helpDialogOpen}\r\n          onClose={() => {\r\n            appState.preferences.helpDialogOpen = false;\r\n          }}\r\n          title={`Help`}\r\n        >\r\n          <div className={classnames(Classes.DIALOG_BODY)}>\r\n            Argo supports both mouse/trackpad and touchscreen.\r\n            <div className=\"argo-table-container\">\r\n              <table className=\"argo-table-container__table pt-table pt-bordered pt-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Basic Operation</th>\r\n                    <th>Mouse</th>\r\n                    <th>Touchscreen</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Zoom</td>\r\n                    <td>Mouse wheel</td>\r\n                    <td>2 finger zoom gesture</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Pan</td>\r\n                    <td>Drag with right mouse button down OR Move mouse with space key pressed</td>\r\n                    <td>Drag with 3 finger</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Select single node (view details)</td>\r\n                    <td>Single Click</td>\r\n                    <td>Tap with 1 finger</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Select multiple nodes</td>\r\n                    <td>Drag left mouse button from empty area</td>\r\n                    <td>Drag 1 finger from empty area</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Drag nodes</td>\r\n                    <td>Drag with left mouse button down</td>\r\n                    <td>Drag with 1 finger</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            \r\n          </div>\r\n\r\n          <div className={Classes.DIALOG_FOOTER}>\r\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n              <Button\r\n                intent={Intent.PRIMARY}\r\n                onClick={() => {\r\n                  appState.preferences.helpDialogOpen = false;\r\n                }}\r\n                text=\"Done\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HelpDialog;","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Dialog,\r\n  Intent,\r\n  Switch,\r\n  ButtonGroup\r\n} from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\nimport SimpleSelect from \"./utils/SimpleSelect\";\r\n\r\n@observer\r\nclass NodeTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sortBy: 'pagerank',\r\n            sortOrder: 'descending', // or 'ascending'\r\n        };\r\n    }\r\n\r\n  render() {\r\n    let filteredNodes = this.props.nodes;\r\n    \r\n    filteredNodes.sort((n1, n2) => {\r\n        const n1val = n1[this.state.sortBy];\r\n        const n2val = n2[this.state.sortBy];\r\n        if (n1val && n2val) {\r\n            // Check if these are numerical fields, if so sort by number.\r\n            const n1valAsNum = Number(n1val);\r\n            const n2valAsNum = Number(n2val);\r\n            if (!Number.isNaN(n1valAsNum) && !Number.isNaN(n2valAsNum)) {\r\n                // both values are numeric, compare by their value.\r\n                if (this.state.sortOrder === 'descending') {\r\n                    return n2valAsNum - n1valAsNum;\r\n                }\r\n                return n1valAsNum - n2valAsNum;\r\n            } else {\r\n                // not all values are numeric, sort by string order.\r\n                const n1valAsString = n1val.toString();\r\n                const n2valAsString = n2val.toString();\r\n                return (this.state.sortOrder === 'descending' ? -1 : 1) * n1valAsString.localeCompare(n2valAsString);\r\n            }\r\n        }\r\n        return 0;\r\n    });\r\n\r\n    const nodeAttributesOrig = appState.graph.allPropertiesKeyList.filter((k) => k !== 'pagerank' && k !== 'degree');\r\n    \r\n    return (\r\n            <div className=\"argo-table-container\">\r\n                Sort By {' '}\r\n                <SimpleSelect\r\n                    items={['pagerank', 'degree', ...nodeAttributesOrig]}\r\n                    value={this.state.sortBy}\r\n                    onSelect={(selected) => {\r\n                        this.setState({sortBy: selected});\r\n                    }}\r\n                />\r\n                <SimpleSelect\r\n                    items={['descending', 'ascending']}\r\n                    value={this.state.sortOrder}\r\n                    onSelect={(selected) => {\r\n                        this.setState({sortOrder: selected});\r\n                    }}\r\n                />\r\n                <table className=\"argo-table-container__table pt-table pt-bordered pt-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th><b>Show</b></th>\r\n                            <th><b>Node ID</b></th>\r\n                            {\r\n                                appState.graph.allPropertiesKeyList.map((it, i) => {\r\n                                    if (it !== 'id') {\r\n                                        return <th key={`${it}-${i}`}>{it}</th>;\r\n                                    }\r\n                                    return null;\r\n                                })\r\n                            }\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            filteredNodes.map((node) => (\r\n                                <tr key={node.id}>\r\n                                    <td>\r\n                                        <Switch\r\n                                            checked={!node.isHidden}\r\n                                            onChange={() => {\r\n                                                if (node.isHidden) {\r\n                                                    appState.graph.showNodes([node.id]);\r\n                                                } else {\r\n                                                    appState.graph.hideNodes([node.id]);\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </td>\r\n                                    <td>{node.id}</td>\r\n                                    {\r\n                                        appState.graph.allPropertiesKeyList.map((it, i) => {\r\n                                            if (it !== 'id') {\r\n                                                return <td key={`${it}-${i}`}>{node[it]}</td>\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NodeTable;","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Dialog,\r\n  Intent,\r\n  ButtonGroup,\r\n  NumericInput,\r\n} from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\nimport NodeTable from './NodeTable';\r\nimport SimpleSelect from \"./utils/SimpleSelect\";\r\n\r\n@observer\r\nclass NeighborDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMoreBy: 'pagerank',\r\n      showMoreNum: 5,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    // Compare function for nodes used for sorting descendingly.\r\n    const compareByPageRank = (n1, n2) => {\r\n        if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\r\n            return n2[\"pagerank\"] - n1[\"pagerank\"];\r\n        }\r\n        return 0;\r\n    };\r\n\r\n    let filteredNodes = [];\r\n    // When only one node is selected, show the neighbors of this selected node.\r\n    if (appState.graph.lastSelectedSingleNode) {\r\n        const selectedNodeId = appState.graph.lastSelectedSingleNode.data.ref.id.toString();\r\n        filteredNodes = appState.graph.getNeighborNodesFromRawGraph(selectedNodeId);\r\n\r\n        // Sort by pagerank if available.\r\n        filteredNodes.sort(compareByPageRank);\r\n    }\r\n\r\n    const showNMoreByAttribute = (numberToShow, attributeName) => {\r\n      const hiddenNodes = filteredNodes.filter(n => n.isHidden);\r\n      hiddenNodes.sort((n1, n2) => {\r\n        if (n1[attributeName] && n2[attributeName]) {\r\n            return n2[attributeName] - n1[attributeName];\r\n        }\r\n        return 0;\r\n      });\r\n      const ids = [];\r\n      for (let i = 0; i < numberToShow && i < hiddenNodes.length; i++) {\r\n          ids.push(hiddenNodes[i].id);\r\n      }\r\n      appState.graph.showNodes(ids);\r\n    };\r\n    \r\n    return (\r\n        <Dialog\r\n          iconName=\"graph\"\r\n          isOpen={appState.preferences.neighborDialogOpen}\r\n          onClose={() => {\r\n            appState.preferences.neighborDialogOpen = false;\r\n          }}\r\n          title='Neighbors'\r\n          style={{minWidth: '80vw'}}\r\n        >\r\n          <div className={classnames(Classes.DIALOG_BODY)}>\r\n\r\n            <ButtonGroup>\r\n                <Button onClick={() => {appState.graph.showNodes(filteredNodes.map(n => n.id))}}>Show All</Button>\r\n                <Button onClick={() => {appState.graph.hideNodes(filteredNodes.map(n => n.id))}}>Hide All</Button>\r\n            </ButtonGroup>\r\n\r\n            <hr />\r\n\r\n            <div>\r\n              <Button\r\n              style={{display: 'inline'}}\r\n              intent={Intent.PRIMARY}\r\n              text='Show'\r\n              onClick={() => {\r\n                showNMoreByAttribute(this.state.showMoreNum, this.state.showMoreBy);\r\n              }} /> <NumericInput onValueChange={(valAsNumber, valAsString) => {this.setState({showMoreNum: Number(valAsString)})}} value={this.state.showMoreNum} style={{display: 'inline-flex', width: '30px'}} /> {' '}\r\n              more nodes with highest <SimpleSelect items={['pagerank', 'degree']} value={this.state.showMoreBy} onSelect={(selected) => {this.setState({showMoreBy: selected})}} />\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            <NodeTable nodes={filteredNodes} />\r\n          </div>\r\n\r\n          <div className={Classes.DIALOG_FOOTER}>\r\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n              <Button\r\n                intent={Intent.PRIMARY}\r\n                onClick={() => {\r\n                  appState.preferences.neighborDialogOpen = false;\r\n                }}\r\n                text=\"Done\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NeighborDialog;","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Dialog,\r\n  Intent,\r\n  ButtonGroup,\r\n  NumericInput,\r\n} from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\nimport NodeTable from './NodeTable';\r\nimport SimpleSelect from \"./utils/SimpleSelect\";\r\n\r\n\r\n@observer\r\nclass DataSheetDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMoreBy: 'pagerank',\r\n      showMoreNum: 5,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let filteredNodes = [...appState.graph.rawGraph.nodes];\r\n\r\n    const showNMoreByAttribute = (numberToShow, attributeName) => {\r\n      const hiddenNodes = filteredNodes.filter(n => n.isHidden);\r\n      hiddenNodes.sort((n1, n2) => {\r\n        if (n1[attributeName] && n2[attributeName]) {\r\n            return n2[attributeName] - n1[attributeName];\r\n        }\r\n        return 0;\r\n      });\r\n      const ids = [];\r\n      for (let i = 0; i < numberToShow && i < hiddenNodes.length; i++) {\r\n          ids.push(hiddenNodes[i].id);\r\n      }\r\n      appState.graph.showNodes(ids);\r\n    };\r\n    \r\n    return (\r\n        <Dialog\r\n          iconName=\"database\"\r\n          isOpen={appState.preferences.dataSheetDialogOpen}\r\n          onClose={() => {\r\n            appState.preferences.dataSheetDialogOpen = false;\r\n          }}\r\n          title='Data Sheet'\r\n          style={{minWidth: '80vw'}}\r\n        >\r\n          <div className={classnames(Classes.DIALOG_BODY)}>\r\n\r\n            <ButtonGroup>\r\n                <Button onClick={() => {appState.graph.showNodes(filteredNodes.map(n => n.id))}}>Show All</Button>\r\n                <Button onClick={() => {appState.graph.hideNodes(filteredNodes.map(n => n.id))}}>Hide All</Button>\r\n            </ButtonGroup>\r\n\r\n            <hr />\r\n\r\n            <div>\r\n              <Button\r\n              style={{display: 'inline'}}\r\n              intent={Intent.PRIMARY}\r\n              text='Show'\r\n              onClick={() => {\r\n                showNMoreByAttribute(this.state.showMoreNum, this.state.showMoreBy);\r\n              }} /> <NumericInput onValueChange={(valAsNumber, valAsString) => {this.setState({showMoreNum: Number(valAsString)})}} value={this.state.showMoreNum} style={{display: 'inline-flex', width: '30px'}} /> {' '}\r\n              more nodes with highest <SimpleSelect items={['pagerank', 'degree']} value={this.state.showMoreBy} onSelect={(selected) => {this.setState({showMoreBy: selected})}} />\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            <NodeTable nodes={filteredNodes} />\r\n          </div>\r\n\r\n          <div className={Classes.DIALOG_FOOTER}>\r\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n              <Button\r\n                intent={Intent.PRIMARY}\r\n                onClick={() => {\r\n                  appState.preferences.dataSheetDialogOpen = false;\r\n                }}\r\n                text=\"Done\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataSheetDialog;","import React from \"react\";\r\nimport PreferencesDialog from \"./PreferencesDialog\";\r\nimport ImportDialog from \"./ImportDialog\";\r\nimport GEXFImportDialog from \"./GEXFImportDialog\"\r\nimport OpenDialog from \"./OpenDialog\";\r\nimport NewProjectDialog from \"./NewProjectDialog\";\r\nimport ProjectDetailDialog from \"./ProjectDetailDialog\";\r\nimport SaveSnapshotDialog from \"./SaveSnapshotDialog\";\r\nimport RenameSnapshotDialog from \"./RenameSnapshotDialog\";\r\nimport OpenSnapshotDialog from \"./OpenSnapshotDialog\";\r\nimport ShareDialog from './ShareDialog';\r\nimport StatisticsDialog from './StatisticsDialog';\r\nimport FilterDialog from './FilterDialog';\r\nimport HelpDialog from './HelpDialog';\r\nimport NeighborDialog from './NeighborDialog';\r\nimport DataSheetDialog from './DataSheetDialog';\r\nimport ResizableDraggableDialog from \"./ResizableDraggableDialog\"\r\n\r\nexport default class Dialogs extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{ }}>\r\n        <PreferencesDialog />\r\n        <ImportDialog />\r\n        <GEXFImportDialog />\r\n        <OpenDialog />\r\n        <OpenSnapshotDialog />\r\n        <NewProjectDialog />\r\n        <ProjectDetailDialog />\r\n        <SaveSnapshotDialog />\r\n        <RenameSnapshotDialog />\r\n        <ShareDialog />\r\n        <StatisticsDialog />\r\n        {/* <ResizableDraggableDialog /> */}\r\n        <FilterDialog />\r\n        <HelpDialog />\r\n        <NeighborDialog />\r\n        <DataSheetDialog />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {Rnd} from \"react-rnd\";\r\nimport React from \"react\";\r\n// import \"./style.css\";\r\nimport { Dialog } from \"@blueprintjs/core\";\r\nimport appState from \"../stores/index\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n@observer\r\nclass ResizableDraggableDialog extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      \r\n    }\r\n  \r\n    render() {\r\n      const w = window,\r\n      d = document,\r\n      e = d.documentElement,\r\n      g = d.getElementsByTagName(\"body\")[0],\r\n      windowWidth = w.innerWidth || e.clientWidth || g.clientWidth,\r\n      windowHeight = w.innerHeight || e.clientHeight || g.clientHeight;\r\n      return (\r\n        \r\n<div\r\n      className={\"tg-pt-dialog-resizable-draggable\"}\r\n      style={{ top: 0, left: 0, position: \"fixed\" }}\r\n    >\r\n         <Rnd\r\n        style={{backgroundColor:'red'}}\r\n        bounds={\"body\"}\r\n        default={{\r\n          x: window.innerWidth/3,\r\n          y: window.innerHeight/3,\r\n          width: 320,\r\n          height: 200,\r\n        }}\r\n      > \r\n        \r\n        \r\n      </Rnd>\r\n    </div>\r\n     \r\n  //       <div\r\n  //       className={\"tg-pt-dialog-resizable-draggable\"}\r\n  //       style={{ top: 300, left: 300, position: \"fixed\" }}\r\n  //     >\r\n  //       <Rnd\r\n  //         enableResizing={{\r\n  //           bottomLeft: true,\r\n  //           bottomRight: true,\r\n  //           topLeft: true,\r\n  //           topRight: true\r\n  //         }}\r\n  //         bounds={\"body\"}\r\n  //         default={{\r\n  //           x: Math.max((windowWidth - 400) / 2, 0),\r\n  //           y: Math.max((windowHeight - 450) / 2, 0),\r\n  //           width: Math.min(400, windowWidth),\r\n  //           height: Math.min(450, windowHeight)\r\n  //         }}\r\n  //         dragHandleClassName={\".pt-dialog-header\"}\r\n  //         // {...RndProps}\r\n  //       >\r\n  \r\n  // <Dialog\r\n  //           iconName=\"projects\"\r\n  //           isOpen={appState.preferences.isScatterPlotDialogOpen}\r\n  //           onClose={() => {\r\n  //             appState.preferences.isScatterPlotDialogOpen = false;\r\n  //           }}\r\n  //           title={`Scatterplot`}\r\n  //           hasBackdrop={false} usePortal={false}\r\n            \r\n  //         >\r\n  //         </Dialog>\r\n          \r\n  //       </Rnd>\r\n  //     </div>\r\n      )\r\n    }}\r\n    \r\nexport default ResizableDraggableDialog;\r\n\r\n\r\n","import React from \"react\";\r\nimport { Button, Classes, RangeSlider } from \"@blueprintjs/core\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { Popover2, Select } from \"@blueprintjs/labs\";\r\nimport classnames from \"classnames\";\r\nimport { runInAction } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport pluralize from \"pluralize\";\r\nimport appState from \"../../stores\";\r\nimport { scales } from \"../../constants/index\";\r\nimport Collapsable from \"../utils/Collapsable\";\r\nimport SimpleSelect from \"../utils/SimpleSelect\";\r\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\r\n\r\n@observer\r\nclass GlobalPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      timeOutRef: null,\r\n      sizeOptionOpen: false,\r\n      colorOptionOpen: false,\r\n      shapeOptionOpen: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Collapsable Option: Color */}\r\n        <Collapsable\r\n          name=\"Color\"\r\n          isOpen={this.state.colorOptionOpen}\r\n          onToggle={() =>\r\n            this.setState({\r\n              colorOptionOpen: !this.state.colorOptionOpen\r\n            })\r\n          }\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            <div> \r\n                <p style={{display: \"inline\"}}>Color By: </p>\r\n                <span style={{float:\"right\"}}>\r\n                  <SimpleSelect  \r\n                    items={appState.graph.filterKeyList}\r\n                    onSelect={it => (appState.graph.nodes.colorBy = it)}\r\n                    value={appState.graph.nodes.colorBy}\r\n                  />\r\n                </span>\r\n              </div>\r\n            \r\n              <div style={{marginTop:\"10px\"}}> \r\n                <p style={{display: \"inline\"}}>Scale Type: </p>\r\n                <span style={{float:\"right\"}}>\r\n                  <SimpleSelect\r\n                    items={Object.keys(scales)}\r\n                    onSelect={it => (appState.graph.nodes.color.scale = it)}\r\n                    value={appState.graph.nodes.color.scale}\r\n                  />\r\n                </span>\r\n              </div>\r\n          \r\n            <div>\r\n              <div style={{marginTop:\"10px\"}}> \r\n                <p style={{display: \"inline\"}}>Gradient: &nbsp;</p>\r\n                <span style={{float:\"right\"}}>\r\n                    <Popover2\r\n                        placement=\"bottom\"\r\n                        modifiers={{\r\n                            preventOverflow: {\r\n                              enabled: false,\r\n                            },\r\n                          }}\r\n                    >\r\n                      <Button                  \r\n                        text=\"  \"\r\n                        style={{\r\n                          backgroundImage: \"inherit\",\r\n                          backgroundColor: appState.graph.nodes.color.from\r\n                        }}\r\n                      />\r\n                      <SketchPicker\r\n                        color={appState.graph.nodes.color.from}\r\n                        onChange={it => (appState.graph.nodes.color.from = it.hex)}\r\n                      />\r\n                    </Popover2>\r\n                    &nbsp; &#8594; &nbsp;\r\n                    <Popover2 \r\n                    placement=\"bottom\"\r\n                                modifiers={{\r\n                                    preventOverflow: {\r\n                                      enabled: false,\r\n                                    },\r\n                                  }}\r\n                                  >\r\n                    <Button\r\n                      text=\"  \"\r\n                      style={{\r\n                        backgroundImage: \"inherit\",\r\n                        backgroundColor: appState.graph.nodes.color.to\r\n                      }}\r\n                    />\r\n                    <SketchPicker\r\n                      color={appState.graph.nodes.color.to}\r\n                      onChange={it => (appState.graph.nodes.color.to = it.hex)}\r\n                    />\r\n                  </Popover2>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div style={{marginTop:\"-1em\"}}>\r\n              <svg width=\"100%\" height=\"10\" className=\"gradient-preview\">\r\n              <defs>\r\n                <linearGradient\r\n                  x1=\"0%\"\r\n                  y1=\"50%\"\r\n                  x2=\"100%\"\r\n                  y2=\"50%\"\r\n                  id=\"theGradient\"\r\n                >\r\n                  <stop\r\n                    stopColor={appState.graph.nodes.color.from}\r\n                    stopOpacity=\"1\"\r\n                    offset=\"0%\"\r\n                  />\r\n                  <stop\r\n                    stopColor={appState.graph.nodes.color.to}\r\n                    stopOpacity=\"1\"\r\n                    offset=\"100%\"\r\n                  />\r\n                </linearGradient>\r\n              </defs>\r\n              <rect\r\n                x=\"0\"\r\n                y=\"0\"\r\n                width=\"100%\"\r\n                height=\"50\"\r\n                fill=\"url(#theGradient)\"\r\n              />\r\n            </svg>\r\n            </div>\r\n          </div>\r\n        </Collapsable>\r\n        \r\n        {/* Collapsable Option: Size */}\r\n        <Collapsable\r\n          name=\"Size\"\r\n          isOpen={this.state.sizeOptionOpen}\r\n          onToggle={() =>\r\n            this.setState({\r\n              sizeOptionOpen: !this.state.sizeOptionOpen\r\n            })\r\n          }\r\n        >\r\n         \r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            <div> \r\n                <p style={{display: \"inline\"}}>Scale By:</p>\r\n                <span style={{float:\"right\"}}>\r\n                  <SimpleSelect\r\n                    items={appState.graph.filterKeyList}\r\n                    // itemRenderer={CommonItemRenderer}\r\n                    // filterable={false}\r\n                    onItemSelect={it => (appState.graph.nodes.sizeBy = it)}\r\n                    value={appState.graph.nodes.sizeBy}\r\n                    />\r\n                </span>\r\n              \r\n            </div>\r\n            <div style={{marginTop:\"10px\"}}> \r\n                <p style={{display: \"inline\"}}>Scale Type:</p>\r\n                <span style={{float:\"right\"}}>\r\n                  <SimpleSelect\r\n                  items={Object.keys(scales)}\r\n                  itemRenderer={CommonItemRenderer}\r\n                  filterable={false}\r\n                  onItemSelect={it => (appState.graph.nodes.size.scale = it)}\r\n                  value={appState.graph.nodes.size.scale}\r\n                  />\r\n                </span>\r\n            </div>\r\n         \r\n            <div style={{marginTop:\"10px\"}}> \r\n              <p style={{display: \"inline\"}}>Size Range:</p>\r\n            <br />\r\n            <RangeSlider\r\n              min={1}\r\n              max={20}\r\n              stepSize={0.1}\r\n              labelStepSize={5}\r\n              onChange={([a, b]) => {\r\n                runInAction(\"update scale\", () => {\r\n                  appState.graph.nodes.size.min = a;\r\n                  appState.graph.nodes.size.max = b;\r\n                });\r\n              }}\r\n              value={[\r\n                appState.graph.nodes.size.min,\r\n                appState.graph.nodes.size.max\r\n              ]}\r\n            />\r\n            </div>\r\n              <div style = {{height:\"15px\"}}>\r\n\r\n              </div>\r\n\r\n          </div>\r\n        </Collapsable>\r\n        \r\n        {/* Collapsable Option: Shape */}\r\n        <Collapsable\r\n          name=\"Shape\"\r\n          isOpen={this.state.shapeOptionOpen}\r\n          onToggle={() =>\r\n            this.setState({\r\n              shapeOptionOpen: !this.state.shapeOptionOpen\r\n            })\r\n          }\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n          <div>\r\n          <p style={{display: \"inline\"}}>Node Shape:</p>\r\n          <span style={{float:\"right\"}}>\r\n            <Select\r\n                items={[\r\n                  \"circle\",\r\n                  \"square\",\r\n                  \"triangle\",\r\n                  \"pentagon\",\r\n                  \"hexagon\",\r\n                  \"octagon\"\r\n                ]}\r\n                itemRenderer={CommonItemRenderer}\r\n                filterable={false}\r\n                onItemSelect={it => (appState.graph.nodes.shape = it)}\r\n              >\r\n                <Button  text={appState.graph.nodes.shape} />\r\n              </Select>\r\n              </span>\r\n            </div>        \r\n          </div>\r\n        </Collapsable>\r\n        <br/>\r\n        <text style={{fontSize: \"12px\"}}>\r\n          \r\n          {pluralize(\"node\", appState.graph.overrides.size, true)}<span> </span>\r\n          have override styles.  &nbsp;  \r\n          <Button className={\"pt-small\"} text=\"Clear\" onClick={() => (appState.graph.overrides = new Map())} />\r\n        </text>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalPanel;","import React from \"react\";\r\nimport { Classes, Collapse, Switch } from \"@blueprintjs/core\";\r\n\r\nexport default ({ name, isOpen, onToggle, children }) => (\r\n  <div>\r\n    <Switch\r\n      label={name}\r\n      checked={isOpen}\r\n      onChange={onToggle}\r\n      className={Classes.ALIGN_RIGHT}\r\n    />\r\n    <Collapse isOpen={isOpen}>{children}</Collapse>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Button, Classes, Slider } from \"@blueprintjs/core\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { Popover2, Select } from \"@blueprintjs/labs\";\r\nimport classnames from \"classnames\";\r\nimport { runInAction } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport appState from \"../../stores\";\r\nimport SwitchCollapsable from \"../utils/SwitchCollapsable\";\r\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\r\nimport Collapsable from \"../utils/Collapsable\";\r\n\r\n@observer\r\nclass SelectionPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shapeOptionOpen: false,\r\n      sizeOptionOpen: false,\r\n      colorOptionOpen: false,\r\n      labelOptionOpen: false\r\n    };\r\n  }\r\n\r\n  twoLayerUpdate = (nodeId, key, value) => {\r\n    if (!appState.graph.overrides.has(nodeId)) {\r\n      appState.graph.overrides.set(nodeId, new Map());\r\n    }\r\n    const nodeAttrs = appState.graph.overrides.get(nodeId);\r\n    if (value !== null) {\r\n      nodeAttrs.set(key, value);\r\n    } else {\r\n      nodeAttrs.delete(key);\r\n      if (nodeAttrs.size === 0) {\r\n        appState.graph.overrides.delete(nodeId);\r\n      }\r\n    }\r\n  };\r\n\r\n  batchTwoLayerUpdate = (nodes, key, value) => {\r\n    runInAction(\"update entire selection\", () => {\r\n      nodes.forEach(n => this.twoLayerUpdate(n.data.ref.id, key, value));\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br/>\r\n        <SwitchCollapsable\r\n          name=\"Override Size\"\r\n          isOpen={this.state.sizeOptionOpen}\r\n          onToggle={() => {\r\n            if (this.state.sizeOptionOpen) {\r\n              this.setState(\r\n                {\r\n                  sizeOptionOpen: false\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"size\",\r\n                    null\r\n                  )\r\n              );\r\n            } else {\r\n              this.setState(\r\n                {\r\n                  sizeOptionOpen: true\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"size\",\r\n                    appState.graph.overrideConfig.size\r\n                  )\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            <Slider\r\n              min={1}\r\n              max={20}\r\n              stepSize={0.1}\r\n              labelStepSize={5}\r\n              onChange={it => {\r\n                appState.graph.overrideConfig.size = it;\r\n                this.batchTwoLayerUpdate(\r\n                  appState.graph.selectedNodes,\r\n                  \"size\",\r\n                  it\r\n                );\r\n              }}\r\n              value={appState.graph.overrideConfig.size}\r\n            />\r\n          </div>\r\n        </SwitchCollapsable>\r\n        <br/>\r\n        <SwitchCollapsable\r\n          name=\"Override Color\"\r\n          isOpen={this.state.colorOptionOpen}\r\n          onToggle={() => {\r\n            if (this.state.colorOptionOpen) {\r\n              this.setState(\r\n                {\r\n                  colorOptionOpen: false\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"color\",\r\n                    null\r\n                  )\r\n              );\r\n            } else {\r\n              this.setState(\r\n                {\r\n                  colorOptionOpen: true\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"color\",\r\n                    appState.graph.overrideConfig.color\r\n                  )\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            <div>\r\n              <p style={{display: \"inline\"}}>Choose Color:</p>\r\n              <span style={{float:\"right\"}}>\r\n            <Popover2\r\n              placement=\"bottom\"\r\n              modifiers={{\r\n                preventOverflow: {\r\n                  enabled: false,\r\n                },\r\n              }}>\r\n              <Button\r\n                text=\"  \"\r\n                style={{\r\n                  backgroundImage: \"inherit\",\r\n                  backgroundColor: appState.graph.overrideConfig.color\r\n                }}\r\n              />\r\n              <SketchPicker\r\n                color={appState.graph.overrideConfig.color}\r\n                onChange={it => {\r\n                  appState.graph.overrideConfig.color = it.hex;\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"color\",\r\n                    it.hex\r\n                  );\r\n                }}\r\n              />\r\n            </Popover2>\r\n            </span>\r\n            </div>\r\n          </div>\r\n        </SwitchCollapsable>\r\n        <br/>\r\n        <Collapsable\r\n                    name=\"Color By Distance\"\r\n                    isOpen={this.state.colorByDistance}\r\n                    onToggle={() =>\r\n                        this.setState({\r\n                          colorByDistance: !this.state.colorByDistance\r\n                        })\r\n                    }\r\n                    >\r\n                    <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n                        <section>\r\n                            <p>Node Color by Distance: </p>\r\n                            <span>\r\n                            <label class=\".pt-large\">\r\n                            <input \r\n                                 type=\"checkbox\"\r\n                                 onChange={it => {\r\n                                     console.log(appState.graph.colorByDistance);\r\n                                     appState.graph.colorByDistance = !appState.graph.colorByDistance;\r\n                                 }\r\n                                 }\r\n                               />\r\n                            </label>\r\n                            </span>\r\n                        </section>\r\n                    </div>\r\n                </Collapsable>\r\n                <br />\r\n        <SwitchCollapsable\r\n          name=\"Override Label\"\r\n          isOpen={this.state.labelOptionOpen}\r\n          onToggle={() => {\r\n            if (this.state.labelOptionOpen) {\r\n              this.setState(\r\n                {\r\n                  labelOptionOpen: false\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"label\",\r\n                    null\r\n                  )\r\n              );\r\n            } else {\r\n              this.setState(\r\n                {\r\n                  labelOptionOpen: true\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"label\",\r\n                    appState.graph.overrideConfig.label\r\n                  )\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            <p style={{display: \"inline\"}}>Custom Label:</p>\r\n            <input\r\n              value={appState.graph.overrideConfig.label}\r\n              onChange={it => {\r\n                appState.graph.overrideConfig.label = it.target.value;\r\n                this.batchTwoLayerUpdate(\r\n                  appState.graph.selectedNodes,\r\n                  \"label\",\r\n                  it.target.value\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n        </SwitchCollapsable>\r\n        <br/>\r\n        <SwitchCollapsable\r\n          name=\"Override Shape\"\r\n          isOpen={this.state.shapeOptionOpen}\r\n          onToggle={() => {\r\n            if (this.state.shapeOptionOpen) {\r\n              this.setState(\r\n                {\r\n                  shapeOptionOpen: false\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"shape\",\r\n                    null\r\n                  )\r\n              );\r\n            } else {\r\n              this.setState(\r\n                {\r\n                  shapeOptionOpen: true\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"shape\",\r\n                    appState.graph.overrideConfig.shape\r\n                  )\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            <div> \r\n              <p style={{display: \"inline\"}}>Node Shape:</p>\r\n              <span style={{float:\"right\"}}>\r\n                <Select\r\n                items={[\r\n                  \"circle\",\r\n                  \"square\",\r\n                  \"triangle\",\r\n                  \"pentagon\",\r\n                  \"hexagon\",\r\n                  \"octagon\"\r\n                ]}\r\n                itemRenderer={CommonItemRenderer}\r\n                filterable={false}\r\n                onItemSelect={it => {\r\n                  appState.graph.overrideConfig.shape = it;\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"shape\",\r\n                    it\r\n                  );\r\n                }}\r\n              >\r\n                <Button text={appState.graph.overrideConfig.shape} />\r\n              </Select>\r\n              </span>        \r\n            </div>\r\n          </div>\r\n        </SwitchCollapsable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectionPanel;","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport pluralize from \"pluralize\";\r\nimport appState from \"../../stores\";\r\nimport GlobalPanel from \"./GlobalPanel\";\r\nimport SelectionPanel from \"./SelectionPanel\";\r\n\r\n@observer\r\nclass NodesPanel extends React.Component {\r\n  getRenderedNodes = () => {\r\n    if (appState.graph.selectedNodes.length === 0) {\r\n      return (\r\n        <div>\r\n          <text style={{fontSize:\"12px\"}}>Modifying All Nodes</text>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <p>{`Modifying ${pluralize(\r\n        \"Node\",\r\n        appState.graph.selectedNodes.length,\r\n        true\r\n      )}`}</p>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.getRenderedNodes()}\r\n        {appState.graph.selectedNodes.length === 0 ? (\r\n          <GlobalPanel />\r\n        ) : (\r\n          <SelectionPanel />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NodesPanel;","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport appState from \"../../stores\";\r\nimport { Button, Checkbox, Classes, RangeSlider } from \"@blueprintjs/core\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { Popover2, Select } from \"@blueprintjs/labs\";\r\nimport classnames from \"classnames\";\r\nimport Collapsable from \"../utils/Collapsable\";\r\nimport SimpleSelect from \"../utils/SimpleSelect\";\r\nimport mouse from \"../../graph-frontend/src/select\";\r\n\r\n@observer\r\nclass EdgesPanel extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          timeOutRef: null,\r\n        //   sizeOptionOpen: false,\r\n          colorOptionOpen:false,\r\n          directionOptionOpen:false,\r\n        //   colorOptionOpen:false,\r\n          thicknessOptionOpen: false,\r\n        };\r\n      }\r\n\r\n    render() {\r\n        let graph = appState.graph.graph;\r\n        return (\r\n            <div>\r\n                <text style={{fontSize:\"12px\"}}>{`Modifying All Edges`}</text>\r\n\r\n\r\n                {/* Collapsable Option: Color */}\r\n                <Collapsable\r\n                    name=\"Color\"\r\n                    isOpen={this.state.colorOptionOpen}\r\n                    onToggle={() =>\r\n                        this.setState({\r\n                        colorOptionOpen: !this.state.colorOptionOpen\r\n                        })\r\n                    }\r\n                    >\r\n                    <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n                        <div> \r\n                            <p style={{display: \"inline\"}}>Select Edge Color: </p>\r\n                            <span style={{float:\"right\"}}>\r\n                                <Popover2 \r\n                                placement=\"bottom\"\r\n                                modifiers={{\r\n                                    preventOverflow: {\r\n                                      enabled: false,\r\n                                    },\r\n                                  }}>\r\n                                    <Button\r\n                                    text=\"  \"\r\n                                    style={{\r\n                                        backgroundImage: \"inherit\",\r\n                                        backgroundColor: appState.graph.edges.color\r\n                                    }}\r\n                                    />\r\n                                    <SketchPicker\r\n                                    color={appState.graph.edges.color}\r\n                                    onChange={(it) => {\r\n                                        appState.graph.process.graph.forEachNode(n => {\r\n                                             \r\n                                             let red = new THREE.Color(appState.graph.edges.color).r;\r\n                                             let blue = new THREE.Color(appState.graph.edges.color).g;\r\n                                             let green = new THREE.Color(appState.graph.edges.color).b;\r\n                                             n.renderData.linecolor.r = red;\r\n                                             n.renderData.linecolor.g = blue;\r\n                                             n.renderData.linecolor.b = green;\r\n                                           });\r\n                                        (appState.graph.edges.color = it.hex);\r\n                                        /**update edge color in real time*/\r\n                                        appState.graph.process.onHover(); \r\n                                    }}\r\n                                    />\r\n                                </Popover2>\r\n                            </span>\r\n                            </div>\r\n                        \r\n                    </div>\r\n                </Collapsable>\r\n            \r\n                {/* <Collapsable\r\n                    name=\"Direction\"\r\n                    isOpen={this.state.directionOptionOpen}\r\n                    onToggle={() =>\r\n                        this.setState({\r\n                        directionOptionOpen: !this.state.directionOptionOpen\r\n                        })\r\n                    }\r\n                    >\r\n                    <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n                        <div> \r\n                            <p style={{display: \"inline\"}}>Show Edge Direction: </p>\r\n                            <span style={{float:\"right\"}}>\r\n                            <label class=\".pt-large\">\r\n                            <input \r\n                                 type=\"checkbox\"\r\n                                 onChange={it => {\r\n                                     console.log(appState.graph.directedOrNot);\r\n                                     appState.graph.directedOrNot = !appState.graph.directedOrNot;\r\n                                 }\r\n                                 }\r\n                               />\r\n                            </label>\r\n                            </span>\r\n                            </div>\r\n                        \r\n                    </div>\r\n                </Collapsable> */}\r\n{/* \r\n                <div>\r\n                     <section style = {{marginTop: \"15px\"}}>\r\n                         <p style={{display: \"inline\"}}>Show Edge Direction: </p>\r\n                         <div style={{display: \"inline\", float: \"right\"}}>\r\n                               <input \r\n                                 type=\"checkbox\"\r\n                                 onChange={it => {\r\n                                     console.log(appState.graph.directedOrNot);\r\n                                     appState.graph.directedOrNot = !appState.graph.directedOrNot;\r\n                                 }\r\n                                 }\r\n                               />\r\n                         </div>\r\n                     </section>\r\n                 </div> */}\r\n\r\n                {/* <Collapsable\r\n                    name=\"Thickness\"\r\n                    isOpen={this.state.thicknessOptionOpen}\r\n                    onToggle={() =>\r\n                        this.setState({\r\n                            thicknessOptionOpen: !this.state.thicknessOptionOpen\r\n                        })\r\n                    }\r\n                    >\r\n                    <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n                        <section>\r\n                            <p>Edge Thickness by distance: </p>\r\n                            <span style={{float:\"right\"}}>\r\n                            <label class=\".pt-large\">\r\n                            <input \r\n                                 type=\"checkbox\"\r\n                                 onChange={it => {\r\n                                     console.log(appState.graph.edgeThicknessByDistance);\r\n                                     appState.graph.edgeThicknessByDistance = !appState.graph.edgeThicknessByDistance;\r\n                                 }\r\n                                 }\r\n                               />\r\n                            </label>\r\n                            </span>\r\n                        </section>\r\n                    </div>\r\n                </Collapsable> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EdgesPanel;","import React from \"react\";\r\nimport { Button, Classes, Slider } from \"@blueprintjs/core\";\r\nimport { Select } from \"@blueprintjs/labs\";\r\nimport { observer } from \"mobx-react\";\r\nimport appState from \"../../stores\";\r\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\r\n\r\n@observer\r\nclass LabelsPanel extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span style={{display: \"inline-block\"}}>\r\n        <Button\r\n          style={{\r\n            // width:\"100px\",\r\n            display:\"inline\"}}\r\n          id=\"showAll\"\r\n          iconName=\"eye-on\"\r\n          className={Classes.FILL}\r\n          onClick={() => appState.graph.frame.showAllLabels()}\r\n        >\r\n          Show All\r\n        </Button>\r\n        <Button\r\n          style={{display:\"none\"}}\r\n          id=\"hideAll\"\r\n          iconName=\"eye-off\"\r\n          className={Classes.FILL}\r\n          onClick={() => appState.graph.frame.hideAllLabels()}\r\n        >\r\n          Hide All\r\n        </Button>\r\n        \r\n        <Button\r\n          style={{\r\n            // width:\"140px\"\r\n            // marginLeft:\"10px\"\r\n          }}\r\n          id=\"hideSelected\"\r\n          iconName=\"eye-off\"\r\n          className={Classes.FILL}\r\n          onClick={() => appState.graph.frame.hideSelectedLabels()}\r\n        >\r\n          Hide Selected\r\n        </Button>\r\n        <Button\r\n          style={{width:\"140px\",marginLeft:\"10px\",display:\"none\"}}\r\n          id=\"showSelected\"\r\n          iconName=\"eye-on\"\r\n          className={Classes.FILL}\r\n          onClick={() => appState.graph.frame.showSelectedLabels()}\r\n        >\r\n          Show Selected\r\n        </Button>\r\n        </span>\r\n        <div style={{height: '20px'}} />\r\n        <text className=\"option-font\">Label Size</text>\r\n        <Slider\r\n        style ={{left:\"10%\", width:\"80%\"}}\r\n          min={0.1}\r\n          max={1}\r\n          stepSize={0.1}\r\n          labelStepSize={0.5}\r\n          onChange={value => {\r\n            appState.graph.nodes.labelSize = value;\r\n          }}\r\n          value={appState.graph.nodes.labelSize}\r\n        />\r\n        <div style={{height: '20px'}} />\r\n        <text className=\"option-font\">Label Length</text>\r\n        <Slider\r\n        style ={{left:\"10%\", width:\"80%\"}}\r\n          min={1}\r\n          max={32}\r\n          \r\n          stepSize={0.1}\r\n          labelStepSize={10}\r\n          onChange={value => {\r\n            appState.graph.nodes.labelLength = value;\r\n          }}\r\n          value={appState.graph.nodes.labelLength}\r\n        />\r\n        <div style={{height: '20px'}} />\r\n        <text className=\"option-font\">Label By</text>\r\n        <Select\r\n          items={appState.graph.filterKeyList}\r\n          itemRenderer={CommonItemRenderer}\r\n          filterable={false}\r\n          onItemSelect={it => (appState.graph.nodes.labelBy = it)}\r\n        >\r\n          <Button text={appState.graph.nodes.labelBy} />\r\n        </Select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LabelsPanel;","import React from \"react\";\r\nimport { Button, Classes ,Intent, TagProps} from \"@blueprintjs/core\";\r\nimport { MultiSelect } from \"@blueprintjs/labs\";\r\nimport CommonItemRenderer from \"./CommonItemRenderer\";\r\n\r\nexport default ({ items, onSelect, value, fill = false , tag,tagprops }) => {\r\n\r\nconst clearButton = <Button icon=\"cross\"  /> ;\r\n// this.state = {\r\n//   selecteditems : value\r\n// }\r\n\r\nreturn (\r\n\r\n  <MultiSelect\r\n  popoverProps={{\r\n    popoverClassName: \"filter-scroll\",\r\n   \r\n    targetTagName: 'div' \r\n  }}\r\n//  placeholder={'Search for a country'} \r\n  resetOnSelect={true}\r\n    items={items}\r\n    itemRenderer={CommonItemRenderer}\r\n    filterable={true}\r\n    onItemSelect={onSelect}\r\n    tagRenderer = {tag}\r\n    selectedItems = {value}\r\n    tagInputProps = {tagprops}\r\n    \r\n\r\n    // tagInputProps={{ tagProps: {intent: Intent.PRIMARY, interactive: true,values: value}}}\r\n    // tagInputProps={{\r\n    //   onRemove: {appState.graph.nodes.filter = {}},\r\n    //   rightElement: {appState.graph.nodes.filter ? <Button icon=\"cross\" minimal={true} onClick={this.handleClear} /> : undefined;},\r\n    //     values: value,\r\n    //     // rightElement: clearButton,\r\n    //     tagProps: (_value: React.ReactNode, index: number): TagProps => ({\r\n    //       intent: this.state.intent ? INTENTS[index % INTENTS.length] : Intent.NONE,\r\n    //       minimal: false,\r\n    //   }),\r\n    // }}\r\n  >\r\n    {/* <Button className={fill ? Classes.FILL : null} text={value} /> */}\r\n  </MultiSelect>\r\n\r\n)\r\n  \r\n  };\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport pluralize from \"pluralize\";\r\nimport appState from \"../../stores\";\r\nimport GlobalPanel from \"./GlobalPanel\";\r\nimport SelectionPanel from \"./SelectionPanel\";\r\nimport Collapsable from \"../utils/Collapsable\";\r\nimport { Button, Classes, RangeSlider } from \"@blueprintjs/core\";\r\nimport SimpleSelect from \"../utils/SimpleSelect\";\r\nimport MultiSelects from \"../utils/MultiSelects\";\r\nimport classnames from \"classnames\";\r\nimport uniq from \"lodash/uniq\";\r\nimport { runInAction } from \"mobx\";\r\n\r\n@observer\r\nclass NodesFilterPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n    appState.graph.filterKeyList.forEach(it => {\r\n      this.state[it + 'isOpen'] = false;\r\n      this.state[it + '_filterlist'] = []\r\n    });\r\n    // console.log(this.state)\r\n    // this.state = \r\n    // {\r\n    //   timeOutRef: null,\r\n    //   sizeOptionOpen: false,\r\n    //   colorOptionOpen: false,\r\n    //   shapeOptionOpen: false\r\n    // };\r\n  }\r\n\r\n  // getRenderedNodes = () => {\r\n  //   if (appState.graph.selectedNodes.length === 0) {\r\n  //     return (\r\n  //       <div>\r\n  //         <p>Modifying All Nodes</p>\r\n  //       </div>\r\n  //     );\r\n  //   }\r\n  //   return (\r\n  //     <p>{`Modifying ${pluralize(\r\n  //       \"Node\",\r\n  //       appState.graph.selectedNodes.length,\r\n  //       true\r\n  //     )}`}</p>\r\n  //   );\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {appState.graph.filterKeyList.map((it, i) => (\r\n          <Collapsable\r\n            name={it}\r\n            isOpen={this.state[it + 'isOpen']}\r\n            onToggle={() =>\r\n              this.setState({\r\n                [it + 'isOpen']: !this.state[it + 'isOpen']\r\n              })\r\n            }\r\n          >\r\n            <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n              { (it === 'community' || isNaN(appState.graph.rawGraph.nodes[0][it]) ) ?\r\n                <MultiSelects\r\n                  items={[...new Set(appState.graph.rawGraph.nodes.map(n => n[it]))]}\r\n                  onSelect={selectit => {\r\n\r\n                    this.setState({\r\n                      [it + '_filterlist']: this.state[it + '_filterlist'] ? [...this.state[it + '_filterlist'], selectit] : [selectit]\r\n                    })\r\n                    appState.graph.filter[it] ? appState.graph.filter[it].push(selectit) : appState.graph.filter[it] = [selectit]\r\n                    appState.graph.filterNodes()\r\n\r\n                    // console.log(this.state[it + '_filterlist'])\r\n                    // return selectit\r\n                    // console.log(appState.graph.filter[it][0])\r\n                  }}\r\n                  tag={selectit => { return selectit }}\r\n                  value={this.state[it + '_filterlist']}\r\n                  tagprops={{\r\n                    fill:true ,\r\n                    onRemove: selectit => {\r\n                      var self = this\r\n                      var deselectIndex0 = this.state[it + '_filterlist'].indexOf(selectit)\r\n                      if (deselectIndex0 > -1) {\r\n                        this.setState({\r\n                          [it + '_filterlist']:this.state[it + '_filterlist'].filter(item => item !== selectit)\r\n                          //  this.state[it + '_filterlist'].splice(deselectIndex0, 1)\r\n                        })\r\n                       \r\n                      }\r\n                      \r\n                      var deselectIndex1 = appState.graph.filter[it].indexOf(selectit)\r\n                      if (deselectIndex1 > -1) {\r\n                        appState.graph.filter[it] = appState.graph.filter[it].filter(item => item !== selectit)\r\n\r\n                        // appState.graph.filter[it].splice(deselectIndex1, 1)\r\n                        appState.graph.filterNodes()\r\n                      }\r\n\r\n\r\n                      console.log(this.state[it + '_filterlist'])\r\n                      // return selectit\r\n                      // console.log(appState.graph.filter[it][0])\r\n                    },\r\n                    // tagProps: getTagProps,\r\n                  }}\r\n                />\r\n                :\r\n                <RangeSlider\r\n                  min={Math.min(... appState.graph.rawGraph.nodes.map(n => n[it]))}   //uniqueValue[it][0] is computed min \r\n                  max={Math.max(... appState.graph.rawGraph.nodes.map(n => n[it]))} //uniqueValue[it][1] is computed max\r\n                  stepSize={0.01}\r\n                  labelStepSize={10}\r\n                  className=\"range-slider-container\"\r\n                  onChange={([a, b]) => {\r\n                    runInAction(\"update scale\", () => {\r\n                      this.setState({\r\n                        [it + '_filterlist']: {\r\n                          \"min\":a,\r\n                          \"max\":b\r\n                        }\r\n                      })\r\n                      appState.graph.filter[it] ={\r\n                        \"min\":a,\r\n                        \"max\":b\r\n                      }\r\n                    })\r\n                    \r\n                  }}\r\n                  onRelease={([a, b]) => {\r\n                  // console.log(Math.max(... appState.graph.rawGraph.nodes.map(n => n[it])));\r\n                  this.setState({\r\n                    [it + '_filterlist']: {\r\n                      \"min\":a,\r\n                      \"max\":b\r\n                    }\r\n                  })\r\n                  appState.graph.filter[it] ={\r\n                    \"min\":a,\r\n                    \"max\":b\r\n                  }\r\n                  appState.graph.filterNodes()\r\n                  \r\n                \r\n                 \r\n                }}\r\n                value={(appState.graph.filter[it] && appState.graph.filter[it][\"min\"])?\r\n                [\r\n                  appState.graph.filter[it][\"min\"],\r\n                  appState.graph.filter[it][\"max\"]\r\n                ]:\r\n              [\r\n                Math.min(... appState.graph.rawGraph.nodes.map(n => n[it])),\r\n                Math.max(... appState.graph.rawGraph.nodes.map(n => n[it]))\r\n\r\n              ]}\r\n                />\r\n\r\n              }\r\n            </div>\r\n\r\n          </Collapsable>\r\n\r\n\r\n        ))}\r\n\r\n\r\n\r\n        {/* <Collapsable\r\n          name=\"Color\"\r\n          isOpen={this.state.colorOptionOpen}\r\n          onToggle={() =>\r\n            this.setState({\r\n              colorOptionOpen: !this.state.colorOptionOpen\r\n            })\r\n          }\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            <div>\r\n              <p style={{ display: \"inline\" }}>Color By: </p>\r\n              <span style={{ float: \"right\" }}>\r\n                <SimpleSelect\r\n                  items={appState.graph.allPropertiesKeyList}\r\n                  onSelect={it => (appState.graph.nodes.colorBy = it)}\r\n                  value={appState.graph.nodes.colorBy}\r\n                />\r\n              </span>\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"10px\" }}>\r\n              <p style={{ display: \"inline\" }}>Scale Type: </p>\r\n              <span style={{ float: \"right\" }}>\r\n                <SimpleSelect\r\n                  items={Object.keys(scales)}\r\n                  onSelect={it => (appState.graph.nodes.color.scale = it)}\r\n                  value={appState.graph.nodes.color.scale}\r\n                />\r\n              </span>\r\n            </div>\r\n\r\n            <div>\r\n              <div style={{ marginTop: \"10px\" }}>\r\n                <p style={{ display: \"inline\" }}>Gradient: &nbsp;</p>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Popover2\r\n                    placement=\"bottom\"\r\n                    modifiers={{\r\n                      preventOverflow: {\r\n                        enabled: false,\r\n                      },\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      text=\"  \"\r\n                      style={{\r\n                        backgroundImage: \"inherit\",\r\n                        backgroundColor: appState.graph.nodes.color.from\r\n                      }}\r\n                    />\r\n                    <SketchPicker\r\n                      color={appState.graph.nodes.color.from}\r\n                      onChange={it => (appState.graph.nodes.color.from = it.hex)}\r\n                    />\r\n                  </Popover2>\r\n                  &nbsp; &#8594; &nbsp;\r\n                  <Popover2\r\n                    placement=\"bottom\"\r\n                    modifiers={{\r\n                      preventOverflow: {\r\n                        enabled: false,\r\n                      },\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      text=\"  \"\r\n                      style={{\r\n                        backgroundImage: \"inherit\",\r\n                        backgroundColor: appState.graph.nodes.color.to\r\n                      }}\r\n                    />\r\n                    <SketchPicker\r\n                      color={appState.graph.nodes.color.to}\r\n                      onChange={it => (appState.graph.nodes.color.to = it.hex)}\r\n                    />\r\n                  </Popover2>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div style={{ marginTop: \"-1em\" }}>\r\n              <svg width=\"100%\" height=\"10\" className=\"gradient-preview\">\r\n                <defs>\r\n                  <linearGradient\r\n                    x1=\"0%\"\r\n                    y1=\"50%\"\r\n                    x2=\"100%\"\r\n                    y2=\"50%\"\r\n                    id=\"theGradient\"\r\n                  >\r\n                    <stop\r\n                      stopColor={appState.graph.nodes.color.from}\r\n                      stopOpacity=\"1\"\r\n                      offset=\"0%\"\r\n                    />\r\n                    <stop\r\n                      stopColor={appState.graph.nodes.color.to}\r\n                      stopOpacity=\"1\"\r\n                      offset=\"100%\"\r\n                    />\r\n                  </linearGradient>\r\n                </defs>\r\n                <rect\r\n                  x=\"0\"\r\n                  y=\"0\"\r\n                  width=\"100%\"\r\n                  height=\"50\"\r\n                  fill=\"url(#theGradient)\"\r\n                />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </Collapsable> */}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NodesFilterPanel;","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  InputGroup,\r\n  Intent,\r\n  Position,\r\n  Tooltip,\r\n  Popover,\r\n  Menu,\r\n  MenuItem,\r\n  MenuDivider,\r\n  Navbar\r\n} from \"@blueprintjs/core\";\r\n\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport appState from \"../stores/index\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport argologo_dark from '../images/Snoman title.png';\r\nimport argologo_light from '../images/Snoman logo.png';\r\nimport { toaster } from '../notifications/client';\r\nimport { LOGO_URL, GITHUB_URL, SAMPLE_GRAPH_SNAPSHOTS } from '../constants';\r\n\r\n\r\n\r\nimport axios from 'axios'\r\nimport { observable, computed, action, runInAction } from \"mobx\";\r\n\r\nimport { Tab2, Tabs2, Tag } from \"@blueprintjs/core\";\r\nimport NodesPanel from \"./panels/NodesPanel\";\r\nimport EdgesPanel from \"./panels/EdgesPanel\";\r\nimport LabelsPanel from \"./panels/LabelsPanel\";\r\nimport NodesFilterPanel from \"./panels/NodesFilterPanel\";\r\n\r\n@observer\r\nclass RegularNavbar extends React.Component {\r\n  @observable modularity = undefined;\r\n  runcommunity = () => {\r\n    appState.graph.convexPolygons = []\r\n\r\n    var fromedgelist = appState.graph.rawGraph.edges.map((edge) => {\r\n      return edge.source_id\r\n    })\r\n    var toedgelist = appState.graph.rawGraph.edges.map((edge) => {\r\n      return edge.target_id\r\n    })\r\n    var querydict = {\r\n      \"type\": 'edgelist',\r\n      \"message\": {\r\n        'name': 'community'\r\n      },\r\n      \"fromedgelist\": fromedgelist,\r\n      \"toedgelist\": toedgelist\r\n    }\r\n    axios.post('https://snoman.herokuapp.com/flask/community', querydict).then(\r\n      (response) => {\r\n        var communityDict = response.data.message;\r\n        this.modularity = response.data.modularity;\r\n        appState.graph.rawGraph.nodes.forEach((node) => {\r\n          node.community = communityDict[node.id] ? communityDict[node.id] : -1\r\n        })\r\n        const nodesArr = appState.graph.rawGraph.nodes\r\n        const nodekeyList = Object.keys(nodesArr[1])\r\n        const nodePropertyTypes = {}\r\n        nodekeyList.forEach(function (k) {\r\n          nodePropertyTypes[k] = typeof (nodesArr[1][k])\r\n        })\r\n        const uniqueValue = {}\r\n        nodekeyList.forEach(function (k, i) {\r\n\r\n          if (nodePropertyTypes[k] == 'string') {\r\n            uniqueValue[k] = [...new Set(nodesArr.map(item => item[k]))]\r\n          } else {\r\n            const valuea = nodesArr.map(function (el) { return el[k]; })\r\n            const minv = Math.min(...valuea)\r\n            const maxv = Math.max(...valuea)\r\n            uniqueValue[k] = [minv, maxv]\r\n          }\r\n        })\r\n        appState.graph.metadata.uniqueValue = uniqueValue\r\n        appState.graph.metadata.nodeProperties = nodekeyList\r\n        appState.graph.metadata.nodePropertyTypes = nodePropertyTypes\r\n        appState.graph.nodes.colorBy = \"community\"\r\n        appState.graph.nodes.color.scale = \"Nominal Scale\"\r\n        // console.log(result);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  findcliques = () => {\r\n\r\n    var fromedgelist = appState.graph.rawGraph.edges.map((edge) => {\r\n      return edge.source_id\r\n    })\r\n    var toedgelist = appState.graph.rawGraph.edges.map((edge) => {\r\n      return edge.target_id\r\n    })\r\n    var querydict = {\r\n      \"type\": 'edgelist',\r\n      \"message\": {\r\n        'name': 'clique'\r\n      },\r\n      \"fromedgelist\": fromedgelist,\r\n      \"toedgelist\": toedgelist\r\n    }\r\n    axios.post('https://snoman.herokuapp.com/flask/Cliques', querydict).then(\r\n      (response) => {\r\n        var cliques = response.data.message;\r\n        console.log(cliques)\r\n        // appState.graph.rawGraph.nodes.forEach((node) => {\r\n        //     node.community = communityDict[node.id]\r\n        // })\r\n        // const nodesArr = appState.graph.rawGraph.nodes\r\n        // const nodekeyList = Object.keys(nodesArr[1])\r\n        // const nodePropertyTypes = {}\r\n        // nodekeyList.forEach(function (k) {\r\n        //     nodePropertyTypes[k] = typeof (nodesArr[1][k])\r\n        // })\r\n        // const uniqueValue = {}\r\n        // nodekeyList.forEach(function (k, i) {\r\n\r\n        //     if (nodePropertyTypes[k] == 'string') {\r\n        //         uniqueValue[k] = [...new Set(nodesArr.map(item => item[k]))]\r\n        //     } else {\r\n        //         const valuea = nodesArr.map(function (el) { return el[k]; })\r\n        //         const minv = Math.min(...valuea)\r\n        //         const maxv = Math.max(...valuea)\r\n        //         uniqueValue[k] = [minv, maxv]\r\n        //     }\r\n        // })\r\n        // appState.graph.metadata.uniqueValue = uniqueValue\r\n        // appState.graph.metadata.nodeProperties = nodekeyList\r\n        // appState.graph.metadata.nodePropertyTypes= nodePropertyTypes\r\n        // console.log(result);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  convexhull = (group) => {\r\n\r\n    var fromedgelist = appState.graph.rawGraph.edges.map((edge) => {\r\n      return edge.source_id\r\n    })\r\n    var toedgelist = appState.graph.rawGraph.edges.map((edge) => {\r\n      return edge.target_id\r\n    })\r\n    var querydict = {\r\n      \"type\": 'edgelist',\r\n      \"message\": {\r\n        'name': 'convex'\r\n      },\r\n      \"group\": group,\r\n      \"nodes\": appState.graph.rawGraph.nodes\r\n\r\n    }\r\n    axios.post('https://snoman.herokuapp.com/flask/convexhull', querydict).then(\r\n      (response) => {\r\n        var jsondata = JSON.parse(response.data)\r\n        var convexDict = jsondata.message;\r\n\r\n\r\n        appState.graph.rawGraph.nodes.forEach((node) => {\r\n          node.isconvex = convexDict[node.id]\r\n        })\r\n        const nodesArr = appState.graph.rawGraph.nodes\r\n        const nodekeyList = Object.keys(nodesArr[1])\r\n        const nodePropertyTypes = {}\r\n        nodekeyList.forEach(function (k) {\r\n          nodePropertyTypes[k] = typeof (nodesArr[1][k])\r\n        })\r\n        const uniqueValue = {}\r\n        nodekeyList.forEach(function (k, i) {\r\n\r\n          if (nodePropertyTypes[k] == 'string') {\r\n            uniqueValue[k] = [...new Set(nodesArr.map(item => item[k]))]\r\n          } else {\r\n            const valuea = nodesArr.map(function (el) { return el[k]; })\r\n            const minv = Math.min(...valuea)\r\n            const maxv = Math.max(...valuea)\r\n            uniqueValue[k] = [minv, maxv]\r\n          }\r\n        })\r\n        appState.graph.metadata.uniqueValue = uniqueValue\r\n        appState.graph.metadata.nodeProperties = nodekeyList\r\n        appState.graph.metadata.nodePropertyTypes = nodePropertyTypes\r\n\r\n\r\n        // const selectionNode = appState.graph.frame.getNodeList().filter(node =>\r\n        //     // console.log(node)\r\n        //     node.data.ref.isconvex\r\n\r\n        // )\r\n        // // highlight for the mapview \r\n        // appState.graph.convexNodes = selectionNode\r\n        appState.graph.convexPolygons = jsondata.multipolygon;\r\n        console.log(appState.graph.convexPolygons)\r\n        //highlight in the network view \r\n        // appState.graph.frame.graph.forEachNode(n => {  //fisrt dehighlight all the nodes  \r\n        //     appState.graph.frame.colorNodeOpacity(n, 0.2);\r\n\r\n        // });\r\n\r\n        // appState.graph.frame.lineIndices.forEach(function (link) {\r\n        //     link.linecolor.r = self.darkMode ? 0.25 : 0.89; //black/white\r\n        //     link.linecolor.g = self.darkMode ? 0.25 : 0.89;\r\n        //     link.linecolor.b = self.darkMode ? 0.25 : 0.89;\r\n        // })\r\n\r\n        // for (var i = 0; i < selectionNode.length; i++) {\r\n        //     appState.graph.frame.colorNodeOpacity(selectionNode[i], 1);\r\n        //   }\r\n\r\n\r\n\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  density_distance = (group) => {\r\n\r\n    // var fromedgelist = appState.graph.rawGraph.edges.map((edge) => {\r\n    //     return edge.source_id\r\n    // })\r\n    // var toedgelist = appState.graph.rawGraph.edges.map((edge) => {\r\n    //     return edge.target_id\r\n    // })\r\n    var querydict = {\r\n      \"type\": 'edgelist',\r\n      \"message\": {\r\n        'name': 'density_distance'\r\n      },\r\n      \"group\": group,\r\n      \"nodes\": appState.graph.rawGraph.nodes,\r\n      \"edges\": appState.graph.rawGraph.edges\r\n\r\n\r\n    }\r\n    axios.post('http://snoman.herokuapp.com/flask/densitydistance', querydict).then(\r\n      (response) => {\r\n        var jsondata = JSON.parse(response.data)\r\n        // var convexDict = jsondata.message;\r\n\r\n        appState.graph.metadata.nodeComputed.push('standard distance')\r\n        appState.graph.metadata.nodeComputed.push('network density')\r\n\r\n\r\n\r\n        appState.graph.densityDistance = jsondata.density_distance\r\n        appState.graph.scatterplot.y = 'standard distance'\r\n        appState.graph.scatterplot.x = 'network density'\r\n        appState.graph.groupby = group\r\n\r\n\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <nav className={classnames([Classes.NAVBAR], 'navbar-head')} style={{display:\"block\", height:\"5vh\"}}>\r\n        <div className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_LEFT])} style={{height:\"100%\"}}>\r\n          <a href={LOGO_URL} target=\"_blank\">\r\n            <img title=\"Snoman\" id=\"SNoMAN logo\"\r\n              src={appState.preferences.darkMode ? argologo_dark : argologo_light}\r\n              height=\"28px\"></img>\r\n          </a>\r\n          <span>SNoMaN</span>\r\n          <div className={classnames([Classes.NAVBAR_HEADING])} style={{height:\"100%\"}}></div>\r\n          {/* <a\r\n            href=\"https://poloclub.github.io/argo-graph/\"\r\n            target='_blank'\r\n            style={{\r\n              padding: '6px 10px 6px 10px',\r\n              backgroundColor: 'pink',\r\n              color: 'white',\r\n              borderRadius: '4px',\r\n              textDecoration: 'none'\r\n            }}\r\n          >\r\n            Learn more about Argo\r\n          </a> */}\r\n          <Popover\r\n            content={\r\n              <Menu>\r\n                <MenuItem text=\"Load Sample\" iconName=\"graph\">\r\n                  {\r\n                    SAMPLE_GRAPH_SNAPSHOTS.map((sample) => {\r\n                      const sampleSnapshotTitle = sample[0];\r\n                      const sampleSnapshotStrapiUuid = sample[1];\r\n\r\n                      return (\r\n                        <MenuItem\r\n                          style={{ width: \"300px\" }}\r\n                          key={sampleSnapshotTitle}\r\n                          iconName=\"graph\"\r\n                          text={sampleSnapshotTitle}\r\n                          onClick={() => {\r\n                            window.loadAndDisplaySnapshotFromStrapi(sampleSnapshotStrapiUuid);\r\n                          }}\r\n                        />\r\n                      );\r\n                    })\r\n                  }\r\n\r\n                </MenuItem>\r\n                <MenuDivider />\r\n                <MenuItem\r\n                  iconName=\"import\"\r\n                  text=\"Import from CSV...\"\r\n                  onClick={() => (appState.import.dialogOpen = true)}\r\n                />\r\n                <MenuItem\r\n                  iconName=\"import\"\r\n                  text=\"Import from GEXF...\"\r\n                  onClick={() => (appState.import.gexfDialogOpen = true)}\r\n                />\r\n                <MenuItem\r\n                  iconName=\"pt-icon-document-open\"\r\n                  text=\"Open Snapshot\"\r\n                  onClick={() => { appState.preferences.openSnapshotDialogOpen = true }}\r\n                />\r\n                <MenuDivider />\r\n                <MenuItem\r\n                  iconName=\"download\"\r\n                  text=\"Save Snapshot\"\r\n                  onClick={() => {\r\n                    appState.project.stringCopyOfSnapshot = appState.graph.saveImmediateStates();\r\n                    appState.project.isSaveSnapshotDialogOpen = true\r\n                  }}\r\n                />\r\n                <MenuItem\r\n                  iconName=\"pt-icon-document-share\"\r\n                  text=\"Publish and Share Snapshot\"\r\n                  onClick={() => { appState.preferences.shareDialogOpen = true }}\r\n                />\r\n              </Menu>\r\n            }\r\n            position={Position.BOTTOM}\r\n            style={{height:\"100%\"}}\r\n          >\r\n            <Button\r\n              className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n              style={{height:\"100%\"}}\r\n              iconName=\"document\"\r\n            >\r\n              File\r\n            </Button>\r\n          </Popover>\r\n          <Popover\r\n            content={\r\n              <Menu>\r\n                <MenuItem\r\n                  text=\"View Table\"\r\n                  iconName=\"pt-icon-database\"\r\n                  onClick={() => {\r\n                    appState.graph.frame.pauseLayout();\r\n                    appState.preferences.dataSheetDialogOpen = true;\r\n                    this.forceUpdate();\r\n                  }}\r\n                />\r\n                <MenuItem\r\n                  text=\"Statistics\"\r\n                  iconName=\"pt-icon-timeline-bar-chart\"\r\n                  onClick={() => { appState.preferences.statisticsDialogOpen = true }}\r\n                />\r\n                {/* <MenuItem text=\"Community Detection\" iconName=\"graph\">\r\n                  <MenuItem\r\n                    text=\"Convex Hull\"\r\n                    onClick={() => {\r\n                      appState.graph.showNodes(appState.graph.rawGraph.nodes.map(n => n.id));\r\n                    }}\r\n                  />\r\n                  <MenuItem\r\n                    text=\"Show only nodes with top 5 PageRank\"\r\n                    onClick={() => {\r\n                      appState.graph.hideNodes(appState.graph.rawGraph.nodes.map(n => n.id));\r\n                      const sortedNodeList = [...appState.graph.rawGraph.nodes];\r\n                      sortedNodeList.sort((n1, n2) => {\r\n                        if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\r\n                          return n2[\"pagerank\"] - n1[\"pagerank\"];\r\n                        }\r\n                        return 0;\r\n                      });\r\n                      const ids = [];\r\n                      for (let i = 0; i < 5 && i < sortedNodeList.length; i++) {\r\n                        ids.push(sortedNodeList[i].id);\r\n                      }\r\n                      appState.graph.showNodes(ids);\r\n                    }}\r\n                  />\r\n                  <MenuItem\r\n                    text=\"Show only nodes with top 5 Degree\"\r\n                    onClick={() => {\r\n                      appState.graph.hideNodes(appState.graph.rawGraph.nodes.map(n => n.id));\r\n                      const sortedNodeList = [...appState.graph.rawGraph.nodes];\r\n                      sortedNodeList.sort((n1, n2) => {\r\n                        if (n1[\"degree\"] && n2[\"degree\"]) {\r\n                          return n2[\"degree\"] - n1[\"degree\"];\r\n                        }\r\n                        return 0;\r\n                      });\r\n                      const ids = [];\r\n                      for (let i = 0; i < 5 && i < sortedNodeList.length; i++) {\r\n                        ids.push(sortedNodeList[i].id);\r\n                      }\r\n                      appState.graph.showNodes(ids);\r\n                    }}\r\n                  />\r\n                  <MenuItem\r\n                    text=\"Hide All Nodes\"\r\n                    onClick={() => {\r\n                      appState.graph.hideNodes(appState.graph.rawGraph.nodes.map(n => n.id));\r\n                    }}\r\n                  />\r\n                </MenuItem> */}\r\n              </Menu>\r\n            }\r\n            position={Position.BOTTOM}\r\n          >\r\n            <Button\r\n              className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n              iconName=\"pt-icon-wrench\"\r\n            >\r\n              View\r\n            </Button>\r\n          </Popover>\r\n        </div>\r\n        <div className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_LEFT]) } style={{height:\"100%\"}}>\r\n          <span className={Classes.NAVBAR_DIVIDER} style={{height:\"100%\"}}/>\r\n          {appState.graph.hasGraph && appState.graph.frame && (\r\n            <div style={{ display: \"inline\" }}>\r\n\r\n              {/** Smart Pause functionality: pauses graph when no interaction */}\r\n              {(() => {\r\n                let self = this;\r\n                setInterval(function () {\r\n                  let timeNow = Date.now();\r\n                  /**stops initial default active layout*/\r\n                  if (appState.graph.smartPause.defaultActive.isActive) {\r\n                    if (timeNow - appState.graph.smartPause.defaultActive.startTime > appState.graph.smartPause.defaultActive.duration\r\n                      || appState.graph.smartPause.interactingWithGraph) {\r\n                      appState.graph.smartPause.defaultActive.isActive = false;\r\n                    }\r\n                  } else {\r\n                    /**smart pausing*/\r\n                    if (!appState.graph.frame.paused &&\r\n                      !appState.graph.smartPause.interactingWithGraph) {\r\n                      appState.graph.frame.pauseLayout();\r\n                      appState.graph.frame.paused = true;\r\n                      appState.graph.smartPause.smartPaused = true;\r\n                      self.forceUpdate();\r\n                    }\r\n                    /**old code using lastUnpaused:*/\r\n                    /**\r\n                     * if(!appState.graph.frame.paused && \r\n                      appState.graph.smartPause.lastUnpaused && \r\n                      !appState.graph.smartPause.interactingWithGraph && timeNow - appState.graph.smartPause.lastUnpaused > 300){\r\n                        appState.graph.frame.pauseLayout();\r\n                        appState.graph.frame.paused = true;\r\n                        appState.graph.smartPause.smartPaused = true;\r\n                        self.forceUpdate();\r\n                    }\r\n                     */\r\n\r\n                    /**un-smart pausing*/\r\n                    if (appState.graph.smartPause.smartPaused && appState.graph.smartPause.interactingWithGraph) {\r\n                      appState.graph.frame.resumeLayout();\r\n                      appState.graph.frame.paused = false;\r\n                      appState.graph.smartPause.smartPaused = false;\r\n                      self.forceUpdate();\r\n                    }\r\n                  }\r\n                }, 10)\r\n              })()}\r\n\r\n{<Tooltip\r\n                content={(appState.graph.frame.paused) ? \"Resume Layout Algorithm\" : \"Pause Layout Algorithm\"}\r\n                position={Position.BOTTOM}\r\n              >\r\n                <Button\r\n                  className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n                  iconName={(!appState.graph.smartPause.smartPaused && appState.graph.frame.paused) ? \"play\" : \"pause\"}\r\n                  text={(!appState.graph.smartPause.smartPaused && appState.graph.frame.paused) ? \"Resume Force-Directed Layout\" : \"Pause Force-Directed Layout\"}\r\n                  onClick={() => {\r\n                    if (appState.graph.frame.paused && !appState.graph.smartPause.smartPaused) {\r\n                      /**graph is going from \"pause layout\" mode to \"resume layout\"*/\r\n\r\n                      /** graph runs for default duration when unpaused */\r\n                      appState.graph.runActiveLayout();\r\n\r\n                      appState.graph.frame.resumeLayout();\r\n                      this.forceUpdate();\r\n                      /**appState.graph.smartPause.lastUnpaused = Date.now(); //old code using lastUnpaused*/\r\n                    } else if (appState.graph.smartPause.smartPaused) {\r\n                      /**graph is going from smart paused \"resume layout\" mode to \"pause layout\" mode*/\r\n                      appState.graph.frame.paused = true;\r\n                      appState.graph.smartPause.smartPaused = false;\r\n                    } else {\r\n                      /**graph is going from in \"resume layout\" mode to \"pause layout\" mode*/\r\n                      appState.graph.frame.pauseLayout();\r\n                      this.forceUpdate();\r\n                    }\r\n                  }}\r\n                />\r\n              </Tooltip>\r\n              }\r\n            </div>\r\n          )}\r\n\r\n        </div>\r\n        <div\r\n          className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_RIGHT])} style={{height:\"100%\"}}\r\n        >\r\n          {/* <Button\r\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n            iconName=\"graph\"\r\n            onClick={() => {\r\n              appState.project.isRenameSnapshotDialogOpen = true;\r\n            }}\r\n          >\r\n            {appState.graph.metadata.snapshotName || \"Untitled Graph\"}\r\n          </Button> */}\r\n          <span className={Classes.NAVBAR_DIVIDER} />\r\n          {/* <Button\r\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n            iconName=\"cog\"\r\n            onClick={() => {\r\n              appState.preferences.dialogOpen = true;\r\n            }}\r\n          /> */}\r\n          <Button\r\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n            style={{height:\"100%\"}}\r\n            iconName=\"help\"\r\n            onClick={() => {\r\n              appState.preferences.helpDialogOpen = true;\r\n            }}\r\n          />\r\n          <Button\r\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n            style={{height:\"100%\"}}\r\n            iconName=\"minimize\"\r\n            onClick={() => {\r\n              appState.preferences.turnOnMinimalMode()\r\n            }}\r\n          />\r\n          <span className={Classes.NAVBAR_DIVIDER} style={{height:\"100%\"}}/>\r\n          <a\r\n            href={GITHUB_URL}\r\n            target='_blank'\r\n            style={{\r\n              color: appState.preferences.darkMode ? 'white' : 'black',\r\n              fontSize: '120%',\r\n              textDecoration: 'none'\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} />\r\n          </a>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\n@observer\r\nclass MinimalNavbar extends React.Component {\r\n  render() {\r\n    return appState.graph.frame && (\r\n      <div>\r\n        <div\r\n          className={classnames(\"minimal-navbar-left\")}\r\n          style={{\r\n            backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\r\n          }}\r\n        >\r\n          <Tooltip\r\n            content={(appState.graph.frame.paused) ? \"Resume Layout Algorithm\" : \"Pause Layout Algorithm\"}\r\n            position={Position.BOTTOM}\r\n          >\r\n             <div className=\"pt-button-group\">\r\n            <a\r\n              className={classnames(\"pt-button pt-icon-maximize\", (!appState.graph.smartPause.smartPaused && appState.graph.frame.paused) ? \"pt-icon-play\" : \"pt-icon-pause\")}\r\n              role=\"button\"\r\n              onClick={() => {\r\n                if (appState.graph.frame.paused && !appState.graph.smartPause.smartPaused) {\r\n                  /**graph is going from \"pause layout\" mode to \"resume layout\"*/\r\n\r\n                  /** graph runs for default duration when unpaused */\r\n                  appState.graph.runActiveLayout();\r\n\r\n                  appState.graph.frame.resumeLayout();\r\n                  this.forceUpdate();\r\n                  /**appState.graph.smartPause.lastUnpaused = Date.now(); //old code using lastUnpaused*/\r\n                } else if (appState.graph.smartPause.smartPaused) {\r\n                  /**graph is going from smart paused \"resume layout\" mode to \"pause layout\" mode*/\r\n                  appState.graph.frame.paused = true;\r\n                  appState.graph.smartPause.smartPaused = false;\r\n                } else {\r\n                  /**graph is going from in \"resume layout\" mode to \"pause layout\" mode*/\r\n                  appState.graph.frame.pauseLayout();\r\n                  this.forceUpdate();\r\n                }\r\n              }}\r\n            // onClick={() => {\r\n            //   if (appState.graph.frame.paused) {\r\n            //     appState.graph.frame.resumeLayout();\r\n            //     this.forceUpdate();\r\n            //   } else {\r\n            //     appState.graph.frame.pauseLayout();\r\n            //     this.forceUpdate();\r\n            //   }\r\n            // }}\r\n            />\r\n          </div>\r\n          </Tooltip>\r\n         \r\n        </div>\r\n        <div\r\n          className={classnames(\"minimal-navbar-right\")}\r\n          style={{\r\n            backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\r\n          }}\r\n        >\r\n          <div className=\"pt-button-group\">\r\n            <a className=\"pt-button pt-icon-maximize\"  role=\"button\" onClick={() => appState.preferences.turnOffMinimalMode()}></a>\r\n            <a className=\"pt-button pt-icon-help\"  role=\"button\" onClick={() => appState.preferences.helpDialogOpen = true}></a>\r\n            <a className=\"pt-button pt-icon-document-open\"  role=\"button\" href={window.location} target=\"_blank\"></a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n@observer\r\nclass NavbarSelector extends React.Component {\r\n  render() {\r\n    return appState.preferences.isNavbarInMinimalMode ? <MinimalNavbar /> : <RegularNavbar />;\r\n  }\r\n}\r\n\r\nexport default NavbarSelector;","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Card,\r\n  Classes,\r\n  Spinner,\r\n  NonIdealState,\r\n  FocusStyleManager\r\n} from \"@blueprintjs/core\";\r\nimport appState from \"../stores/index\";\r\nimport { requestOpenWorkspaceFolder } from \"../ipc/client\";\r\n\r\n// Argo-lite: In lite, home screen is replaced by a loading screen\r\n// since there will always be a default graph showing.\r\n@observer\r\nclass WorkspaceView extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"workspace\">\r\n        {/* <Card\r\n          interactive={true}\r\n          elevation={Card.ELEVATION_TWO}\r\n          onClick={() => {\r\n            appState.project.isNewProjectDialogOpen = true;\r\n          }}\r\n        >\r\n          <Icon iconName=\"plus\" /> Create New Project\r\n        </Card>\r\n        <Card\r\n          interactive={true}\r\n          elevation={Card.ELEVATION_TWO}\r\n          onClick={() => {\r\n            requestOpenWorkspaceFolder();\r\n          }}\r\n        >\r\n          <Icon iconName=\"cog\" /> Manage Workspace\r\n        </Card>\r\n        <hr />\r\n        <div className=\"argo-menu-list-header\">My Projects</div>\r\n        <div style={{ paddingBottom: '100px' }}>\r\n          {appState.project.isFetching ? (\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <Spinner />\r\n            </div>\r\n          ) : appState.project.projects.length > 0 ? (\r\n            appState.project.projects.map(project => {\r\n              return (\r\n                <div key={project.name}>\r\n                  <Card\r\n                    interactive={true}\r\n                    elevation={Card.ELEVATION_TWO}\r\n                    onClick={() => {\r\n                      appState.project.currentProject = project;\r\n                      appState.project.isProjectDetailDialogOpen = true;\r\n                    }}\r\n                  >\r\n                    <h5>{project.name}</h5>\r\n                    <p>Created: {project.createdDate || 'Unknown'}</p>\r\n                  </Card>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <div style={{ textAlign: \"center\" }}>\r\n              Workspace is empty. Start by creating a new project.\r\n            </div>\r\n          )}\r\n        </div> */}\r\n        <div style={{ textAlign: \"center\", height: \"100vh\" }}>\r\n          <Spinner />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkspaceView;","import React from \"react\";\r\nimport appState from \"../stores\";\r\nimport {Tag } from \"@blueprintjs/core\";\r\n\r\n\r\nexport default class ThreeJSVis extends React.Component {\r\n  componentDidMount() {\r\n    appState.graph.setUpFrame();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"graph-container\"\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          // flex: \"1\",\r\n          // border:'#C0C0C0',\r\n          // borderStyle:'solid',\r\n          // position: \"absolute\"\r\n        }}\r\n      >\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useMap } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport appState from '../stores';\r\n\r\nvar def = require(\"../graph-frontend/src/imports\").default;\r\n\r\n\r\nexport default function AreaSelect() {\r\n  const map = useMap();\r\n\r\n  useEffect(() => {\r\n    if (!map.selectArea) return;\r\n\r\n    map.selectArea.enable();\r\n\r\n    map.on(\"areaselectstart\", (e) => {\r\n        //empty selection \r\n        // appState.graph.frame.selection.forEach(function(node){\r\n        //   node.renderData.draw_object.children[0].material.color.set(\r\n        //     node.renderData.hcolor\r\n        //   )\r\n        //   node.renderData.draw_object.children[0].visible = false\r\n        // })\r\n        appState.graph.frame.selection = []\r\n        appState.graph.selectedNodes = []\r\n        appState.graph.edgeselection = []\r\n\r\n\r\n\r\n      });\r\n\r\n    map.on(\"areaselected\", (e) => {\r\n      console.log(e.bounds.toBBoxString()); // lon, lat, lon, lat\r\n      L.rectangle(e.bounds, { color: \"blue\", weight: 1 });\r\n      // const mapselection = []\r\n      // if(appState.graph.rawGraph.nodes[0].LatY !== undefined){\r\n      //   map.eachLayer((pointLayer) => { \r\n      //       if (pointLayer instanceof L.CircleMarker && e.bounds.contains(pointLayer.getLatLng())) {\r\n      //           mapselection.push(pointLayer.options.data)\r\n      //           pointLayer.options.data.renderData.draw_object.children[0].material.color.setHex(def.NODE_HIGHLIGHT);\r\n      //           pointLayer.options.data.renderData.draw_object.children[0].visible = true\r\n      //           appState.graph.frame.colorNodeOpacity(pointLayer.options.data,1)\r\n      //       }\r\n      //       // else if(pointLayer instanceof L.CircleMarker){\r\n      //       //   pointLayer.options.data.renderData.draw_object.children[0].material.color.setHex(pointLayer.options.data.renderData.hcolor);\r\n      //       //   pointLayer.options.data.renderData.draw_object.children[0].visible = false\r\n      //       //   appState.graph.frame.colorNodeOpacity(pointLayer.options.data,0.5)\r\n      //       // }\r\n      //     }\r\n      //       )\r\n      // }\r\n\r\n      // const northeast = e.bounds.getNorthEast()\r\n      // const southwest = e.bounds.getSouthWest()\r\n\r\n\r\n      const selectionNode = appState.graph.frame.getNodeList().filter(node =>( \r\n        e.bounds.contains(L.latLng(node.data.ref.LatY, node.data.ref.LonX)))\r\n      )\r\n      \r\n      // //highlight selected nodes \r\n      // if (appState.graph.selectedNodes.length > 0) {\r\n      //   if (appState.graph.selectedNodes.indexOf(node) == -1) {\r\n      //     return { fillColor: node.renderData.color , fillOpacity: 0.3, stroke: node.renderData.draw_object.children[0].material.color, zIndex:'auto' }\r\n      //   } else {\r\n  \r\n      //     return { fillColor: node.renderData.color , fillOpacity: 0.9, stroke: def.NODE_HIGHLIGHT, zIndex:'10000' }\r\n      //   }\r\n      // }\r\n      appState.graph.selectedNodes = []\r\n      appState.graph.selectedNodes = selectionNode\r\n      appState.graph.frame.selection = selectionNode\r\n      appState.graph.frame.updateSelectionOpacity()\r\n      \r\n      // console.log(appState.graph.selectedNodes)\r\n    });\r\n\r\n    \r\n\r\n    // You can restrict selection area like this:\r\n    const bounds = map.getBounds().pad(-0.25); // save current map bounds as restriction area\r\n    // check restricted area on start and move\r\n    map.selectArea.setValidate((layerPoint) => {\r\n      return bounds.contains(this._map.layerPointToLatLng(layerPoint));\r\n    });\r\n\r\n    // now switch it off\r\n    map.selectArea.setValidate();\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n","import React from \"react\";\r\nimport appState, { AppState } from \"../stores/index\";\r\n\r\nimport { useMap } from \"react-leaflet\";\r\n\r\nimport { FeatureGroup, Circle } from 'react-leaflet';\r\nimport { EditControl } from \"react-leaflet-draw\"\r\n\r\n\r\nclass ReactLeafletToolbar extends React.Component {\r\n    \r\n    onCreate(e) {\r\n        this.clearMap()\r\n        const selectionNode = appState.graph.frame.getNodeList().filter(node =>( \r\n            e.layer._bounds.contains(L.latLng(node.data.ref.LatY, node.data.ref.LonX)))\r\n        )\r\n        appState.graph.selectedNodes = selectionNode\r\n        appState.graph.frame.selection = selectionNode\r\n        appState.graph.frame.updateSelectionOpacity()\r\n        appState.useToolbartoSelect = true\r\n    }\r\n    clearMap() {\r\n        const map = useMap();\r\n        map.eachLayer(function (layer) {\r\n          map.removeLayer(layer);\r\n        });\r\n      }\r\n    render() {\r\n        return (\r\n            <FeatureGroup>\r\n            <EditControl\r\n            position='bottomleft'\r\n            onEdited={this._onEditPath}\r\n            onCreated={this.onCreate}\r\n            onDeleted={this._onDeleted}\r\n            draw={{\r\n                marker: false,\r\n                polygon: false,\r\n                circlemarker: false,\r\n                circle: false,\r\n                polyline: false\r\n            }}\r\n            edit={{\r\n                edit: false\r\n            }}\r\n            />\r\n            <Circle center={[51.51, -0.06]} radius={200} />\r\n            </FeatureGroup>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReactLeafletToolbar;","import { useEffect, useMemo  } from \"react\";\r\nimport { useMap,useMapEvents } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport {latLngBounds} from 'leaflet'\r\nimport appState from '../stores';\r\n\r\nexport function ZoomMap() {\r\n    const map = useMap();\r\n\r\n    const bounds = useMemo(() => {\r\n        if (appState.graph.frame.selection.length ==0) {\r\n          // if (appState.graph.frame.getNodeList() >0){\r\n            const nodeLoc = appState.graph.frame.getNodeList().map(function(node){\r\n              return [parseFloat(node.data.ref.LatY) , parseFloat(node.data.ref.LonX)]\r\n            })\r\n            const b = latLngBounds() // seemed to work without having to pass init arg\r\n            nodeLoc.forEach(coords => {\r\n                b.extend(coords)\r\n            })\r\n            map.fitBounds(b)\r\n          // }\r\n          return null;\r\n        }   //no selection \r\n        if (appState.graph.frame.selection.length ==1) return;  // only one node is selected \r\n\r\n        const nodeLoc = appState.graph.frame.selection.map(function(node){\r\n            return [parseFloat(node.data.ref.LatY) , parseFloat(node.data.ref.LonX)]\r\n        })\r\n        // console.log(nodeLoc)\r\n        const b = latLngBounds() // seemed to work without having to pass init arg\r\n        nodeLoc.forEach(coords => {\r\n            b.extend(coords)\r\n        })\r\n        map.fitBounds(b)\r\n    }, [appState.graph.frame.selection])\r\n\r\n    return null;\r\n}\r\n\r\n\r\nexport function MapClick() {\r\n    \r\n    const map = useMapEvents({\r\n      click(e) {\r\n          if (appState.useToolbartoSelect) {\r\n            appState.useToolbartoSelect = false\r\n          } else {\r\n            appState.graph.frame.selection = []\r\n        appState.graph.selectedNodes = []\r\n        appState.graph.edgeselection = []\r\n        appState.graph.mapClicked = null\r\n        // appState.graph.networkClicked = null\r\n        appState.graph.frame.updateSelectionOpacity()\r\n        \r\n          }\r\n        \r\n        \r\n      }\r\n    })\r\n    return null;\r\n  }\r\n\r\n\r\n  ","import React, {useEffect} from 'react'\r\nimport L from 'leaflet'\r\nimport 'leaflet-curve'\r\nimport { useLeafletContext } from '@react-leaflet/core'\r\n\r\nconst Curve = (props) => {\r\n    const context = useLeafletContext()\r\n    const {path, options} = props\r\n\r\n    useEffect(() => {\r\n        const curve = new L.Curve(path, options)\r\n        const container = context.layerContainer || context.map\r\n        container.addLayer(curve)\r\n\r\n        return () => {\r\n            container.removeLayer(curve)\r\n        }\r\n    })\r\n\r\n    return null\r\n\r\n}\r\n\r\nexport default Curve","import React from 'react';\r\n// import L from 'leaflet';\r\nimport { MapContainer, CircleMarker, TileLayer, Tooltip, Polyline, Polygon, Pane, LayersControl, GeoJSON, FeatureGroup, Circle } from \"react-leaflet\";\r\nimport { EditControl } from \"react-leaflet-draw\"\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport appState from '../stores';\r\nimport { observer } from 'mobx-react';\r\nimport { observable, computed, action, runInAction } from \"mobx\";\r\nimport \"leaflet-area-select\";\r\nimport AreaSelect from \"../components/AreaSelect\"\r\nimport ReactLeafletToolbar from \"../components/ReactLeafletToolbar\"\r\nimport { ZoomMap, MapClick } from \"../components/ZoomMap\"\r\nimport { useMap } from \"react-leaflet\";\r\nimport { Tag, Switch } from \"@blueprintjs/core\";\r\nimport * as turf from '@turf/turf'\r\nimport statejsonfile from \"../layerdata/us-state.json\"\r\nimport countyjsonfile from \"../layerdata/county_0_5m.json\"\r\nimport congressionjsonfile from \"../layerdata/congressional_5m.json\"\r\n\r\nimport \"../../node_modules/leaflet/dist/leaflet.css\"\r\nimport \"../../node_modules/leaflet-draw/dist/leaflet.draw.css\"\r\n\r\nimport Curve from \"../components/Curve\"\r\n\r\n// import { Button, Classes, Switch, Tag } from \"@blueprintjs/core\";\r\nvar def = require(\"../graph-frontend/src/imports\").default;\r\nvar d3 = def.d3;\r\n\r\n\r\n\r\n\r\n// import LocationFilter from \"../components/LocationFilter\"\r\n\r\n@observer\r\nclass MapView extends React.Component {\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    // this.stringified = JSON.stringify(statejsonfile);\r\n    //  this.statejson = JSON.parse(this.stringified);\r\n    //  this.statePolyPath = this.statejson.features.map(statedata =>{\r\n    //     statedata.geometry.coordinates[0]\r\n    // })\r\n    //  this.statePolygons = turf.polygon(this.statePolyPath);\r\n    // console.log(this.statePolygons)\r\n  }\r\n\r\n  // frameNode = []\r\n  // {\r\n\r\n  //   if (appState.graph.rawGraph.nodes[0].LatY !== undefined) {\r\n  //     frameNode = appState.graph.frame.getNodeIdList()\r\n  //   }\r\n\r\n\r\n  // }\r\n  // @observable neighborTosID = []\r\n  // @observable neighborFromsID = []\r\n\r\n\r\n\r\n  @computed\r\n  get neighborNodesID() {\r\n    const neighborIDs = []\r\n    // const neighborTosID = []\r\n    if (appState.graph.currentlyHovered) {\r\n      for (var j = 0; j < appState.graph.currentlyHovered.links.length; j++) {\r\n        neighborIDs.push(appState.graph.currentlyHovered.links[j].fromId);\r\n        neighborIDs.push(appState.graph.currentlyHovered.links[j].toId);\r\n      }\r\n    }\r\n\r\n    if (appState.graph.mapClicked) {\r\n      for (var j = 0; j < appState.graph.mapClicked.links.length; j++) {\r\n        neighborIDs.push(appState.graph.mapClicked.links[j].fromId);\r\n        neighborIDs.push(appState.graph.mapClicked.links[j].toId);\r\n      }\r\n    }\r\n    return neighborIDs\r\n  }\r\n\r\n  @computed\r\n  get nodesSelectedID() {\r\n    var edgesOfNodes = []\r\n\r\n    if (appState.graph.selectedNodes.length > 0) {\r\n      const filterNode = appState.graph.selectedNodes.filter((n) => n !== undefined)\r\n      edgesOfNodes = filterNode.map(function (node) {\r\n        return node.id\r\n      })\r\n    }\r\n    return edgesOfNodes\r\n  }\r\n\r\n  @computed\r\n  get edgeSelectionID() {\r\n    var edgeselectionID = []\r\n    // if (appState.graph.selectedNodes.length > 0) {\r\n\r\n      edgeselectionID = appState.graph.edgeselection.map(function (edge) {\r\n        return `${edge.source.id}👉 ${edge.target.id}`\r\n      })\r\n    // }\r\n    // console.log(edgeselectionID)\r\n    return edgeselectionID\r\n  }\r\n\r\n  // distance(fromlocLatY, fromlocLonX,tolocLatY,tolocLonX) {\r\n  //   const dx2 = Math.pow(fromlocLonX - tolocLonX, 2);\r\n  //   const dy2 = Math.pow(fromlocLatY - tolocLatY, 2);\r\n\r\n  //   return Math.sqrt(dx2 + dy2);\r\n  // }\r\n\r\n  // hypotenuse = Math.sqrt(1 + 1)\r\n\r\n  // segments= d3.scaleLinear()\r\n  //     .domain([0, this.hypotenuse])\r\n  //     .range([1, 10])\r\n\r\n\r\n  // generateSegments(nodes, links) {\r\n  //   // generate separate graph for edge bundling\r\n  //   // nodes: all nodes including control nodes\r\n  //   // links: all individual segments (source to target)\r\n  //   // paths: all segments combined into single path for drawing\r\n  //   let bundle = {nodes: [], links: [], paths: []};\r\n\r\n  //   // make existing nodes fixed\r\n  //   bundle.nodes = nodes.map(function(d, i) {\r\n  //     d.fx = d.LonX;\r\n  //     d.fy = d.LatY;\r\n  //     return d;\r\n  //   });\r\n\r\n  //   links.forEach(function(d, i) {\r\n  //     // calculate the distance between the source and target\r\n  //     let length = this.distance(d.data.fromlocLatY, d.data.fromlocLonX,d.data.tolocLatY,d.data.tolocLonX);\r\n\r\n  //     // calculate total number of inner nodes for this link\r\n  //     let total = Math.round(this.segments(length));\r\n\r\n  //     // create scales from source to target\r\n  //     let xscale = d3.scaleLinear()\r\n  //       .domain([0, total + 1]) // source, inner nodes, target\r\n  //       .range([d.data.fromlocLonX, d.data.tolocLonX]);\r\n\r\n  //     let yscale = d3.scaleLinear()\r\n  //       .domain([0, total + 1])\r\n  //       .range([d.data.fromlocLatY, d.data.tolocLatY]);\r\n\r\n  //     // initialize source node\r\n  //     let source = d.source;\r\n  //     let target = null;\r\n\r\n  //     // add all points to local path\r\n  //     let local = [source];\r\n\r\n  //     for (let j = 1; j <= total; j++) {\r\n  //       // calculate target node\r\n  //       target = {\r\n  //         x: xscale(j),\r\n  //         y: yscale(j)\r\n  //       };\r\n\r\n  //       local.push(target);\r\n  //       bundle.nodes.push(target);\r\n\r\n  //       bundle.links.push({\r\n  //         source: source,\r\n  //         target: target\r\n  //       });\r\n\r\n  //       source = target;\r\n  //     }\r\n\r\n  //     local.push(d.target);\r\n\r\n  //     // add last link to target node\r\n  //     bundle.links.push({\r\n  //       source: target,\r\n  //       target: d.target\r\n  //     });\r\n\r\n  //     bundle.paths.push(local);\r\n  //   });\r\n\r\n  //   return bundle;\r\n  // }\r\n\r\n\r\n\r\n  dec2hexString = (dec) => {\r\n    return '0x' + (dec + 0x10000).toString(16).substr(-4).toUpperCase();\r\n  }\r\n\r\n  onMouseOut = (e) => {\r\n    console.log('onMouseOut', e)\r\n  }\r\n\r\n\r\n\r\n\r\n  setEdgePathOption = (edge) => {\r\n    if (!appState.graph.mapEdgeShow) {\r\n      return { opacity: '0' }\r\n    }\r\n\r\n\r\n\r\n    if (appState.graph.edgeselection.length !== 0) {  // && appState.graph.selectedNodes.length !== 0\r\n      const tempedgelist = this.edgeSelectionID\r\n      if (tempedgelist.indexOf(edge.id) !== -1) {\r\n        return { color: appState.graph.edges.crossColor, weight: '1.1', opacity: '1' }\r\n\r\n      }\r\n      // else if (this.nodesSelectedID.indexOf(edge.fromId) !== -1 || this.nodesSelectedID.indexOf(edge.toId) !== -1) {\r\n      //   return { color: appState.graph.edges.color, weight: '1', opacity: '1' }\r\n      // } \r\n      else {\r\n        return { color: appState.graph.edges.color, weight: '0.01', opacity: '0' }\r\n      }\r\n\r\n\r\n    }\r\n\r\n    if (appState.graph.mapClicked) {\r\n      if (edge.fromId == appState.graph.mapClicked.id || edge.toId == appState.graph.mapClicked.id) {\r\n        return { color: appState.graph.edges.crossColor, weight: '1.1', opacity: '1' }\r\n      } else {\r\n        return { color: appState.graph.edges.color, weight: '0.01', opacity: '0' }\r\n      }\r\n    }\r\n\r\n\r\n    if (!appState.graph.currentlyHovered && appState.graph.selectedNodes.length == 0 && !appState.graph.mapClicked && !appState.graph.pathHovered) {\r\n      return { color: appState.graph.edges.color, weight: '1', opacity: '1' }\r\n\r\n      // { color: edge.data.withinFamily ? appState.graph.edges.color : appState.graph.edges.crossColor, weight: '1', opacity: '1' }\r\n    }\r\n\r\n    if (appState.graph.selectedNodes.length > 0) {\r\n      //highlight within selection edges , &&\r\n      if (this.nodesSelectedID.indexOf(edge.fromId) !== -1 && this.nodesSelectedID.indexOf(edge.toId) !== -1) {\r\n        return { color: appState.graph.edges.color, weight: '1.1', opacity: '1' }\r\n      } else {\r\n        return { color: appState.graph.edges.color, weight: '0.01', opacity: '0' }\r\n      }\r\n\r\n\r\n      //else if (this.nodesSelectedID.indexOf(edge.fromId) !== -1 || this.nodesSelectedID.indexOf(edge.toId) !== -1) {\r\n        // return { color: appState.graph.edges.color, weight: '1', opacity: '1' }\r\n      // } \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    if (appState.graph.currentlyHovered) {\r\n      if (edge.fromId == appState.graph.currentlyHovered.id || edge.toId == appState.graph.currentlyHovered.id) {\r\n        return { color: appState.graph.edges.crossColor, weight: '1.1', opacity: '1' }\r\n      } else {\r\n        return { color: appState.graph.edges.color, weight: '0.01', opacity: '0' }\r\n      }\r\n    }\r\n\r\n    if (appState.graph.pathHovered && appState.graph.pathHovered[\"pathnode\"].length > 0) {\r\n      const pathnode = appState.graph.pathHovered[\"pathnode\"]\r\n      for (let i = 0; i < pathnode.length - 1; i++) {\r\n        if ((edge.fromId == pathnode[i].id && edge.toId == pathnode[i + 1].id) || (edge.fromId == pathnode[i + 1].id && edge.toId == pathnode[i].id)) {\r\n          return { color: appState.graph.edges.crossColor, weight: '1.1', opacity: '1' }\r\n        }\r\n      }\r\n      return { color: appState.graph.edges.color, weight: '0.01', opacity: '0' }\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  setNodeCircle = (node) => {\r\n    if (appState.graph.frame && appState.graph.nodes.size.max) {\r\n      // appState.graph.frame.updateGraph(appState.graph.computedGraph);\r\n      return node.data.size\r\n    }\r\n  }\r\n\r\n  setNodePathOption = (node) => {\r\n\r\n    //the order of if condition matters, because of return first \r\n\r\n    // return {fillColor: node.renderData.color , fillOpacity: node.renderData.draw_object.material.opacity, stroke: node.renderData.draw_object.children[0].material.color}\r\n\r\n    // //no hover and selection \r\n\r\n    if(appState.graph.degreeselection.length>0){\r\n      if (appState.graph.degreeselection.indexOf(node) == -1) {\r\n        return { fillColor: node.renderData.color, fillOpacity: 0.1, stroke: false, zIndex: 'auto' }\r\n      } else {\r\n\r\n        return { fillColor: node.renderData.color, fillOpacity: 0.8, stroke: false, color: 'orange', zIndex: '10000' }\r\n      }\r\n    }\r\n\r\n    if(appState.graph.degreebrushed && appState.graph.degreeselection.length==0){\r\n      return { fillColor: node.renderData.color, fillOpacity: 0.1, stroke: false, zIndex: 'auto' }\r\n    }\r\n\r\n\r\n    if (appState.graph.convexNodes.length > 0) {\r\n      if (appState.graph.convexNodes.indexOf(node) == -1) {\r\n        return { fillColor: node.renderData.color, fillOpacity: 0.1, stroke: false, zIndex: 'auto' }\r\n      } else {\r\n\r\n        return { fillColor: node.renderData.color, fillOpacity: 0.8, stroke: false, color: 'orange', zIndex: '10000' }\r\n      }\r\n    }\r\n    if (!appState.graph.currentlyHovered && appState.graph.selectedNodes.length == 0 && !appState.graph.mapClicked && !appState.graph.pathHovered) {\r\n      return { fillColor: node.renderData.color, fillOpacity: 0.8, stroke: false, zIndex: 'auto' }\r\n    }\r\n\r\n\r\n    // //currently hovered node highlight \r\n    if (appState.graph.currentlyHovered) {\r\n      // currently node\r\n      if (node.id === appState.graph.currentlyHovered.id) {\r\n        return { fillColor: node.renderData.color, fillOpacity: 0.8, stroke: false, color: 'orange', zIndex: '10000' }\r\n      } else if (this.neighborNodesID.indexOf(node.id) !== -1) { // neighbors \r\n        return { fillColor: node.renderData.color, fillOpacity: 0.8, stroke: false, zIndex: '10000' }\r\n      } else { //others \r\n        return { fillColor: node.renderData.color, fillOpacity: 0.1, stroke: false, zIndex: 'auto' }\r\n      }\r\n    }\r\n\r\n    if (appState.graph.mapClicked) {\r\n      // currently node\r\n      if (node.id === appState.graph.mapClicked.id) {\r\n        return { fillColor: node.renderData.color, fillOpacity: 0.8, stroke: false, color: 'orange', zIndex: '10000' }\r\n      } else if (this.neighborNodesID.indexOf(node.id) !== -1) { // neighbors \r\n        return { fillColor: node.renderData.color, fillOpacity: 0.8, stroke: false, color: 'orange', zIndex: '10000' }\r\n      } else { //others \r\n        return { fillColor: node.renderData.color, fillOpacity: 0.1, stroke: false, zIndex: 'auto' }\r\n      }\r\n    }\r\n\r\n    //scatterplot path highlight \r\n    if (appState.graph.pathHovered && appState.graph.pathHovered[\"pathnode\"].length > 0) {\r\n      if (node.id == appState.graph.pathHovered[\"sourceid\"] || node.id == appState.graph.pathHovered[\"targetid\"]) {\r\n        return { fillColor: node.renderData.color, fillOpacity: 0.8, stroke: true, color: 'green', zIndex: '10000' }\r\n      }\r\n      else if (appState.graph.pathHovered[\"pathnode\"].indexOf(node) == -1) {\r\n        return { fillColor: node.renderData.color, fillOpacity: 0.1, stroke: false, zIndex: 'auto' }\r\n      } else {\r\n\r\n        return { fillColor: node.renderData.color, fillOpacity: 0.8, stroke: false, color: 'orange', zIndex: '10000' }\r\n      }\r\n    }\r\n\r\n\r\n\r\n    // select area highlight \r\n    if (appState.graph.selectedNodes.length > 0) {\r\n      const neighborIDs = appState.graph.selectedNeighborIDs\r\n      if (this.nodesSelectedID.indexOf(node.id) !== -1) {\r\n        return { fillColor: node.renderData.color, fillOpacity: 0.8, stroke: false, color: 'orange', zIndex: '10000' }\r\n\r\n      } else if(neighborIDs.indexOf(node.id) !== -1){\r\n        return { fillColor: node.renderData.color, fillOpacity: 0.1, stroke: false, color: 'orange', zIndex: '10000' }\r\n\r\n      }\r\n      else {\r\n        return { fillColor: node.renderData.color, fillOpacity: 0.03, stroke: false, zIndex: 'auto' }\r\n\r\n      }\r\n    }\r\n    else {\r\n      return { fillColor: node.renderData.color, fillOpacity: 0.8, stroke: false, color: 'orange', zIndex: '10000' }\r\n    }\r\n\r\n  }\r\n\r\n  setPolygonPath = (polygon, pi) => {\r\n    if (appState.graph.convexPolygonsShow && appState.graph.distanceDensityCurrentlyClicked.length > 0) {\r\n      if (appState.graph.distanceDensityCurrentlyClicked.includes(pi)) {\r\n        return { fillColor: appState.graph.nodeColorScale(pi), fillOpacity: 0.3, opacity: 0.8 }\r\n      }\r\n      else {\r\n        return { fillColor: appState.graph.nodeColorScale(pi), fillOpacity: 0, opacity: 0 }\r\n      }\r\n\r\n    }\r\n    if (appState.graph.convexPolygonsShow) {\r\n      return { fillColor: appState.graph.nodeColorScale(pi), fillOpacity: 0.3, opacity: 0.8 }\r\n    } else {\r\n      return { fillColor: appState.graph.nodeColorScale(pi), fillOpacity: 0, opacity: 0 }\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // setPathOption = (node) => {\r\n  //   if (appState.graph.frame.selection.length > 0) {\r\n  //     if (appState.graph.frame.selection.indexOf(node) == -1) {\r\n  //       return { fillColor: 'blue', fillOpacity: 0.5, stroke: false, zIndex:'auto' }\r\n  //     } else {\r\n\r\n  //       return { fillColor: 'red', fillOpacity: 1, stroke: false,zIndex: '10000' }\r\n  //     }\r\n  //   }\r\n  //   if (appState.graph.currentlyHovered && node.id === appState.graph.currentlyHovered.id) {\r\n  //     return { fillColor: 'red', fillOpacity: 1, stroke: false }\r\n  //   } else {\r\n  //     return { fillColor: 'blue', fillOpacity: 0.5, stroke: false }\r\n  //   }\r\n\r\n\r\n  // }\r\n  onCreate = (e) => {\r\n    console.log(e);\r\n  }\r\n  \r\n\r\n  render() {\r\n\r\n    \r\n\r\n    return <div id=\"map\"\r\n      style={{\r\n        width: \"45vw\",\r\n        height: \"100%\",\r\n        flex: \"1 1 50%\",\r\n        zIndex: \"10\",\r\n        // border:'#C0C0C0',\r\n        //   borderStyle:'solid',\r\n        // position: \"absolute\"\r\n      }}\r\n    >\r\n\r\n      <Tag className=\"map-tag\">Map</Tag>\r\n\r\n      <MapContainer\r\n        style={{ height: \"100%\", width: \"100%\" }}\r\n        zoom={4}\r\n        center={[37.5, -97.5]}\r\n      >\r\n        \r\n        <LayersControl position=\"topright\">\r\n          <LayersControl.BaseLayer name=\"OpenStreetMap\" checked=\"true\">\r\n            <TileLayer url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png?api_key=8f6a7e18-709d-4fe8-9dc9-fcce7bfa30d8\" />\r\n          </LayersControl.BaseLayer>\r\n          <LayersControl.BaseLayer name=\"DarkOpenStreetMap\">\r\n            <TileLayer url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\" />\r\n          </LayersControl.BaseLayer>\r\n          <LayersControl.BaseLayer name=\"Transport\">\r\n            <TileLayer url=\"'https://{s}.tile.thunderforest.com/transport/{z}/{x}/{y}.png?apikey=<3e517e9e5dff41bdbfe201c3b1d72e69>\" />\r\n          </LayersControl.BaseLayer>\r\n          <LayersControl.Overlay name=\"income\">\r\n            <TileLayer url=\"https://www.justicemap.org/tile/{size}/income/{z}/{x}/{y}.png\"\r\n              size={'county'} />\r\n\r\n          </LayersControl.Overlay>\r\n          <LayersControl.Overlay name=\"US state\">\r\n\r\n            <GeoJSON data={statejsonfile} />\r\n          </LayersControl.Overlay>\r\n\r\n          <LayersControl.Overlay name=\"US county\">\r\n\r\n            <GeoJSON data={countyjsonfile} />\r\n          </LayersControl.Overlay>\r\n\r\n          <LayersControl.Overlay name=\"US Congressional\">\r\n\r\n            <GeoJSON data={congressionjsonfile} />\r\n          </LayersControl.Overlay>\r\n        </LayersControl>\r\n        \r\n\r\n        {/* <ReactLeafletToolbar /> */}\r\n        \r\n        <AreaSelect />\r\n        <ZoomMap /> \r\n        <MapClick />\r\n\r\n\r\n        <Pane name=\"edgepane\" style={{ zIndex: 10000 }}>\r\n            {/* <Curve path={[\"M\", [50, 14], \"Q\", [53, 20], [49, 25]]}\r\n          options={{color:'red',fill:false}}\r\n            /> */}\r\n          {appState.graph.rawGraph.edges[0].fromlocLatY !== undefined && appState.graph.rawGraph.edges[0].fromlocLatY !== 360 &&\r\n\r\n            appState.graph.frame && appState.graph.frame.getEdgeList().map((edge, i) => {\r\n              // if (this.frameNode.indexOf(edge.source_id) !== -1 && this.frameNode.indexOf(edge.target_id) !== -1) {\r\n\r\n              var edgepositions = [[edge.data.fromlocLatY, edge.data.fromlocLonX], [edge.data.tolocLatY, edge.data.tolocLonX]]\r\n              return (\r\n                // <Polyline key={i} pathOptions={this.setEdgePathOption(edge)} positions={edgepositions}\r\n                //   data={edge}\r\n                // // eventHandlers={{\r\n                // //   click: (e) => {\r\n                // //     console.log(e.target.options.data)\r\n                // //   }}}\r\n                // />\r\n                <Curve path={[\"M\", edgepositions[0], \"T\", edgepositions[1]]}\r\n          options={this.setEdgePathOption(edge)}\r\n            />\r\n                \r\n                \r\n\r\n              );\r\n\r\n\r\n\r\n\r\n            })\r\n          }\r\n        </Pane>\r\n\r\n\r\n        {appState.graph.convexPolygons.map((polygon, i) => {\r\n          var community = polygon.community\r\n          var polygonlist = polygon.points.map((p) => {\r\n            return [p[0], p[1]]\r\n          })\r\n          // console.log(polygonlist)\r\n\r\n          return <Polygon pathOptions={this.setPolygonPath(polygon, community)} positions={polygonlist} />\r\n\r\n        })\r\n\r\n        }\r\n        {/* </Pane> */}\r\n\r\n\r\n\r\n\r\n        <Pane name=\"custom\" style={{ zIndex: 10000 }}>\r\n          {appState.graph.rawGraph.nodes[0].LatY !== undefined && appState.graph.rawGraph.nodes[0].LonX !== undefined &&\r\n            appState.graph.frame && appState.graph.frame.getNodeList().map((node, i) => {\r\n\r\n              return (\r\n                <CircleMarker\r\n                  key={node.id}\r\n                  center={[node.data.ref.LatY, node.data.ref.LonX]}\r\n                  radius={this.setNodeCircle(node) * 1.5}\r\n                  pathOptions={this.setNodePathOption(node)}\r\n\r\n\r\n                  data={node}\r\n                  eventHandlers={{\r\n                    click: (e) => {\r\n                      e.originalEvent.view.L.DomEvent.stopPropagation(e)\r\n                      if (!appState.graph.mapClicked) { //no clicked circle before \r\n                        const thenode = e.target.options.data\r\n                        appState.graph.mapClicked = thenode  //control map update \r\n                        // appState.graph.currentlyHovered = null\r\n                        // appState.graph.frame.highlightNode(thenode, true);   //control socio update \r\n                        // appState.graph.frame.highlightEdges(thenode, true);\r\n                        // appState.graph.frame.selection = appState.graph.frame.getNeighborNodesFromGraph(thenode);\r\n                        appState.graph.selectedNodes = appState.graph.frame.getNeighborNodesFromGraph(thenode);\r\n                        appState.graph.frame.highlightClickNode(thenode);\r\n                      } else {  // click again to unselect \r\n                        appState.graph.mapClicked = null\r\n                        appState.graph.frame.selection = []\r\n                        appState.graph.selectedNodes = []\r\n                        appState.graph.edgeselection = []\r\n                      }\r\n\r\n\r\n                    },\r\n                    mouseover: (e) => {\r\n                      //when selection or mapclick, then freeze, no hover event \r\n                      if (appState.graph.mapClicked || appState.graph.frame.selection.length !== 0) return;\r\n                      // var currentNode = e.target.options.data\r\n                      // appState.graph.selectedNodes = []\r\n                      // appState.graph.frame.selection = []\r\n\r\n\r\n                      appState.graph.currentlyHovered = e.target.options.data  // control map update \r\n                      // appState.graph.frame.highlightNode(e.target.options.data, true);   // control cosio update \r\n                      // appState.graph.frame.highlightEdges(e.target.options.data, true);\r\n                      const thenode = e.target.options.data\r\n                      // appState.graph.frame.selection = appState.graph.frame.getNeighborNodesFromGraph(thenode);\r\n                      // appState.graph.selectedNodes = appState.graph.frame.getNeighborNodesFromGraph(thenode);\r\n                      appState.graph.frame.highlightClickNode(thenode);\r\n                      // e.target.options.data.renderData.draw_object.children[0].material.color.setHex(def.NODE_HIGHLIGHT);\r\n                      // e.target.options.data.renderData.draw_object.children[0].visible = true\r\n\r\n                      // appState.graph.frame.lastHover = e.target.options.data\r\n                      // appState.graph.frame.highlightNode(e.target.options.data, true)\r\n                      // e.target.setStyle({fillOpacity: 1, fillColor:'red'})\r\n                      // console.log(e.target.options.data)\r\n                    },\r\n                    mouseout: (e) => {\r\n                      //when selection or mapclick, then freeze, no hover event \r\n                      if (appState.graph.mapClicked || appState.graph.frame.selection.length !== 0) return;\r\n\r\n                      appState.graph.frame.graph.forEachNode(function (n) {\r\n                        // if (n !== appState.graph.mapClicked) {\r\n                        appState.graph.frame.colorNodeOpacity(n, 1);\r\n\r\n                        appState.graph.frame.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\r\n                        // }\r\n                      }\r\n                      );\r\n                      appState.graph.frame.colorNodeEdge(null);\r\n                      appState.graph.currentlyHovered = null;\r\n\r\n\r\n                      // e.target.options.data.renderData.draw_object.children[0].material.color.set(\r\n                      //   e.target.options.data.renderData.hcolor\r\n                      // )\r\n                      // e.target.options.data.renderData.draw_object.children[0].visible = false\r\n\r\n                      // appState.graph.currentlyHovered = null\r\n                      // appState.graph.frame.highlightNode(e.target.options.data,false)\r\n                      // e.target.setStyle({ fillOpacity: 0.5, fillColor: 'blue' })\r\n\r\n                      // console.log('marker out', e)\r\n                    }\r\n                  }}\r\n                // onMouseOver = {this.onMouseOver}\r\n                // {(e) => {\r\n                //   // appState.graph.currentlyHovered = \r\n                //   e.target.setStyle({fillOpacity: 1, stroke: true, color:'black', weight:3})\r\n                // }}\r\n                // onMouseOut={this.onMouseOut}\r\n                // {(e) => e.target.setStyle({fillOpacity: 0.5,stroke: false })}\r\n                >\r\n                  {(appState.graph.frame && node.renderData.textHolder.children[0].element.override) ?\r\n                    <Tooltip\r\n                      width={node.renderData.textHolder.children[0].element.children[0].style.width}\r\n                      fontSize={node.renderData.textHolder.children[0].element.children[0].style.fontSize}\r\n                      className=\"maptooltip\" direction=\"right\" offset={[0, 0]} opacity={1} permanent>{node.renderData.label}</Tooltip> : <Tooltip className=\"maptooltip\" direction=\"right\" offset={[0, 0]} opacity={0} permanent>{node.renderData.label}</Tooltip>}\r\n\r\n                </CircleMarker>\r\n              );\r\n\r\n\r\n            })\r\n\r\n\r\n          }\r\n        </Pane>\r\n        <div>\r\n        <Switch style={{ position: 'fixed', top: '5vh', left: '97vw', zIndex: '1000' }}\r\n          defaultChecked={appState.graph.mapEdgeShow}\r\n          // checked={!node.isHidden}\r\n          onChange={(value) => {\r\n            appState.graph.mapEdgeShow = value.target.checked\r\n\r\n          }}\r\n        />\r\n        <span style={{ fontSize: '12px', position: 'fixed', top: '5vh', right: '4vw', zIndex: '1000' }}> Show Edges</span>\r\n\r\n\r\n        <Switch style={{ position: 'fixed', top: '8vh', left: '97vw', zIndex: '1000' }}\r\n          defaultChecked={appState.graph.convexPolygonsShow}\r\n          // checked={!node.isHidden}\r\n          onChange={(value) => {\r\n            appState.graph.convexPolygonsShow = value.target.checked\r\n\r\n          }}\r\n        />\r\n        <span style={{ fontSize: '12px', position: 'fixed', top: '8vh', right: '4vw', zIndex: '1000' }}> Show Community Convex Hull</span>\r\n\r\n        <Switch style={{ position: 'fixed', top: '11vh', left: '97vw', zIndex: '1000' }}\r\n          defaultChecked={appState.graph.autoZoom}\r\n          // checked={!node.isHidden}\r\n          onChange={(value) => {\r\n            appState.graph.autoZoom = value.target.checked\r\n\r\n          }}\r\n        />\r\n        <span style={{ fontSize: '12px', position: 'fixed', top: '11vh', right: '4vw', zIndex: '1000' }}> Automatic Zoom</span>\r\n        </div>\r\n        \r\n\r\n\r\n        {/* {(appState.graph.convexPolygonsShow && this.modularity) ? <Tag className=\"modularity-tag\" style={{ position: 'absolute', top: '55vh', left: '70vw', zIndex: '1000' }}>{\"Q value: \" + parseFloat(this.modularity).toFixed(3)}</Tag> : null} */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </MapContainer>\r\n      \r\n    </div>\r\n  }\r\n}\r\n\r\nexport default MapView;","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport uniq from \"lodash/uniq\";\r\nimport { Classes } from \"@blueprintjs/core\";\r\nimport appState from \"../../stores\";\r\nimport { observer } from \"mobx-react/index\";\r\n\r\n@observer\r\nclass NodeDetail extends React.Component {\r\n  render() {\r\n    // If input is number,\r\n    // currently format number between 0-1 (eg. pagerank)\r\n    // to show no more than 3 significant digits.\r\n    const formatLongFloat = (nodeAttributeValue) => {\r\n      const num = Number(nodeAttributeValue);\r\n      if (Number.isNaN(num) || num > 1 || num < 0) {\r\n        // Do not format just return original\r\n        return nodeAttributeValue;\r\n      }\r\n      // Format to no more than 3 significant digit.\r\n      return Number.parseFloat(num).toPrecision(3);\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className={classnames(\r\n          // 'overlay-card',\r\n          \"right-overlay-card\",\r\n          \"transparent-frame\"\r\n        )}\r\n      >\r\n        <div className={classnames(Classes.CARD, \"node-details-table\")}>\r\n          <table\r\n            className={classnames(Classes.TABLE, Classes.TABLE_STRIPED, \"node-details-table-content\")}\r\n            style={{\r\n              width: \"100%\",\r\n              padding: '0',\r\n              fontSize: \"12px\"\r\n            }}\r\n          >\r\n            \r\n            <thead>\r\n              <tr>\r\n                <th>Property</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {appState.graph.allPropertiesKeyList.map((it, i) => (\r\n                <tr key={`${it}-${i}`}>\r\n                  <td style={{ padding: '5px 10px' }}>{it}</td>\r\n                  <td style={{ padding: '5px 10px', whiteSpace: 'normal' }}>{formatLongFloat(this.props.node[it])}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NodeDetail;","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport uniq from \"lodash/uniq\";\r\n\r\nimport { Classes } from \"@blueprintjs/core\";\r\nimport appState from \"../../stores\";\r\nimport { observer } from \"mobx-react/index\";\r\nimport { observable, computed, action, runInAction } from \"mobx\";\r\nimport { Histogram, DensitySeries, BarSeries, withParentSize, XAxis, YAxis } from '@data-ui/histogram';\r\n// import  Histogram  from \"./Histogram\"\r\nimport SVGBrush from 'react-svg-brush';\r\n\r\nimport { min, max, scaleLinear, map, range, select } from \"d3\"\r\nimport { bin } from \"d3-array\"\r\nimport * as d3 from \"d3\"\r\nimport { filter, forEach } from \"lodash\";\r\n// import { min } from \"lodash\";\r\n\r\n\r\n@observer\r\nclass SelectionDetail extends React.Component {\r\n\r\n  // \r\n  margin = { top: 32, right: 30, bottom: 64, left: 40 }\r\n  // { top: 32, right: 32, bottom: 64, left: 64 }\r\n  containerDiv = document.querySelector(\"#graph-container\");\r\n  allwidth = this.containerDiv.offsetWidth / 2;\r\n  allheight = this.containerDiv.offsetHeight/ 2;\r\n  width = this.allwidth - this.margin.left - this.margin.right\r\n  height = this.allheight - this.margin.top - this.margin.bottom\r\n  brushmargin = this.margin\r\n  brushwidth = this.width\r\n  distBinData = []\r\n  degreeBinData = []\r\n  edgeSelection = []\r\n\r\n\r\n  SelectionDistanceFromLatLonIn = () => {\r\n    const selectNodes = appState.graph.selectedNodes;\r\n    const average = (array) => array.reduce((a, b) => a + b) / array.length;\r\n\r\n    if (appState.graph.mapClicked) {\r\n\r\n      const edgeSelection = appState.graph.mapClicked.linkObjs\r\n      if (!edgeSelection || edgeSelection.length == 0) return [null, []];\r\n      this.edgeSelection = edgeSelection\r\n      const edgeDistance = edgeSelection.map(e => {\r\n        if(e.edgeDist >0){\r\n          return e.edgeDist\r\n        }else {\r\n          return 0\r\n        }\r\n       \r\n      })\r\n      return [average(edgeDistance).toFixed(3), edgeDistance];\r\n\r\n    }\r\n\r\n    if (selectNodes.length > 1) {\r\n      //// calculate only the connected distance \r\n      const edgeSelection = appState.graph.frame.getEdgeWithinSelectionForDensity(appState.graph.selectedNodes)\r\n      if (edgeSelection.length == 0) return [null, []];\r\n      this.edgeSelection = edgeSelection\r\n      const edgeDistance = edgeSelection.map(e => {\r\n        if(e.edgeDist >0){\r\n          return e.edgeDist\r\n        }else {\r\n          return 0\r\n        }\r\n       \r\n      })\r\n      return [average(edgeDistance).toFixed(3), edgeDistance];\r\n\r\n      //// calculate average distance between all selected nodes \r\n      // const edgeDistance = []\r\n      // appState.graph.frame.lineIndices.forEach((edge)=>{\r\n      //   if (appState.graph.selectedNodes.includes(edge.source ) && appState.graph.selectedNodes.includes(edge.target ) ){\r\n      //     edgeDistance.push(edge.edgeDist)\r\n\r\n      //   }\r\n      // })\r\n      // if(edgeDistance.length>0){\r\n      //   return [average(edgeDistance).toFixed(3), edgeDistance];\r\n      // }else{\r\n      //   return  [null, []]\r\n      // }\r\n\r\n      // for (let i = 0; i < selectNodes.length; i++) {\r\n      //   for (let j = i + 1; j < selectNodes.length; j++) {\r\n      //     const lon1 = selectNodes[i].data.ref.LonX\r\n      //     const lat1 = selectNodes[i].data.ref.LatY\r\n      //     const lon2 = selectNodes[j].data.ref.LonX\r\n      //     const lat2 = selectNodes[j].data.ref.LatY\r\n      //     const edgeDist = appState.graph.frame.getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2)\r\n      //     edgeDistance.push(edgeDist)\r\n      //   }\r\n      // }\r\n\r\n\r\n\r\n    } else {   // when no node is selected, return the distribution of the whole network \r\n\r\n      let edgeSelection = []\r\n      appState.graph.frame.getNodeList().forEach(node => {\r\n        if(node.linkObjs && node.linkObjs.length>0){\r\n          edgeSelection.push(...node.linkObjs)\r\n        }\r\n        \r\n      })\r\n\r\n      if (edgeSelection.length > 0) {\r\n        let uniqEdgeSelection = uniq(edgeSelection)\r\n        this.edgeSelection = uniqEdgeSelection\r\n        if (uniqEdgeSelection.length > 0) {\r\n          let edgeDistance = uniqEdgeSelection.map(e=>{\r\n            if(e.edgeDist >0){\r\n              return e.edgeDist\r\n            }else {\r\n              return 0\r\n            }\r\n           \r\n          })\r\n          // console.log(edgeDistance)\r\n          return [average(edgeDistance).toFixed(3), edgeDistance];\r\n\r\n        } else {\r\n          return [null, []]\r\n        }\r\n\r\n      } else {\r\n        return [null, []]\r\n      }\r\n\r\n\r\n      // return null\r\n    }\r\n\r\n  }\r\n\r\n  SelectionDensity = () => {\r\n\r\n    // undirect graph\r\n\r\n    const edgeSelection = appState.graph.frame.getEdgeWithinSelectionForDensity(appState.graph.selectedNodes)\r\n    console.log(edgeSelection.length);\r\n    if (edgeSelection.length == 0) return 0;\r\n    // this.edgeSelection = [...edgeSelection]\r\n    const nodelength = appState.graph.selectedNodes.length;\r\n    const selectionDen = (edgeSelection.length / (nodelength * (nodelength - 1))) * 2;\r\n    return selectionDen.toFixed(3)\r\n\r\n\r\n  }\r\n  // margin = \r\n\r\n\r\n  onEdgeBrushStart = ({ target, type, selection, sourceEvent }) => {\r\n    // appState.graph.frame.selection = []\r\n    // appState.graph.selectedNodes = []\r\n    appState.graph.edgeselection = []\r\n\r\n  }\r\n  onEdgeBrush = ({ target, type, selection, sourceEvent }) => {\r\n\r\n  }\r\n  onEdgeBrushEnd = ({ target, type, selection, sourceEvent }) => {\r\n    const selectionRectID = []\r\n    const svgElement = select(this.edgesvg)\r\n    const rects = svgElement.selectAll(\".vx-bar\")\r\n    const brushBounds = {\r\n      x0: selection[0][0] - this.brushmargin.left,\r\n      x1: selection[1][0] - this.brushmargin.left,\r\n      y0: selection[0][1],\r\n      y1: selection[1][1],\r\n    }\r\n\r\n    rects.each(function (d, i) {\r\n      const rectx = parseFloat(select(this).attr(\"x\"))\r\n      // const recty = parseFloat(select(this).attr(\"y\"))\r\n      if (rectx >= brushBounds.x0 && rectx <= brushBounds.x1) {\r\n        selectionRectID.push(i)\r\n      }\r\n\r\n    })\r\n\r\n\r\n\r\n    // console.log(this.distBinData)\r\n    // console.log(selectionRectID)\r\n    // const filterDistBin = this.distBinData.filter((d, i) => i % 2 != 1)\r\n    const filterDistBin2 = this.distBinData.filter((d, i) => selectionRectID.indexOf(i) !== -1)\r\n    // console.log(this.distBinData)\r\n    const distbuffer_min = min(filterDistBin2.map((d) => d.mind))\r\n    const distbuffer_max = max(filterDistBin2.map((d) => d.maxd))\r\n    // console.log(this.edgeSelection)\r\n    const filteredge = this.edgeSelection.filter(edge => (edge.edgeDist >= distbuffer_min && edge.edgeDist <= distbuffer_max))\r\n\r\n\r\n    appState.graph.edgeselection = filteredge\r\n    // this.distBinData = []\r\n    // const selectionNode = appState.graph.frame.getNodeList().filter(node =>\r\n    //   // console.log(node)\r\n    //   selectionNodeID.includes(node.id)\r\n\r\n    // )\r\n    // appState.graph.frame.selection = selectionNode\r\n    // appState.graph.selectedNodes = selectionNode\r\n\r\n\r\n    // // console.log(selectionNode)\r\n    // appState.graph.frame.updateSelectionOpacity()\r\n    console.log(appState.graph.edgeselection)\r\n    // console.log(selection)\r\n    // console.log(selectionRectID)\r\n\r\n  }\r\n\r\n  renderEdgeBrush = () => (\r\n    <SVGBrush\r\n      // Defines the boundary of the brush.\r\n      // Strictly uses the format [[x0, y0], [x1, y1]] for both 1d and 2d brush.\r\n      // Note: d3 allows the format [x, y] for 1d brush.\r\n      extent={\r\n        [[this.margin.left, this.brushmargin.top], [this.allwidth - this.brushmargin.right, this.allheight - this.brushmargin.bottom]]\r\n      }\r\n      // Obtain mouse positions relative to the current svg during mouse events.\r\n      // By default, getEventMouse returns [event.clientX, event.clientY]\r\n      getEventMouse={event => {\r\n        const { clientX, clientY } = event;\r\n        const { left, top } = this.edgesvg.getBoundingClientRect();\r\n        // console.log([clientX - left, clientY - top])\r\n        if ((clientX - left) < 0) {\r\n          console.log(\"Here\");\r\n          return [0, clientY - top];\r\n        }\r\n        return [clientX - left, clientY - top];\r\n      }}\r\n      brushType=\"x\" // \"x\"\r\n      onBrushStart={this.onEdgeBrushStart}\r\n      onBrush={this.onEdgeBrush}\r\n      onBrushEnd={this.onEdgeBrushEnd}\r\n    />\r\n  )\r\n\r\n  onDegreeBrushStart = ({ target, type, selection, sourceEvent }) => {\r\n    // appState.graph.frame.selection = []\r\n    // appState.graph.selectedNodes = []\r\n    // appState.graph.filter['degree'] ={\r\n    //   \"min\":-1,\r\n    //   \"max\":Infinity\r\n    // }\r\n\r\n    // appState.graph.filterNodes()\r\n\r\n  }\r\n  onDegreeBrush = ({ target, type, selection, sourceEvent }) => {\r\n\r\n  }\r\n  onNoNodeDegreeBrushEnd = ({ target, type, selection, sourceEvent }) => {\r\n    const selectionRectID = []\r\n    const svgElement = select(this.degreesvg)\r\n    const rects = svgElement.selectAll(\".vx-bar\")\r\n    if (selection){\r\n      const brushBounds = {\r\n        x0: selection[0][0] - this.margin.left,\r\n        x1: selection[1][0] - this.margin.left,\r\n        y0: selection[0][1],\r\n        y1: selection[1][1],\r\n      }\r\n  \r\n      rects.each(function (d, i) {\r\n        const rectx = parseFloat(select(this).attr(\"x\"))\r\n        // const recty = parseFloat(select(this).attr(\"y\"))\r\n        if (rectx >= brushBounds.x0 && rectx <= brushBounds.x1) {\r\n          selectionRectID.push(i)\r\n        }\r\n  \r\n  \r\n      })\r\n  \r\n      \r\n    //  if(selectionRectID.length>0){\r\n      const filterdegreeBin2 = this.degreeBinData.filter((d, i) => selectionRectID.indexOf(i) !== -1)\r\n      const degreebuffer_min = min(filterdegreeBin2.map((d) => d.mind))\r\n      const degreebuffer_max = max(filterdegreeBin2.map((d) => d.maxd))\r\n      \r\n      const selectionNode = appState.graph.frame.getNodeList().filter(node =>( \r\n        node.data.ref.degree>=degreebuffer_min && node.data.ref.degree<=degreebuffer_max)\r\n      )\r\n\r\n      // when no node statisfy, should dehighlight \r\n      appState.graph.frame.degreehighlight = selectionNode\r\n      appState.graph.frame.updateDegreeHistOpacity()\r\n      appState.graph.degreeselection = selectionNode\r\n      appState.graph.degreebrushed = true\r\n    }else{       // click on brush should clear \r\n      appState.graph.frame.selection = []\r\n      appState.graph.frame.updateSelectionOpacity()\r\n      appState.graph.degreeselection = []\r\n      appState.graph.degreebrushed = false\r\n    }\r\n    \r\n    \r\n  \r\n\r\n  }\r\n\r\n  onSelectDegreeBrushEnd = ({ target, type, selection, sourceEvent }) => {\r\n    const selectionRectID = []\r\n    const svgElement = select(this.degreesvg)\r\n    const rects = svgElement.selectAll(\".vx-bar\")\r\n    if (selection){\r\n    const brushBounds = {\r\n      x0: selection[0][0] - this.margin.left,\r\n      x1: selection[1][0] - this.margin.left,\r\n      y0: selection[0][1],\r\n      y1: selection[1][1],\r\n    }\r\n\r\n    rects.each(function (d, i) {\r\n      const rectx = parseFloat(select(this).attr(\"x\"))\r\n      // const recty = parseFloat(select(this).attr(\"y\"))\r\n      if (rectx >= brushBounds.x0 && rectx <= brushBounds.x1) {\r\n        selectionRectID.push(i)\r\n      }\r\n\r\n\r\n    })\r\n\r\n    \r\n  //  if(selectionRectID.length>0){\r\n    const filterdegreeBin2 = this.degreeBinData.filter((d, i) => selectionRectID.indexOf(i) !== -1)\r\n    const degreebuffer_min = min(filterdegreeBin2.map((d) => d.mind))\r\n    const degreebuffer_max = max(filterdegreeBin2.map((d) => d.maxd))\r\n    \r\n    \r\n\r\n    const selectionNode = appState.graph.selectedNodes.filter(node =>( \r\n      node.data.ref.degree>=degreebuffer_min && node.data.ref.degree<=degreebuffer_max)\r\n    )\r\n    appState.graph.frame.degreehighlight = selectionNode\r\n      appState.graph.frame.updateDegreeHistOpacity()\r\n      appState.graph.degreeselection = selectionNode\r\n      appState.graph.degreebrushed = true\r\n  }\r\n    else{\r\n      \r\n      appState.graph.frame.selection = appState.graph.selectedNodes\r\n      appState.graph.frame.updateSelectionOpacity()\r\n      appState.graph.degreeselection = []\r\n      appState.graph.degreebrushed = false\r\n    }\r\n\r\n  }\r\n\r\n  renderNoNodeDegreeBrush = () => (\r\n    <SVGBrush\r\n      // Defines the boundary of the brush.\r\n      // Strictly uses the format [[x0, y0], [x1, y1]] for both 1d and 2d brush.\r\n      // Note: d3 allows the format [x, y] for 1d brush.\r\n      extent={\r\n        [[this.margin.left, this.brushmargin.top], [this.allwidth - this.brushmargin.right, this.allheight - this.brushmargin.bottom]]\r\n      }\r\n      // Obtain mouse positions relative to the current svg during mouse events.\r\n      // By default, getEventMouse returns [event.clientX, event.clientY]\r\n      getEventMouse={event => {\r\n        const { clientX, clientY } = event;\r\n        const { left, top } = this.degreesvg.getBoundingClientRect();\r\n        // console.log([clientX - left, clientY - top])\r\n        return [clientX - left, clientY - top];\r\n      }}\r\n      brushType=\"x\" // \"x\"\r\n      onBrushStart={this.onDegreeBrushStart}\r\n      onBrush={this.onDegreeBrush}\r\n      onBrushEnd={this.onNoNodeDegreeBrushEnd}\r\n    />\r\n  )\r\n\r\n  renderSelectDegreeBrush = () => (\r\n    <SVGBrush\r\n      // Defines the boundary of the brush.\r\n      // Strictly uses the format [[x0, y0], [x1, y1]] for both 1d and 2d brush.\r\n      // Note: d3 allows the format [x, y] for 1d brush.\r\n      extent={\r\n        [[this.margin.left, this.brushmargin.top], [this.allwidth - this.brushmargin.right, this.allheight - this.brushmargin.bottom]]\r\n      }\r\n      // Obtain mouse positions relative to the current svg during mouse events.\r\n      // By default, getEventMouse returns [event.clientX, event.clientY]\r\n      getEventMouse={event => {\r\n        const { clientX, clientY } = event;\r\n        const { left, top } = this.degreesvg.getBoundingClientRect();\r\n        // console.log([clientX - left, clientY - top])\r\n        return [clientX - left, clientY - top];\r\n      }}\r\n      brushType=\"x\" // \"x\"\r\n      onBrushStart={this.onDegreeBrushStart}\r\n      onBrush={this.onDegreeBrush}\r\n      onBrushEnd={this.onSelectDegreeBrushEnd}\r\n    />\r\n  )\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n\r\n    this.prevTick = \"\";\r\n    this.maxDegreeDict = {};\r\n    this.maxDegreeCount = 0;\r\n    this.maxDistanceCount= 0;\r\n\r\n    if (appState.graph.selectedNodes.length > 1 && this.SelectionDistanceFromLatLonIn() && this.SelectionDistanceFromLatLonIn()[0]) {\r\n      // self = this\r\n\r\n      // Array(100).fill().map(Math.random);\r\n\r\n\r\n\r\n\r\n\r\n      return (\r\n        <div\r\n          className={classnames(\r\n            // 'overlay-card',\r\n            // \"right-overlay-card\",\r\n            // \"transparent-frame\"\r\n          )}\r\n          style={{\r\n            // width: '40vw',\r\n            height: '40vh',\r\n            // border:'#C0C0C0',\r\n            // borderStyle:'solid',\r\n          }}\r\n        >\r\n          <div className={classnames(Classes.CARD, \"node-details-table\")}>\r\n            <table\r\n              className={classnames(Classes.TABLE, Classes.TABLE_STRIPED, \"node-details-table-content\")}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: '0',\r\n                fontSize: \"12px\"\r\n              }}\r\n            >\r\n\r\n              <thead>\r\n                {/* <tr>\r\n                  <th></th>\r\n                  <th></th>\r\n                 \r\n                </tr> */}\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td style={{ padding: '5px 10px' }}> {appState.graph.selectedNodes.length + ' nodes are selected'}</td>\r\n                  {/* <td style={{ padding: '5px 10px', whiteSpace: 'normal' }}>{formatLongFloat(this.props.node[it])}</td> */}\r\n                </tr>\r\n                <tr>\r\n                  <td style={{ padding: '5px 10px' }}> {'The average distance is ' + this.SelectionDistanceFromLatLonIn()[0] + ' km'}</td>\r\n                  {/* <td style={{ padding: '5px 10px', whiteSpace: 'normal' }}>{formatLongFloat(this.props.node[it])}</td> */}\r\n                </tr>\r\n                <tr>\r\n                  <td style={{ padding: '5px 10px' }}> {'The network density (undirected network) is ' + this.SelectionDensity()}</td>\r\n                  {/* <td style={{ padding: '5px 10px', whiteSpace: 'normal' }}>{formatLongFloat(this.props.node[it])}</td> */}\r\n                </tr>\r\n                {/* {appState.graph.allPropertiesKeyList.map((it, i) => (\r\n                  \r\n                ))} */}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div style={{ height: '100%' }}>\r\n              {/* <text className=\"distribution-title\" >Distance Distribution</text> */}\r\n              <svg\r\n                width={\"50%\"}\r\n                height={\"30vh\"}\r\n                // className=\"hist\"\r\n                id=\"edgesvg\"\r\n                ref={input => (this.edgesvg = input)}\r\n              // ref = {ref}\r\n              >\r\n                <text x=\"50%\" y=\"10%\" text-anchor=\"middle\" fontSize=\"12px\" fontSizeAdjust=\"inherit\">Distance Distribution</text>\r\n                <Histogram\r\n                  ariaLabel=\"distance_dis\"\r\n                  orientation=\"vertical\"\r\n                  label=\"Distance Distribution\"\r\n                  height={this.allheight}\r\n                  width={this.allwidth}\r\n                  cumulative={false}\r\n                  normalized={false}\r\n                  binCount={25}\r\n                  margin={this.margin}\r\n                  valueAccessor={(datum) => {\r\n\r\n                    return datum\r\n                  }}\r\n                  binType=\"numeric\"\r\n\r\n                >\r\n                  <BarSeries\r\n                    animated={false}\r\n                    rawData={this.SelectionDistanceFromLatLonIn()[1]}\r\n                    fill={(d, i) => {\r\n                      if (i === 0) {\r\n                        this.maxDistanceCount = 0;\r\n                        this.distBinData = []\r\n                      }\r\n                      if (d.data.length > this.maxDistanceCount) {\r\n                        this.maxDistanceCount = d.data.length;\r\n                      }\r\n                      if (d.data.length > 0) {\r\n                        this.distBinData.push({\r\n                          mind: min(d.data),\r\n                          maxd: max(d.data)\r\n                        })\r\n                      } else {\r\n                        this.distBinData.push({\r\n                          mind: Infinity,\r\n                          maxd: -1\r\n                        })\r\n                      }\r\n\r\n\r\n\r\n                      // console.log(this.distBinData)\r\n                      // console.log(i)\r\n                      // console.log(d)\r\n                      return \"#08519c\"\r\n                    }}\r\n                  />\r\n                  <XAxis numTicks={5} label=\"Edge Distance (km)\" fontSize=\"12px\" tickLabelProps={(d, i) => ({ angle: 45 })} />\r\n                  {this.SelectionDistanceFromLatLonIn()[1].length < 10 ?\r\n                    <YAxis label=\"Frequency\" fontSize=\"12px\" tickFormat={\r\n                      (tick, ti) => {\r\n                        console.log(tick, this.maxDistanceCount/2);\r\n                        if (parseInt(tick).toString() == this.prevTick) {\r\n                          return \"\";\r\n                        } \r\n                        else {\r\n                          this.prevTick = parseInt(tick).toString();\r\n                          return parseInt(tick).toString();\r\n                        }\r\n                          \r\n  \r\n                        // return parseInt(tick * this.SelectionDistanceFromLatLonIn()[1].length).toString() == \"0\" ? \"\" : parseInt(tick * this.SelectionDistanceFromLatLonIn()[1].length).toString()\r\n                      }} />\r\n                    :\r\n                    <YAxis label=\"Frequency\" fontSize=\"12px\" tickFormat={\r\n                      (tick, ti) => {\r\n                          return parseInt(tick).toString()\r\n  \r\n                        // return parseInt(tick * this.SelectionDistanceFromLatLonIn()[1].length).toString() == \"0\" ? \"\" : parseInt(tick * this.SelectionDistanceFromLatLonIn()[1].length).toString()\r\n                      }} />\r\n                  }\r\n                  \r\n\r\n\r\n                </Histogram>\r\n                {this.renderEdgeBrush()}\r\n              </svg>\r\n              <svg\r\n                width={\"50%\"}\r\n                height={\"30vh\"}\r\n                // className=\"hist\"\r\n                id=\"degreesvg\"\r\n                ref={input => (this.degreesvg = input)}\r\n              // ref = {ref}\r\n              >\r\n\r\n                <text x=\"50%\" y=\"10%\" text-anchor=\"middle\" fontSize=\"12px\" fontSizeAdjust=\"inherit\">Degree Distribution</text>\r\n                <Histogram\r\n                  ariaLabel=\"degree_dis\"\r\n                  orientation=\"vertical\"\r\n                  height={this.allheight}\r\n                  width={this.allwidth}\r\n                  margin={this.margin}\r\n                  cumulative={false}\r\n                  normalized={false}\r\n                  binCount={25}\r\n                  valueAccessor={(datum) => datum}\r\n                  binType=\"numeric\"\r\n                >\r\n                  <BarSeries\r\n                    fill={(d, i) => {\r\n                      if (i === 0) {\r\n                        this.maxDistanceCount = 0;\r\n                        this.degreeBinData = []\r\n                      }\r\n                      if (d.data.length > this.maxDistanceCount) {\r\n                        this.maxDistanceCount = d.data.length;\r\n                      }\r\n                      if (d.data.length > 0) {\r\n                        this.degreeBinData.push({\r\n                          mind: min(d.data),\r\n                          maxd: max(d.data)\r\n                        })\r\n                      } else {\r\n                        this.degreeBinData.push({\r\n                          mind: Infinity,\r\n                          maxd: -1\r\n                        })\r\n                      }\r\n\r\n\r\n\r\n                      // console.log(this.distBinData)\r\n                      // console.log(i)\r\n                      // console.log(d)\r\n                      return \"#08519c\"\r\n                    }}\r\n                    animated={false}\r\n                    rawData={appState.graph.selectedNodes.map((node, i) => {\r\n                      if (i == 0) {\r\n                        this.maxDegreeCount = 0;\r\n                      }\r\n                      if (node.data.ref.degree in this.maxDegreeDict) {\r\n                        this.maxDegreeDict[node.data.ref.degree] += 1;\r\n                        if (this.maxDegreeDict[node.data.ref.degree] > this.maxDegreeCount) {\r\n                          this.maxDegreeCount = this.maxDegreeDict[node.data.ref.degree]\r\n                        }\r\n                      } else {\r\n                        this.maxDegreeDict[node.data.ref.degree] = 1;\r\n                        if (this.maxDegreeDict[node.data.ref.degree] > this.maxDegreeCount) {\r\n                          this.maxDegreeCount = this.maxDegreeDict[node.data.ref.degree]\r\n                        }\r\n                      }\r\n                      console.log(this.maxDegreeCount, node.data.ref.degree);\r\n                      if(node.data.ref.degree>0){\r\n                        return node.data.ref.degree\r\n                      }else{\r\n                        return 0\r\n                      }\r\n                    })}\r\n                  />\r\n                  <XAxis numTicks={5} label=\"Degree\" fontSize=\"12px\" tickLabelProps={(d, i) => ({ angle: 45 })} />\r\n                  {this.SelectionDistanceFromLatLonIn()[1].length < 10 ?\r\n                    <YAxis label=\"Frequency\" fontSize=\"12px\" tickFormat={\r\n                      (tick, ti) => {\r\n                        console.log(tick, this.prevTick);\r\n                        if (parseInt(tick).toString() == this.prevTick) {\r\n                          return \"\";\r\n                        } \r\n                        else {\r\n                          this.prevTick = parseInt(tick).toString();\r\n                          return parseInt(tick).toString();\r\n                        }\r\n                          \r\n  \r\n                        // return parseInt(tick * this.SelectionDistanceFromLatLonIn()[1].length).toString() == \"0\" ? \"\" : parseInt(tick * this.SelectionDistanceFromLatLonIn()[1].length).toString()\r\n                      }} />\r\n                    :\r\n                    <YAxis label=\"Frequency\" fontSize=\"12px\" tickFormat={\r\n                      (tick, ti) => {\r\n                          // console.log(tick);\r\n                          if (parseInt(tick).toString() == this.prevTick) {\r\n                            return \"\";\r\n                          } \r\n                          else {\r\n                            this.prevTick = parseInt(tick).toString();\r\n                            return parseInt(tick).toString();\r\n                          }\r\n  \r\n                        // return parseInt(tick * this.SelectionDistanceFromLatLonIn()[1].length).toString() == \"0\" ? \"\" : parseInt(tick * this.SelectionDistanceFromLatLonIn()[1].length).toString()\r\n                      }} />\r\n                  }\r\n                </Histogram>\r\n                {this.renderSelectDegreeBrush()}\r\n              </svg>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      );\r\n    }else if( this.SelectionDistanceFromLatLonIn() && this.SelectionDistanceFromLatLonIn()[0]) {  // when no node is selected, show the result of the whole network \r\n      return <div\r\n        className={classnames(\r\n          // 'overlay-card',\r\n          // \"right-overlay-card\",\r\n          // \"transparent-frame\"\r\n        )}\r\n        style={{\r\n          // width: '40vw',\r\n          height: '40vh',\r\n          // border:'#C0C0C0',\r\n          // borderStyle:'solid',\r\n        }}\r\n      >\r\n        <div className={classnames(Classes.CARD, \"node-details-table\")}>\r\n          <table\r\n            className={classnames(Classes.TABLE, Classes.TABLE_STRIPED, \"node-details-table-content\")}\r\n            style={{\r\n              width: \"100%\",\r\n              padding: '0',\r\n              fontSize: \"12px\"\r\n            }}\r\n          >\r\n\r\n            <thead>\r\n\r\n            </thead>\r\n            <tbody>\r\n\r\n\r\n              <tr>\r\n                <td style={{ padding: '5px 10px' }}> {'No node is selected'} | {`Size by ${appState.graph.hasGraph ? appState.graph.nodes.sizeBy : 'NULL'}`} | {`Color by ${appState.graph.hasGraph ? appState.graph.nodes.colorBy : 'NULL'}`}</td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ padding: '5px 10px' }}> {`The average degree is ${appState.graph.hasGraph ? appState.graph.degree.toFixed(3) : 'NULL'}`}</td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ padding: '5px 10px' }}> {`The average density is ${appState.graph.hasGraph ? (appState.graph.density ).toFixed(3) : 'NULL'}`}</td>\r\n              </tr>\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div style={{ height: '20vw' }}>\r\n            \r\n\r\n            <svg\r\n              width={\"50%\"}\r\n              height={\"30vh\"}\r\n              // className=\"hist\"\r\n              id=\"edgesvg\"\r\n              ref={input => (this.edgesvg = input)}\r\n            // ref = {ref}\r\n            >\r\n              <text x=\"50%\" y=\"10%\" text-anchor=\"middle\" fontSize=\"12px\" fontSizeAdjust=\"inherit\">Distance Distribution</text>\r\n              <Histogram\r\n                ariaLabel=\"distance_dis\"\r\n                orientation=\"vertical\"\r\n                height={this.allheight}\r\n                width={this.allwidth}\r\n                cumulative={false}\r\n                normalized={true}\r\n                binCount={25}\r\n                margin={this.margin}\r\n                valueAccessor={(datum) => {\r\n\r\n                  return datum\r\n                }}\r\n                binType=\"numeric\"\r\n\r\n              >\r\n                <BarSeries\r\n                  animated={false}\r\n                  rawData={this.SelectionDistanceFromLatLonIn()[1]}\r\n                  fill={(d, i) => {\r\n                    if (i === 0) {\r\n                      this.distBinData = []\r\n                    }\r\n\r\n                    if (d.data.length > 0) {\r\n                      this.distBinData.push({\r\n                        mind: min(d.data),\r\n                        maxd: max(d.data)\r\n                      })\r\n                    } else {\r\n                      this.distBinData.push({\r\n                        mind: Infinity,\r\n                        maxd: -1\r\n                      })\r\n                    }\r\n                    return \"#08519c\"\r\n                  }}\r\n                />\r\n                <XAxis numTicks={5} label=\"Edge Distance (km)\" fontSize=\"12px\" tickLabelProps={(d, i) => ({ angle: 45 })} />\r\n                <YAxis label=\"Frequency\" fontSize=\"12px\" tickFormat={\r\n                  (tick, ti) => {\r\n                    // console.log(tick, this.SelectionDistanceFromLatLonIn()[1].length);\r\n                    return parseInt(tick * this.SelectionDistanceFromLatLonIn()[1].length).toString()\r\n                  }} />\r\n\r\n\r\n              </Histogram>\r\n              {this.renderEdgeBrush()}\r\n            </svg>\r\n\r\n\r\n            {/* <text className=\"distribution-title\">Degree Distribution</text> */}\r\n            <svg\r\n              width={\"50%\"}\r\n              height={\"30vh\"}\r\n              // className=\"hist\"\r\n              id=\"degreesvg\"\r\n              ref={input => (this.degreesvg = input)}\r\n            // ref = {ref}\r\n            >\r\n\r\n              <text x=\"50%\" y=\"10%\" text-anchor=\"middle\" fontSize=\"12px\" fontSizeAdjust=\"inherit\">Degree Distribution</text>\r\n              <Histogram\r\n                ariaLabel=\"degree_dis\"\r\n                orientation=\"vertical\"\r\n                height={this.allheight}\r\n                width={this.allwidth}\r\n                cumulative={false}\r\n                normalized={true}\r\n                binCount={25}\r\n                margin={this.margin}\r\n                valueAccessor={(datum) => {\r\n                  return datum\r\n                }}\r\n                binType=\"numeric\"\r\n                \r\n              >\r\n                <BarSeries\r\n                  fill={(d, i) => {\r\n                    if (i === 0) {\r\n                      this.degreeBinData = []\r\n                    }\r\n\r\n                    if (d.data.length > 0) {\r\n                      this.degreeBinData.push({\r\n                        mind: min(d.data),\r\n                        maxd: max(d.data)\r\n                      })\r\n                    } else {\r\n                      this.degreeBinData.push({\r\n                        mind: Infinity,\r\n                        maxd: -1\r\n                      })\r\n                    }\r\n                    return \"#08519c\"\r\n                  }}\r\n                  animated={false}\r\n                  rawData={appState.graph.frame.getNodeList().map((node) => {\r\n                    if(node.data.ref.degree>0){\r\n                      return node.data.ref.degree\r\n                    }else{\r\n                      return 0\r\n                    }\r\n                    \r\n                  })}\r\n                />\r\n                <XAxis numTicks={5} label=\"Degree\" fontSize=\"12px\" tickLabelProps={(d, i) => ({ angle: 45 })} />\r\n                {/* <YAxis fontSize=\"12px\" /> */}\r\n                <YAxis numTicks={5} label=\"Frequency\" fontSize=\"12px\"\r\n                  tickFormat={\r\n                    (tick, ti) => {\r\n                      return parseInt(tick * appState.graph.frame.getNodeList().length).toString()\r\n                    }} />\r\n\r\n              </Histogram>\r\n              {this.renderNoNodeDegreeBrush()}\r\n            </svg>\r\n          </div>\r\n      </div>\r\n    } \r\n    else {\r\n      return <div></div>\r\n    }\r\n\r\n    ///\r\n    \r\n    ///\r\n\r\n  }\r\n}\r\n\r\nexport default SelectionDetail;","import React from \"react\";\r\nimport { Button, Classes } from \"@blueprintjs/core\";\r\nimport { Select } from \"@blueprintjs/labs\";\r\nimport CommonItemRenderer from \"./CommonItemRenderer\";\r\n\r\nexport default ({ items, onSelect, value, fill = false }) => (\r\n  <Select\r\n    items={items}\r\n    itemRenderer={CommonItemRenderer}\r\n    filterable={false}\r\n    onItemSelect={onSelect}\r\n  >\r\n        <Button className={`bp4-button  ${fill ? Classes.FILL : null}`} text={value} />\r\n\r\n  </Select>\r\n);\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport uniq from \"lodash/uniq\";\r\nimport { Button, Classes } from \"@blueprintjs/core\";\r\nimport appState from \"../../stores\";\r\nimport { observer } from \"mobx-react/index\";\r\nimport { observable, computed, action, runInAction } from \"mobx\";\r\nimport { scaleLinear, scalePoint, max, axisLeft, axisBottom, select, group } from \"d3\"\r\nimport { brush, brushY } from \"d3-brush\";\r\nimport XYSelect from \"../utils/XYSelect\";\r\nimport SVGBrush from 'react-svg-brush';\r\nimport path from 'ngraph.path';\r\nimport * as SvgSaver from 'svgsaver';\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\nimport { transform } from \"lodash\";\r\n// import SvgSaver from svgsaver\r\n\r\nvar def = require(\"../../graph-frontend/src/imports\").default;\r\n\r\n\r\n\r\n\r\n\r\n// const settings = {\r\n//   width: 150,\r\n//   height: 150,\r\n//   padding: 10,\r\n//   // numDataPoints: 50,\r\n//   // maxRange: () => Math.random() * 1000\r\n// };\r\n\r\n@observer\r\nclass ScatterPlot extends React.Component {\r\n\r\n  @observable data = appState.graph.frame.getNodeList().filter(node => !isNaN(parseFloat(node.data.ref[appState.graph.scatterplot.x])) && !isNaN(parseFloat(node.data.ref[appState.graph.scatterplot.y])))\r\n\r\n  margin = { top: 40, right: 10, bottom: 50, left: 50 }\r\n  // clustermargin = {top: 50, right: 50, bottom: 50, left: 50}\r\n  width = window.innerWidth * 0.48 - this.margin.left - this.margin.right\r\n  height = window.innerHeight * 0.35 - this.margin.top - this.margin.bottom\r\n  cr = 3\r\n  maxhop = undefined\r\n  formatXtext = []\r\n  infinityhop = []\r\n\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.circles = React.createRef();\r\n    this.state = { csvarray: [] }\r\n  }\r\n\r\n  downloadCSV = () => {\r\n    appState.graph.frame.getNodeList().filter(node => !isNaN(parseFloat(node.data.ref[appState.graph.scatterplot.x])) && !isNaN(parseFloat(node.data.ref[appState.graph.scatterplot.y])))\r\n    let column1, column2\r\n\r\n    let header = [];\r\n    this.setState({\r\n      csvarray: []\r\n    });\r\n    // this.state.;\r\n    if (appState.graph.scatterplot.x === 'shortest path') {\r\n      column1 = this.infinityhop\r\n      header.push('shortest path')\r\n    } else if (appState.graph.scatterplot.x === 'pair distance') {\r\n      column1 = appState.graph.rawGraph.paths.map((path, i) => {\r\n        return parseFloat(path['distance'])\r\n      })\r\n      header.push('pair distance')\r\n    } else {\r\n      header.push(appState.graph.scatterplot.x)\r\n      column1 = appState.graph.frame.getNodeList().map((d) => {\r\n        return parseFloat(d.data.ref[appState.graph.scatterplot.x])\r\n      })\r\n    }\r\n\r\n    if (appState.graph.scatterplot.y === 'shortest path') {\r\n      column2 = this.infinityhop\r\n      header.push('shortest path')\r\n    } else if (appState.graph.scatterplot.y === 'pair distance') {\r\n      column2 = appState.graph.rawGraph.paths.map((path, i) => {\r\n        return parseFloat(path['distance'])\r\n      })\r\n      header.push('pair distance')\r\n    } else {\r\n      header.push(appState.graph.scatterplot.y)\r\n      column2 = appState.graph.frame.getNodeList().map((d) => {\r\n        return parseFloat(d.data.ref[appState.graph.scatterplot.y])\r\n      })\r\n    }\r\n\r\n    let temp = []\r\n    temp.push(header)\r\n    for (var i = 0; i < column2.length && i < column1.length; i++) {\r\n      temp.push([column1[i], column2[i]]);\r\n    }\r\n    this.setState({\r\n      csvarray: temp\r\n    });\r\n\r\n\r\n  }\r\n\r\n  onBrushStart = ({ target, type, selection, sourceEvent }) => {\r\n    appState.graph.frame.selection = []\r\n    appState.graph.selectedNodes = []\r\n    appState.graph.edgeselection = []\r\n\r\n  }\r\n  onBrush = ({ target, type, selection, sourceEvent }) => {\r\n\r\n  }\r\n  onBrushEnd = ({ target, type, selection, sourceEvent }) => {\r\n    appState.graph.selectedNodes = []\r\n    const selectionNodeID = []\r\n    const svgElement = select(this.svg)\r\n    const circles = svgElement.selectAll(\"circle\")\r\n    if(selection != null) {\r\n      const brushBounds = {\r\n        x0: selection[0][0] - this.margin.left,\r\n        x1: selection[1][0] - this.margin.left,\r\n        y0: selection[0][1] - this.margin.top - this.cr,\r\n        y1: selection[1][1] - this.margin.top - this.cr,\r\n      }\r\n      console.log(selection[0][1], selection[1][1],brushBounds.y1, brushBounds.y0);\r\n  \r\n      circles.each(function (d, i) {\r\n        const nodecx = parseFloat(select(this).attr(\"cx\"))\r\n        const nodecy = parseFloat(select(this).attr(\"cy\"))\r\n        console.log(nodecx, nodecy);\r\n        if (nodecx >= brushBounds.x0 && nodecx <= brushBounds.x1 && nodecy >= brushBounds.y0 && nodecy <= brushBounds.y1) {\r\n          selectionNodeID.push(select(this).attr(\"id\"))\r\n        }\r\n  \r\n  \r\n  \r\n      })\r\n  \r\n  \r\n      const selectionNode = appState.graph.frame.getNodeList().filter(node =>\r\n        // console.log(node)\r\n        selectionNodeID.includes(node.id)\r\n  \r\n      )\r\n      appState.graph.frame.selection = selectionNode\r\n      appState.graph.selectedNodes = selectionNode\r\n  \r\n  \r\n      // console.log(selectionNode)\r\n      appState.graph.frame.updateSelectionOpacity()\r\n    }\r\n    \r\n\r\n  }\r\n  renderBrush = () => (\r\n    <SVGBrush\r\n      // Defines the boundary of the brush.\r\n      // Strictly uses the format [[x0, y0], [x1, y1]] for both 1d and 2d brush.\r\n      // Note: d3 allows the format [x, y] for 1d brush.\r\n      // transform={\"translate(0,\" + this.margin.top +\")\"}\r\n\r\n      extent={\r\n        [[this.margin.left,  this.margin.top], [this.width + this.margin.left, this.height + this.margin.top ]]\r\n      }\r\n      // Obtain mouse positions relative to the current svg during mouse events.\r\n      // By default, getEventMouse returns [event.clientX, event.clientY]\r\n      getEventMouse={event => {\r\n        const { clientX, clientY } = event;\r\n        const { left, top } = this.svg.getBoundingClientRect();\r\n        // console.log([clientX - left, clientY - top])\r\n        return [clientX - left, clientY - top];\r\n      }}\r\n      brushType=\"2d\" // \"x\"\r\n      onBrushStart={this.onBrushStart}\r\n      onBrush={this.onBrush}\r\n      onBrushEnd={this.onBrushEnd}\r\n    />\r\n  )\r\n\r\n\r\n  // componentDidMount() {\r\n  //   var svg = select('.scatterchart');\r\n  //   //Do svg stuff\r\n  //   const brush = brushY()\r\n  //     .on(\"brush\", brushed);\r\n\r\n  // svg.append(\"g\")\r\n  // .call(brush); \r\n  //   function brushed({selection}) {\r\n  //     console.log(selection)\r\n  //   }\r\n\r\n  // }\r\n\r\n  render() {\r\n\r\n\r\n    if (appState.graph.hasGraph) {\r\n      let x, y\r\n      if (appState.graph.scatterplot.x === 'network density' || appState.graph.scatterplot.x === 'standard distance') {\r\n        x = scaleLinear()\r\n          .domain([\r\n            0,\r\n            max(appState.graph.densityDistance, function (d) {\r\n              return parseFloat(d[appState.graph.scatterplot.x])\r\n            })\r\n          ])\r\n          .range([0, this.width])\r\n      }\r\n      else if (appState.graph.scatterplot.x === 'shortest path') {\r\n        const shortpathhop = appState.graph.rawGraph.paths.map(function (path, i) {\r\n          return path['path'].length - 1\r\n        })\r\n        shortpathhop.sort()\r\n        this.maxhop = shortpathhop[shortpathhop.length - 1]\r\n\r\n        this.infinityhop = shortpathhop.map((pathlen, i) => {\r\n          if (pathlen == -1) {\r\n            return this.maxhop + 1\r\n          } else {\r\n            return pathlen\r\n          }\r\n        })\r\n        this.infinityhop.sort()\r\n        // console.log()\r\n        // this.formatXtext =  [...new Set(this.infinityhop)].map((pathlen,i)=>{\r\n        //   if(pathlen == (this.maxhop +1)){\r\n        //     return 'None'\r\n        //   }else{\r\n        //     return pathlen.toString()\r\n        //   }\r\n        // })\r\n        // console.log(this.formatXtext)\r\n        x = scalePoint()\r\n          .domain(this.infinityhop)\r\n          .range([0, this.width]);\r\n\r\n\r\n      } else if (appState.graph.scatterplot.x === 'pair distance') {\r\n        const pairdistance = appState.graph.rawGraph.paths.map((path, i) => {\r\n          return parseFloat(path['distance'])\r\n        })\r\n        x = scaleLinear()\r\n          .domain([\r\n            0,\r\n            max(pairdistance)\r\n          ])\r\n          .range([0, this.width])\r\n\r\n\r\n      } else {\r\n        x = scaleLinear()\r\n          .domain([\r\n            0,\r\n            max(appState.graph.frame.getNodeList(), function (d) {\r\n              return parseFloat(d.data.ref[appState.graph.scatterplot.x])\r\n            })\r\n          ])\r\n          .range([0, this.width])\r\n      }\r\n\r\n      if (appState.graph.scatterplot.y === 'network density' || appState.graph.scatterplot.y === 'standard distance') {\r\n        y = scaleLinear()\r\n          .domain([\r\n            0,\r\n            max(appState.graph.densityDistance, function (d) {\r\n              return parseFloat(d[appState.graph.scatterplot.y])\r\n            })\r\n          ])\r\n          .range([this.height, 0])\r\n      }\r\n      else if (appState.graph.scatterplot.y === 'shortest path') {\r\n\r\n\r\n        const shortpathhop = appState.graph.rawGraph.paths.map(function (path, i) {\r\n          return path['path'].length - 1\r\n        })\r\n        shortpathhop.sort()\r\n        this.maxhop = shortpathhop[shortpathhop.length - 1]\r\n\r\n        this.infinityhop = shortpathhop.map((pathlen, i) => {\r\n          if (pathlen == -1) {\r\n            return this.maxhop + 1\r\n          } else {\r\n            return pathlen\r\n          }\r\n        })\r\n        this.infinityhop.sort().reverse()\r\n\r\n        y = scalePoint()\r\n          .domain(this.infinityhop)\r\n          .range([0, this.height]);\r\n\r\n      } else if (appState.graph.scatterplot.y === 'pair distance') {\r\n        const pairdistance = appState.graph.rawGraph.paths.map(function (path, i) {\r\n          return parseFloat(path['distance'])\r\n        })\r\n        y = scaleLinear()\r\n          .domain([\r\n            0,\r\n            max(pairdistance)\r\n          ])\r\n          .range([this.height, 0])\r\n\r\n      } else {\r\n        y = scaleLinear()\r\n          .domain([\r\n            0,\r\n            max(appState.graph.frame.getNodeList(), function (d) {\r\n              return parseFloat(d.data.ref[appState.graph.scatterplot.y])\r\n            })\r\n          ])\r\n          .range([this.height, 0])\r\n      }\r\n\r\n\r\n\r\n      return (\r\n        <div>\r\n\r\n          {/* <div style={{ width:'50vw', transform:'translate(10px,10px)'}} className={classnames(Classes.CARD, \"sub-option\")}> */}\r\n\r\n          <div style={{ display: \"inline\", }}>\r\n            <p className=\"scatter-plot-font\" style={{ display: \"inline\", fontSize:\"12px\"}}>X By: </p>\r\n            <span >\r\n              < XYSelect className=\"scatter-plot-font\" style={{ display: \"inline\" }}\r\n                items={appState.graph.allComputedPropertiesKeyList}\r\n                onSelect={it => (appState.graph.scatterplot.x = it.split(' ').map((s) => s.charAt(0).toLowerCase() + s.substring(1)).join(' '))}\r\n                value={appState.graph.scatterplot.x.toLowerCase().split(' ').map((s) => s.charAt(0).toUpperCase() + s.substring(1)).join(' ')}\r\n              />\r\n            </span>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;\r\n            <p className=\"scatter-plot-font\" style={{ display: \"inline\", fontSize:\"12px\" }}>Y by: </p>\r\n            <span >\r\n              <XYSelect\r\n                className=\"scatter-plot-font\"\r\n                items={appState.graph.allComputedPropertiesKeyList}\r\n                onSelect={it => (appState.graph.scatterplot.y = it.split(' ').map((s) => s.charAt(0).toLowerCase() + s.substring(1)).join(' '))}\r\n                value={appState.graph.scatterplot.y.toLowerCase().split(' ').map((s) => s.charAt(0).toUpperCase() + s.substring(1)).join(' ')}\r\n              />\r\n            </span>\r\n          </div>\r\n\r\n          <div style={{ display: \"inline\", }}>\r\n\r\n          </div>\r\n          {/* </div> */}\r\n          <div>\r\n\r\n            <svg\r\n              width={this.width + this.margin.right + this.margin.left + 10}\r\n              height={this.height + this.margin.top + this.margin.bottom}\r\n              className=\"scatterchart\"\r\n              id=\"scatterplot\"\r\n              ref={input => (this.svg = input)}\r\n            // ref = {ref}\r\n            >\r\n              <g\r\n                transform={\"translate(\" + this.margin.left + \",\" + this.margin.top + \")\"}\r\n                width={this.width}\r\n                height={this.height}\r\n                className=\"main\"\r\n              >\r\n                {appState.graph.hasGraph && <RenderCircles scale={{ x, y }} cr={this.cr} ref={this.circles} maxhop={this.maxhop} infinityhop={this.infinityhop} />}\r\n                <text style={{ transform: 'translate(20vw, 27vh)' }} fontSize=\"12px\">{(appState.graph.scatterplot.x === 'standard distance') ? 'Standard Distance (km)' : appState.graph.scatterplot.x.toLowerCase().split(' ').map((s) => s.charAt(0).toUpperCase() + s.substring(1)).join(' ')}</text>\r\n                <Axis\r\n                  axis=\"x\"\r\n                  transform={\"translate(0,\" + this.height + \")\"}\r\n                  scale={(appState.graph.scatterplot.x === 'shortest path') ?\r\n                    axisBottom().scale(x).tickFormat((label) => {\r\n                      if (parseInt(label) == (this.maxhop + 1)) {\r\n                        return 'None'\r\n                      } else {\r\n                        return label\r\n                      }\r\n\r\n                    }) : axisBottom().scale(x)\r\n                  }\r\n                />\r\n                <text\r\n                  transform={\"translate(-40, 120) rotate(-90)\"}\r\n                  fontSize=\"12px\"\r\n                >{(appState.graph.scatterplot.y === 'standard distance') ? 'Standard Distance (km)' : appState.graph.scatterplot.y.toLowerCase().split(' ').map((s) => s.charAt(0).toUpperCase() + s.substring(1)).join(' ')}</text>\r\n                <Axis\r\n                  axis=\"y\"\r\n                  transform=\"translate(0,0)\"\r\n                  scale={(appState.graph.scatterplot.y === 'shortest path') ?\r\n                    axisLeft().scale(y).tickFormat((label) => {\r\n                      if (parseInt(label) == (this.maxhop + 1)) {\r\n                        return 'None'\r\n                      } else {\r\n                        return label\r\n                      }\r\n\r\n                    })\r\n                    : axisLeft().scale(y)\r\n                  }\r\n                // decorate={(s) => {\r\n                //   s.enter()\r\n                //     .select('text')\r\n                //     .style('text-anchor', 'start')\r\n                //     .attr('transform', 'rotate(45 -10 10)');\r\n                // }}\r\n                />\r\n              </g>\r\n              {(appState.graph.scatterplot.y !== 'shortest path') && (appState.graph.scatterplot.x !== 'shortest path') &&\r\n                (appState.graph.scatterplot.y !== 'network density') && (appState.graph.scatterplot.x !== 'standard distance') &&\r\n                (appState.graph.scatterplot.y !== 'standard distance') && (appState.graph.scatterplot.x !== 'network density') &&\r\n                (appState.graph.scatterplot.y !== 'pair distance') && (appState.graph.scatterplot.x !== 'pair distance') &&\r\n                this.renderBrush()}\r\n            </svg>\r\n          </div>\r\n          <Button\r\n            className=\"bp4-button\"\r\n            style={{ transform: \"translate(35vw, -0.5vh)\", }}\r\n            onClick={() => {\r\n              var svgsaver = new SvgSaver();                      // creates a new instance\r\n              var svg = document.querySelector('#scatterplot');         // find the SVG element\r\n              svgsaver.asSvg(svg);\r\n            }}>Download Image</Button>\r\n\r\n\r\n          {(\r\n            <CSVLink data={this.state.csvarray} onClick={this.downloadCSV} asyncOnClick={true} filename=\"bsedata.csv\">\r\n              <Button\r\n                className=\"bp4-button\"\r\n                style={{ transform: \"translate(12vw, -0.5vh)\", }}\r\n\r\n              >Download CSV\r\n              </Button>\r\n            </CSVLink>\r\n          )}\r\n        </div>\r\n\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n@observer\r\nclass Axis extends React.Component {\r\n\r\n\r\n  componentDidMount() {\r\n    const node = this.refs[this.props.axis]\r\n    select(node).call(this.props.scale)\r\n\r\n  }\r\n\r\n  render() {\r\n    if (appState.graph.hasGraph) {\r\n      const node = this.refs[this.props.axis]\r\n      select(node).call(this.props.scale)\r\n\r\n      if (this.props.axis == 'x') {\r\n        return (\r\n          <g\r\n            className=\"xaxis\"\r\n            transform={this.props.transform}\r\n            ref={this.props.axis}\r\n          />\r\n        )\r\n      } else {\r\n        return (\r\n          <g\r\n            // className=\"xaxis\"\r\n            transform={this.props.transform}\r\n            ref={this.props.axis}\r\n          />\r\n        )\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n}\r\n\r\n@observer\r\nclass RenderCircles extends React.Component {\r\n  setScatterStyle = (node, ni) => {\r\n    // const dehighlightNode = {\r\n    //   fill: \"rgba(25, 158, 199, .9)\",\r\n    //   zIndex: \"0\"\r\n    // }\r\n    // const highlightNode = {\r\n    //   fill: \"rgba(255, 1, 1, .9)\",\r\n    //   zIndex: \"10000\"\r\n    // }\r\n    if ((appState.graph.scatterplot.y !== 'shortest path') && (appState.graph.scatterplot.x !== 'shortest path')\r\n      && (appState.graph.scatterplot.y !== 'pair distance') && (appState.graph.scatterplot.x !== 'pair distance')\r\n      && (appState.graph.scatterplot.y !== 'standard distance') && (appState.graph.scatterplot.x !== 'standard distance')\r\n      && (appState.graph.scatterplot.y !== 'network density') && (appState.graph.scatterplot.x !== 'network density')) {\r\n      if (!appState.graph.currentlyHovered && appState.graph.selectedNodes.length == 0) {\r\n        return {\r\n          fill: node.renderData.color,\r\n          zIndex: \"0\",\r\n          stroke: false,\r\n          fillOpacity: 0.8\r\n        }\r\n      } else if (appState.graph.currentlyHovered) {\r\n        if (node.id === appState.graph.currentlyHovered.id) {\r\n          return {\r\n            fill: node.renderData.color,\r\n            zIndex: \"10000\",\r\n            stroke: def.NODE_HIGHLIGHT,\r\n            fillOpacity: 0.8\r\n          }\r\n        } else {\r\n          return {\r\n            fill: node.renderData.color,\r\n            zIndex: \"0\",\r\n            stroke: false,\r\n            fillOpacity: 0.1\r\n          }\r\n        }\r\n      } else if (appState.graph.selectedNodes.length > 0) {\r\n        if (appState.graph.selectedNodes.indexOf(node) == -1) {\r\n          return {\r\n            fill: node.renderData.color,\r\n            zIndex: \"0\",\r\n            stroke: false,\r\n            fillOpacity: 0.1\r\n          }\r\n        } else {\r\n          return {\r\n            fill: node.renderData.color,\r\n            zIndex: \"10000\",\r\n            stroke: def.NODE_HIGHLIGHT,\r\n            fillOpacity: 0.8\r\n          }\r\n        }\r\n      }\r\n    } else if (((appState.graph.scatterplot.y == 'network density') && (appState.graph.scatterplot.x == 'standard distance')) ||\r\n      ((appState.graph.scatterplot.y == 'standard distance') && (appState.graph.scatterplot.x == 'network density'))) {  // density distance node style\r\n      // density distance node style\r\n\r\n      // //hover on one group \r\n      // if (appState.graph.distanceDensityCurrentlyHovered) {\r\n\r\n      //   if (String(node['name']) === String(appState.graph.distanceDensityCurrentlyHovered)) {\r\n      //     return {\r\n      //       fill: appState.graph.nodeColorScale(node['name']),\r\n      //       zIndex: \"10000\",\r\n      //       stroke: def.NODE_HIGHLIGHT,\r\n      //       fillOpacity: 0.8\r\n      //     }\r\n      //   } else {\r\n      //     return {\r\n      //       fill: appState.graph.nodeColorScale(node['name']),\r\n      //       zIndex: \"0\",\r\n      //       stroke: false,\r\n      //       fillOpacity: 0.1\r\n      //     }\r\n      //   }\r\n\r\n      // } else {// no hover \r\n      //   return {\r\n      //     fill: appState.graph.nodeColorScale(node['name']),\r\n      //     zIndex: \"0\",\r\n      //     stroke: false,\r\n      //     fillOpacity: 0.8\r\n      //   }\r\n\r\n      // }\r\n      \r\n      //Click\r\n      if (appState.graph.distanceDensityCurrentlyClicked.length !== 0) {\r\n        if (appState.graph.distanceDensityCurrentlyClicked.includes(String(node['name']))) {\r\n          return {\r\n            fill: appState.graph.nodeColorScale(node['name']),\r\n            zIndex: \"10000\",\r\n            stroke: def.NODE_HIGHLIGHT,\r\n            fillOpacity: 0.8\r\n          }\r\n        } \r\n        else {\r\n          return {\r\n            fill: appState.graph.nodeColorScale(node['name']),\r\n            zIndex: \"0\",\r\n            stroke: false,\r\n            fillOpacity: 0.1\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        // no click \r\n          return {\r\n            fill: appState.graph.nodeColorScale(node['name']),\r\n            zIndex: \"0\",\r\n            stroke: false,\r\n            fillOpacity: 0.8\r\n          }\r\n      }\r\n    }\r\n    else { //path node style \r\n      return {\r\n        \r\n        fill: appState.graph.edges.color,\r\n        zIndex: \"0\",\r\n        stroke: false,\r\n        fillOpacity: 0.8\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const pathFinder = path.aGreedy(appState.graph.computedGraph);\r\n    if (appState.graph.hasGraph) {\r\n      let renderCircles = []\r\n      // let renderLabels = []\r\n      // let ydata =[]\r\n      if (((appState.graph.scatterplot.x === 'network density') && (appState.graph.scatterplot.y === 'standard distance')) ||\r\n        ((appState.graph.scatterplot.x === 'standard distance') && (appState.graph.scatterplot.y === 'network density'))) {\r\n        // renderLabels = appState.graph.densityDistance.sort((a, b) => b.size - a.size).map((cluster,ci)=>())\r\n\r\n        // appState.graph.densityDistance = ;\r\n        renderCircles = appState.graph.densityDistance.sort((a, b) => b.size - a.size).map((cluster, ci) => (\r\n\r\n          <g>\r\n            <circle\r\n              cx={this.props.scale.x(cluster[appState.graph.scatterplot.x])}\r\n              cy={this.props.scale.y(cluster[appState.graph.scatterplot.y])}\r\n              r={cluster['size'] > 50 ? 25 : cluster['size'] / 2}\r\n              style={this.setScatterStyle(cluster, ci)}\r\n              id={`${cluster.name}`}\r\n              // onMouseOver={(e) => {\r\n              //   appState.graph.distanceDensityCurrentlyHovered = e.target.getAttribute('id')\r\n\r\n              //   const selectionNode = appState.graph.frame.getNodeList().filter(node =>\r\n              //     // console.log(node)\r\n              //     String(node.data.ref[appState.graph.groupby]) == appState.graph.distanceDensityCurrentlyHovered\r\n\r\n              //   )\r\n              //   appState.graph.frame.selection = selectionNode\r\n              //   appState.graph.selectedNodes = selectionNode\r\n\r\n\r\n              //   // console.log(selectionNode)\r\n              //   appState.graph.frame.updateSelectionOpacity()\r\n\r\n\r\n\r\n              // }}\r\n              // onMouseLeave={(e) => {\r\n\r\n              //   if (appState.graph.mapClicked) return;\r\n              //   appState.graph.distanceDensityCurrentlyHovered = undefined\r\n              //   appState.graph.frame.selection = []\r\n              //   appState.graph.selectedNodes = []\r\n              //   appState.graph.edgeselection = []\r\n\r\n              //   appState.graph.frame.graph.forEachNode(function (n) {  //highlight all the nodes \r\n              //     // if (n !== appState.graph.mapClicked) {\r\n              //     appState.graph.frame.colorNodeOpacity(n, 1);  // set opacity for all the node 1\r\n\r\n              //     appState.graph.frame.highlightNode(n, false, def.ADJACENT_HIGHLIGHT); //set highlight edge null\r\n              //     // }\r\n              //   }\r\n              //   );\r\n\r\n\r\n              // }}\r\n              onClick={(e) => {\r\n                if (appState.graph.distanceDensityCurrentlyClicked.includes(e.target.getAttribute('id'))) {\r\n                  appState.graph.distanceDensityCurrentlyClicked = appState.graph.distanceDensityCurrentlyClicked.filter(node => \r\n                    node !==  e.target.getAttribute('id')\r\n                  )\r\n                }\r\n                else {\r\n                  appState.graph.distanceDensityCurrentlyClicked.push(e.target.getAttribute('id'));\r\n                }\r\n\r\n                const selectionNode = appState.graph.frame.getNodeList().filter(node =>\r\n                  // console.log(node)\r\n                  appState.graph.distanceDensityCurrentlyClicked.includes(String(node.data.ref[appState.graph.groupby]))\r\n\r\n                )\r\n                appState.graph.frame.selection = selectionNode\r\n                appState.graph.selectedNodes = selectionNode\r\n\r\n\r\n                // console.log(selectionNode)\r\n                appState.graph.frame.updateSelectionOpacity()\r\n              }}\r\n              key={ci}\r\n            />\r\n            <text className=\"scatterplot-label\" \r\n              x={this.props.scale.x(cluster[appState.graph.scatterplot.x])}\r\n              y={this.props.scale.y(cluster[appState.graph.scatterplot.y])}>\r\n              {cluster.name}\r\n            </text>\r\n          </g>)\r\n        )\r\n      }\r\n\r\n      else if ((appState.graph.scatterplot.x === 'shortest path') && (appState.graph.scatterplot.y === 'pair distance')) {\r\n        // const pathkeys = Object.keys(appState.graph.rawGraph.paths)\r\n        renderCircles = appState.graph.rawGraph.paths.map((path, i) => (\r\n          <circle\r\n            cx={path['path'].length == 0 ? this.props.scale.x(this.props.maxhop + 1) : this.props.scale.x(path['path'].length - 1)}\r\n            cy={this.props.scale.y(parseFloat(path['distance']))}\r\n            r={this.props.cr}\r\n            style={this.setScatterStyle(path)}\r\n            id={`${path.source}👉${path.target}`}\r\n            data={path}\r\n            onMouseOver={(e) => {\r\n              // const thenode = appState.graph.frame.getNode(e.target.dataset.id)\r\n              const [sourceid, targetid] = e.target.getAttribute('id').split('👉')\r\n              // e.target.getAttribute('fill') node.renderData.color,\r\n              e.target.style.fill = 'rgba(255, 1, 1, .9)'\r\n              // const source = appState.graph.frame.getNode(sourceid)\r\n              // const target = appState.graph.frame.getNode(targetid)\r\n              const thepath = pathFinder.find(sourceid, targetid)\r\n              const pathnode = thepath.map((node) => {\r\n                return appState.graph.frame.getNode(node.id)\r\n              })\r\n              //control map highlight \r\n              appState.graph.pathHovered = {\r\n                \"sourceid\": sourceid,\r\n                \"targetid\": targetid,\r\n                \"pathnode\": pathnode\r\n              }\r\n              // control socio update \r\n              appState.graph.frame.highlightPathEdgeNode(pathnode)\r\n\r\n\r\n\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              // if (appState.graph.mapClicked) return;\r\n              e.target.style.fill = appState.graph.edges.color\r\n\r\n              appState.graph.frame.graph.forEachNode(function (n) {  //highlight all the nodes \r\n                // if (n !== appState.graph.mapClicked) {\r\n                appState.graph.frame.colorNodeOpacity(n, 1);  // set opacity for all the node 1\r\n\r\n                appState.graph.frame.highlightNode(n, false, def.ADJACENT_HIGHLIGHT); //set highlight edge null\r\n                // }\r\n              }\r\n              );\r\n              appState.graph.frame.colorNodeEdge(null);  //highlight all edges \r\n              appState.graph.pathHovered = null;\r\n\r\n\r\n            }}\r\n            key={i}\r\n          />)\r\n        )\r\n\r\n\r\n      } else if ((appState.graph.scatterplot.y === 'shortest path') && (appState.graph.scatterplot.x === 'pair distance')) {\r\n        renderCircles = appState.graph.rawGraph.paths.map((path, i) => (\r\n          <circle\r\n            cy={path['path'].length == 0 ? this.props.scale.y(this.props.maxhop + 1) : this.props.scale.y(path['path'].length - 1)}\r\n            cx={this.props.scale.x(parseFloat(path['distance']))}\r\n            r={this.props.cr}\r\n            style={this.setScatterStyle(path)}\r\n            id={`${path.source}👉${path.target}`}\r\n            // data={node}\r\n            onMouseOver={(e) => {\r\n              // const thenode = appState.graph.frame.getNode(e.target.dataset.id)\r\n              const [sourceid, targetid] = e.target.getAttribute('id').split('👉')\r\n              \r\n              e.target.style.fill = 'rgba(255, 1, 1, .9)'\r\n              // const source = appState.graph.frame.getNode(sourceid)\r\n              // const target = appState.graph.frame.getNode(targetid)\r\n              const thepath = pathFinder.find(sourceid, targetid)\r\n              const pathnode = thepath.map((node) => {\r\n                return appState.graph.frame.getNode(node.id)\r\n              })\r\n              //control map highlight \r\n              appState.graph.pathHovered = {\r\n                \"sourceid\": sourceid,\r\n                \"targetid\": targetid,\r\n                \"pathnode\": pathnode\r\n              }\r\n              // control socio update \r\n              appState.graph.frame.highlightPathEdgeNode(pathnode)\r\n\r\n\r\n\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              // if (appState.graph.mapClicked) return;\r\n              e.target.style.fill = appState.graph.edges.color\r\n              appState.graph.frame.graph.forEachNode(function (n) {  //highlight all the nodes \r\n                // if (n !== appState.graph.mapClicked) {\r\n                appState.graph.frame.colorNodeOpacity(n, 1);  // set opacity for all the node 1\r\n\r\n                appState.graph.frame.highlightNode(n, false, def.ADJACENT_HIGHLIGHT); //set highlight edge null\r\n                // }\r\n              }\r\n              );\r\n              appState.graph.frame.colorNodeEdge(null);  //highlight all edges \r\n              appState.graph.pathHovered = null;\r\n\r\n\r\n            }}\r\n            key={i}\r\n          />)\r\n        )\r\n      } else if ((appState.graph.scatterplot.y !== 'shortest path') && (appState.graph.scatterplot.x !== 'shortest path')\r\n        && (appState.graph.scatterplot.y !== 'pair distance') && (appState.graph.scatterplot.x !== 'pair distance')) {\r\n        renderCircles = appState.graph.frame.getNodeList().map((node, i) => (\r\n          <circle\r\n            cx={this.props.scale.x(parseFloat(node.data.ref[appState.graph.scatterplot.x]))}\r\n            cy={this.props.scale.y(parseFloat(node.data.ref[appState.graph.scatterplot.y]))}\r\n            r={this.props.cr}\r\n            style={this.setScatterStyle(node)}\r\n            id={node.id}\r\n            data={node}\r\n            onMouseOver={(e) => {\r\n              // console.log(e.target.dataset.id)\r\n              const thenode = appState.graph.frame.getNode(e.target.dataset.id)\r\n              appState.graph.currentlyHovered = thenode  // control map update \r\n              appState.graph.frame.highlightNode(thenode, true);   // control cosio update \r\n              appState.graph.frame.highlightEdges(thenode, true);\r\n\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              if (appState.graph.mapClicked) return;\r\n\r\n              appState.graph.frame.graph.forEachNode(function (n) {\r\n                // if (n !== appState.graph.mapClicked) {\r\n                appState.graph.frame.colorNodeOpacity(n, 1);\r\n\r\n                appState.graph.frame.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\r\n                // }\r\n              }\r\n              );\r\n              appState.graph.frame.colorNodeEdge(null);\r\n              appState.graph.currentlyHovered = null;\r\n\r\n\r\n            }}\r\n            // eventHandlers={{\r\n            //   mouseover: (e) => {\r\n            //     console.log(e)\r\n            //   }\r\n            // }}\r\n            // style={{ fill: \"rgba(25, 158, 199, .9)\" }}\r\n            key={i}\r\n          />\r\n        ))\r\n      }\r\n\r\n      return <g>{renderCircles}</g>\r\n    }\r\n  }\r\n}\r\n\r\nexport default ScatterPlot;\r\n\r\n","import React from \"react\";\r\n\r\nimport { format } from \"d3-format\";\r\nimport { LegendLinear, LegendSize } from \"@vx/vx\";\r\nimport appState from \"../stores\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nfunction Legends() {\r\n  return (\r\n    <div className=\"legends\" style={{visibility: appState.preferences.isLegendShowing ? 'visible' : 'hidden'}}>\r\n      {/* <LegendSize\r\n        className=\"scale-legend\"\r\n        direction=\"row\"\r\n        itemDirection=\"column\"\r\n        itemMargin=\"0\"\r\n        shapeMargin=\"5px 0\"\r\n        labelFormat={format(\".2f\")}\r\n        scale={appState.graph.nodeSizeScale}\r\n        shape={props => {\r\n          const { size } = props;\r\n          return (\r\n            <svg width={size} height={size}>\r\n              <circle  {...props} r={size / 2} cx={size / 2} cy={size / 2} fill={'#9a9ea1'}/>\r\n            </svg>\r\n          );\r\n        }}\r\n      /> */}\r\n      {/* <LegendLinear\r\n        direction=\"row\"\r\n        itemDirection=\"column\"\r\n        shape=\"circle\"\r\n        scale={appState.graph.nodeColorScale}\r\n        labelFormat={format(\".4f\")}\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Legends);\r\n","import React from \"react\";\r\nimport { Button, Classes, Tooltip, Intent, Position } from \"@blueprintjs/core\";\r\nimport classnames from \"classnames\";\r\nimport { observer } from \"mobx-react\";\r\nimport appState from \"../../stores\";\r\n\r\n@observer\r\nclass SelectionActionPanel extends React.Component {\r\n  render() {\r\n      // Only relevant when there's exact 1 node selected.\r\n      // To display number of hidden nodes if exists\r\n      let numHiddenNeighbor = 0;\r\n      if (appState.graph.selectedNodes.length === 1) {\r\n        if (appState.graph.lastSelectedSingleNode) {\r\n            const selectedNodeId = appState.graph.lastSelectedSingleNode.data.ref.id.toString();\r\n            numHiddenNeighbor = appState.graph.getNeighborNodesFromRawGraph(selectedNodeId).filter(n => n.isHidden).length;\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div\r\n            className=\"argo-selection-action-panel\"\r\n            style={{\r\n                backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\r\n            }}\r\n        >\r\n            <Tooltip\r\n                content=\"Pin Selected Nodes\"\r\n                position={Position.BOTTOM}\r\n            >\r\n                <Button\r\n                    className={classnames([\r\n                    Classes.BUTTON,\r\n                    Classes.MINIMAL\r\n                    ])}\r\n                    iconName=\"pin\"\r\n                    text=\"Pin\"\r\n                    intent={Intent.PRIMARY}\r\n                    onClick={() => {\r\n                    appState.graph.frame.pinSelectedNodes();\r\n                    this.forceUpdate();\r\n                    }}\r\n                />\r\n            </Tooltip>\r\n            <Tooltip\r\n                content=\"Unpin Selected Nodes\"\r\n                position={Position.BOTTOM}\r\n            >\r\n                <Button\r\n                    className={classnames([\r\n                    Classes.BUTTON,\r\n                    Classes.MINIMAL\r\n                    ])}\r\n                    iconName=\"unpin\"\r\n                    text=\"Unpin\"\r\n                    intent={Intent.WARNING}\r\n                    onClick={() => {\r\n                    appState.graph.frame.unpinSelectedNodes();\r\n                    this.forceUpdate();\r\n                    }}\r\n                />\r\n            </Tooltip>\r\n            <Tooltip\r\n                content=\"Hide Selected Nodes\"\r\n                position={Position.BOTTOM}\r\n            >\r\n                <Button\r\n                    className={classnames([\r\n                    Classes.BUTTON,\r\n                    Classes.MINIMAL\r\n                    ])}\r\n                    iconName=\"delete\"\r\n                    text=\"Hide\"\r\n                    intent={Intent.DANGER}\r\n                    onClick={() => {\r\n                    appState.graph.hideNodes(\r\n                        appState.graph.frame.getSelectedIds()\r\n                    );\r\n                    this.forceUpdate();\r\n                    }}\r\n                />\r\n            </Tooltip>\r\n            {// This menu only shows when there's exactly 1 node selected\r\n              appState.graph.selectedNodes.length === 1 && (\r\n                <div style={{ display: \"inline\" }}>\r\n                  <Tooltip\r\n                    content=\"Open Neighbor Dialog\"\r\n                    position={Position.BOTTOM}\r\n                  >\r\n                    <Button\r\n                      className={classnames([\r\n                        Classes.BUTTON,\r\n                        Classes.MINIMAL\r\n                      ])}\r\n                      iconName=\"graph\"\r\n                      text={`Neighbors (${numHiddenNeighbor} hidden)`}\r\n                      intent={Intent.PRIMARY}\r\n                      onClick={() => {\r\n                        appState.graph.frame.pauseLayout();\r\n                        appState.preferences.neighborDialogOpen = true;\r\n                        this.forceUpdate();\r\n                      }}\r\n                    />\r\n                  </Tooltip>\r\n                </div>\r\n            )}\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default SelectionActionPanel;","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores\";\r\n\r\n@observer\r\nclass StatusBar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                className={classnames(\"bottom-status-bar\")}\r\n                style={{\r\n                    backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\r\n                    visibility: appState.preferences.isStatusBarShowing? \"visible\" : \"hidden\"\r\n                }}\r\n            >\r\n                <div className={classnames(\"bottom-status-bar__left\")}>{appState.graph.metadata.fullNodes && appState.graph.metadata.fullEdges && `Total Nodes: ${appState.graph.metadata.fullNodes}, Total Edges: ${appState.graph.metadata.fullEdges},`} Hidden Nodes: {appState.graph.numHiddenNodes}</div>\r\n                <div className={classnames(\"bottom-status-bar__right\")}>Color by: {appState.graph.nodes.colorBy} ({appState.graph.nodes.color.scale}), Size by: {appState.graph.nodes.sizeBy} ({appState.graph.nodes.size.scale})</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatusBar;","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  InputGroup,\r\n  Intent,\r\n  Position,\r\n  Tooltip,\r\n  Popover,\r\n  Menu,\r\n  MenuItem,\r\n  MenuDivider\r\n} from \"@blueprintjs/core\";\r\nimport pluralize from \"pluralize\";\r\nimport appState from \"../../stores\";\r\nimport GlobalPanel from \"./GlobalPanel\";\r\nimport SelectionPanel from \"./SelectionPanel\";\r\nimport uniq from \"lodash/uniq\";\r\nimport { averageClusteringCoefficient } from \"../../services/AlgorithmUtils\";\r\n\r\n\r\n@observer\r\nclass ZoomPanel extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className={classnames(\r\n        \"zoom-buttons\"\r\n      )}>\r\n          <Button\r\n            style={{marginBottom: \"5px\"}}\r\n            className={classnames([Classes.BUTTON])} \r\n            iconName=\"plus\"\r\n            onClick={() => {\r\n              let controls = appState.controls\r\n              controls.dollyIn(1.5)\r\n            }}\r\n            ></Button>\r\n            \r\n            \r\n            <br></br>\r\n            \r\n            \r\n            <Button \r\n            style={{marginBottom: \"5px\"}}\r\n            className={classnames([Classes.BUTTON])} \r\n            iconName=\"minus\"\r\n            onClick={() => {\r\n              let controls = appState.controls\r\n              controls.dollyIn(0.5)\r\n            }}></Button>\r\n\r\n\r\n            <br></br>\r\n            \r\n            \r\n            <Button\r\n            style={{marginBottom: \"5px\"}} \r\n            className={classnames([Classes.BUTTON])} \r\n            iconName=\"home\"\r\n            onClick={() => {\r\n              let controls = appState.controls\r\n              controls.reset()\r\n\r\n              //reset to center of graph code:\r\n              // let xVal = 0\r\n              // let yVal = 0\r\n              // let pos = appState.graph.frame.getPositions();\r\n              // for(let n in pos) {\r\n              //   xVal = pos[n][0]\r\n              //   yVal = pos[n][1]\r\n              // }\r\n              // let len = Object.keys(pos).length\r\n              // appState.panToMousePosition(xVal,yVal);\r\n            }}></Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ZoomPanel;","import React from \"react\";\r\nimport { Classes,Button, Tab2, Tabs2, Tag } from \"@blueprintjs/core\";\r\nimport classnames from \"classnames\";\r\nimport { observer } from \"mobx-react\";\r\nimport appState from \"../stores\";\r\nimport SimpleSelect from \"./utils/SimpleSelect\";\r\nimport { addNode } from \"../ipc/client\";\r\nimport NodesPanel from \"./panels/NodesPanel\";\r\nimport NodesFilterPanel from \"./panels/NodesFilterPanel\";\r\nimport EdgesPanel from \"./panels/EdgesPanel\";\r\nimport LabelsPanel from \"./panels/LabelsPanel\";\r\nimport NodeDetail from \"./panels/NodeDetailPanel\";\r\nimport SelectionDetail from \"./panels/SelectionDetail\";\r\nimport ScatterPlot from \"./panels/ScatterPlot\";\r\nimport Legends from \"./Legends\";\r\nimport StatusBar from './StatusBar';\r\nimport SelectionActionPanel from \"./panels/SelectionActionPanel\";\r\nimport ZoomPanel from \"./panels/ZoomPanel\";\r\nimport * as SvgSaver from 'svgsaver';\r\n\r\n// TODO: migrate to simple select\r\n\r\n@observer\r\nclass RenderOptionsCard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4>Appearance </h4>\r\n        <Tabs2 animate id=\"graph-options\">\r\n          <Tab2 id=\"nodes\" title=\"Nodes\" panel={<NodesPanel />} />\r\n          <Tab2 id=\"edges\" title=\"Edges\" panel={<EdgesPanel />} />\r\n          <Tab2 id=\"labels\" title=\"Labels\" panel={<LabelsPanel />} />\r\n          {/* <Tab2 id=\"layout\" title=\"Layout\" panel={<LayoutPanel />} /> */}\r\n          <Tabs2.Expander />\r\n        </Tabs2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n@observer\r\nclass FilterOptionsCard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4>Filter Options</h4>\r\n        <Tabs2 animate id=\"filter-options\">\r\n          <Tab2 id=\"nodes\" title=\"Nodes\" panel={<NodesFilterPanel />} />\r\n          <Tab2 id=\"edges\" title=\"Edges\" panel={<EdgesPanel />} />\r\n          {/* <Tab2 id=\"layout\" title=\"Layout\" panel={<LayoutPanel />} /> */}\r\n          <Tabs2.Expander />\r\n        </Tabs2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n//\r\n\r\n@observer\r\nclass FloatingCards extends React.Component {\r\n  optionsVisible = {\r\n    left: '0em'\r\n  }\r\n  optionsInvisible = {\r\n    left: '-22em'\r\n  }\r\n  sideButtonVis = {\r\n    marginLeft: '50px'\r\n  }\r\n  sideButtonInv = {\r\n    marginLeft: '-15px'\r\n  }\r\n  toggleOptions = () => {\r\n    appState.preferences.isRenderOptionsCardHidden = !appState.preferences.isRenderOptionsCardHidden;\r\n  };\r\n\r\n  filtersVisible = {\r\n    left: '0em'\r\n  }\r\n  filtersInvisible = {\r\n    left: '-22em'\r\n  }\r\n  filterSideButtonVis = {\r\n    marginLeft: '50px'\r\n  }\r\n  filterSideButtonInv = {\r\n    marginLeft: '-15px'\r\n  }\r\n  filterToggleOptions = () => {\r\n    appState.preferences.isFilterOptionsCardHidden = !appState.preferences.isFilterOptionsCardHidden;\r\n  };\r\n\r\n  scatterVisible = {\r\n    right: '0em'\r\n  }\r\n  scatterInvisible = {\r\n    right: '-52em'\r\n  }\r\n  scatterSideButtonVis = {\r\n    marginLeft: '0px'\r\n  }\r\n  scatterSideButtonInv = {\r\n    marginLeft: '80px'\r\n  }\r\n\r\n  scatterToggleOptions = () => {\r\n    appState.preferences.isScatterPlotCardHidden = !appState.preferences.isScatterPlotCardHidden;\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"floating-overlay\">\r\n        <div className=\"left-cards\" style={{zIndex: '5000'}}>\r\n          {appState.search.panelOpen && (\r\n            <div\r\n              className={classnames(\r\n                Classes.CARD,\r\n                Classes.ELEVATION_2,\r\n                \"overlay-card\",\r\n                \"left-overlay-card\"\r\n              )}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"left\",\r\n                  alignItems: \"left\"\r\n                }}\r\n              >\r\n                <h4 style={{ width: 140 }}>\r\n                  {appState.search.numCandidates} results\r\n                </h4>\r\n                <div style={{ width: 20 }} />\r\n                <h4>Order</h4>\r\n                <div style={{ width: 5 }} />\r\n                <SimpleSelect\r\n                  style={{ \"margin-bottom\": 10 }}\r\n                  items={[...appState.graph.metadata.nodeComputed, \"node_id\"]}\r\n                  onSelect={it => (appState.graph.searchOrder = it)}\r\n                  value={appState.graph.searchOrder}\r\n                />\r\n              </div>\r\n              <table\r\n                className={classnames(\r\n                  Classes.TABLE,\r\n                  Classes.TABLE_STRIPED,\r\n                  Classes.INTERACTIVE\r\n                )}\r\n                style={{\r\n                  width: \"100%\",\r\n                  userSelect: \"none\"\r\n                }}\r\n              >\r\n                <tbody>\r\n                  {appState.search.candidates.map((node, i) => (\r\n                    <tr\r\n                      key={i}\r\n                      onMouseOver={() =>\r\n                        appState.graph.frame.highlightNodeIds(\r\n                          [node.node_id],\r\n                          true\r\n                        )\r\n                      }\r\n                      onMouseDown={() => addNode(node.node_id)}\r\n                      onMouseLeave={() =>\r\n                        appState.graph.frame.highlightNodeIds(\r\n                          [node.node_id],\r\n                          false\r\n                        )\r\n                      }\r\n                    >\r\n                      <td>{node[appState.graph.nodes.labelBy]}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n              <center>\r\n                <a\r\n                  onMouseDown={() => {\r\n                    if (appState.search.pageNum > 0) {\r\n                      appState.search.pageNum -= 1;\r\n                      appState.search.candidates = appState.search.allCands.slice(\r\n                        appState.search.pageNum * appState.search.nPerPage,\r\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\r\n                      );\r\n                    }\r\n                  }}\r\n                >\r\n                  Prev&nbsp;\r\n                </a>\r\n                &nbsp;\r\n                {appState.search.pageNum !== 0 ? (\r\n                  <a\r\n                    onMouseDown={() => {\r\n                      appState.search.pageNum = 0;\r\n                      appState.search.candidates = appState.search.allCands.slice(\r\n                        appState.search.pageNum * appState.search.nPerPage,\r\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\r\n                      );\r\n                    }}\r\n                  >\r\n                    1&nbsp;\r\n                  </a>\r\n                ) : (\r\n                  <a\r\n                    style={{\r\n                      color: \"#111111\",\r\n                      pointerEvents: \"none\",\r\n                      cursor: \"default\"\r\n                    }}\r\n                  >\r\n                    {appState.search.pageNum + 1}&nbsp;\r\n                  </a>\r\n                )}\r\n                ...<b>&nbsp;</b>\r\n                {appState.search.pages.map(i => {\r\n                  if (\r\n                    i != 0 &&\r\n                    i != appState.search.maxPage &&\r\n                    i == appState.search.pageNum\r\n                  ) {\r\n                    return (\r\n                      <a\r\n                        key={i}\r\n                        style={{\r\n                          color: \"#111111\",\r\n                          pointerEvents: \"none\",\r\n                          cursor: \"default\"\r\n                        }}\r\n                      >\r\n                        {appState.search.pageNum + 1}&nbsp;\r\n                      </a>\r\n                    );\r\n                  } else if (\r\n                    i != 0 &&\r\n                    i != appState.search.maxPage &&\r\n                    ((i > appState.search.pageNum - 4 &&\r\n                      i < appState.search.pageNum + 4) ||\r\n                      (appState.search.pageNum < 4 && i < 8) ||\r\n                      (appState.search.pageNum > appState.search.maxPage - 4 &&\r\n                        i > appState.search.maxPage - 8))\r\n                  ) {\r\n                    return (\r\n                      <a\r\n                        key={i}\r\n                        onMouseDown={() => {\r\n                          appState.search.pageNum = i;\r\n                          appState.search.candidates = appState.search.allCands.slice(\r\n                            appState.search.pageNum * appState.search.nPerPage,\r\n                            (appState.search.pageNum + 1) *\r\n                            appState.search.nPerPage\r\n                          );\r\n                        }}\r\n                      >\r\n                        {i + 1}&nbsp;\r\n                      </a>\r\n                    );\r\n                  }\r\n                })}\r\n                ...&nbsp;\r\n                {appState.search.pageNum !== appState.search.maxPage ? (\r\n                  <a\r\n                    onMouseDown={() => {\r\n                      appState.search.pageNum = appState.search.maxPage;\r\n                      appState.search.candidates = appState.search.allCands.slice(\r\n                        appState.search.pageNum * appState.search.nPerPage,\r\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\r\n                      );\r\n                    }}\r\n                  >\r\n                    {appState.search.maxPage + 1}&nbsp;\r\n                  </a>\r\n                ) : (\r\n                  <a\r\n                    style={{\r\n                      color: \"#111111\",\r\n                      pointerEvents: \"none\",\r\n                      cursor: \"default\"\r\n                    }}\r\n                  >\r\n                    {appState.search.pageNum + 1}\r\n                  </a>\r\n                )}\r\n                &nbsp;\r\n                <a\r\n                  onMouseDown={() => {\r\n                    if (appState.search.pageNum < appState.search.maxPage) {\r\n                      appState.search.pageNum += 1;\r\n                      appState.search.candidates = appState.search.allCands.slice(\r\n                        appState.search.pageNum * appState.search.nPerPage,\r\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\r\n                      );\r\n                    }\r\n                  }}\r\n                >\r\n                  Next\r\n                </a>\r\n                <br />\r\n                <br />\r\n                <h5>Page {appState.search.pageNum + 1}</h5>\r\n              </center>\r\n            </div>\r\n          )}\r\n          <div\r\n            className={classnames(\r\n              Classes.CARD,\r\n              Classes.ELEVATION_2,\r\n              \"overlay-card\",\r\n              \"left-overlay-card\",\r\n              \"transparent-frame\",\r\n              \"left-cards\",\r\n              \"graph-option\"\r\n            )}\r\n            style={appState.preferences.isRenderOptionsCardHidden ? this.optionsInvisible : this.optionsVisible}\r\n          >\r\n            <button className=\"openbtn2\" onClick={this.toggleOptions}> &#8249;\r\n            </button>\r\n            <br />\r\n            <RenderOptionsCard />\r\n          </div>\r\n\r\n\r\n\r\n          <div className={classnames(Classes.CARD, Classes.ELEVATION_2, \"overlay-card\",\r\n            \"transparent-frame\")} style={{ width: \"1em\", paddingTop: \"0em\", paddingRight: \"0.7em\", paddingBottom: \"0.5em\", marginLeft: \"-5.4em\" }}>\r\n            <button className=\"openbtn\" onClick={this.toggleOptions} style={appState.preferences.isRenderOptionsCardHidden ? this.sideButtonVis : this.sideButtonInv}>\r\n              &#9776;\r\n            </button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        {/* Scatter Plot  panels */}\r\n        {/* <div className=\"right-cards\">\r\n          <div\r\n            className={classnames(\r\n              Classes.CARD,\r\n              Classes.ELEVATION_2,\r\n              \"scatter-overlay-card\",\r\n              \r\n              \"transparent-frame\",\r\n              \"right-cards\",\r\n              \"filter-option\"\r\n            )}\r\n            style={appState.preferences.isScatterPlotCardHidden ? this.scatterInvisible : this.scatterVisible}\r\n          >\r\n            <button className=\"openbtn3\" onClick={this.scatterToggleOptions}> &#8250;\r\n            </button>\r\n            \r\n            <br />\r\n            \r\n            <div id=\"scatter-plot\"\r\n            style={{transform: \"translate(10px, -20px)\"}}\r\n            >\r\n\r\n              {appState.graph.hasGraph && appState.graph.frame && appState.graph.rawGraph.nodes[0].degree !== undefined && < ScatterPlot />}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={classnames(Classes.CARD, Classes.ELEVATION_2, \"overlay-card\",\r\n            \"transparent-frame\")} style={{ width: \"1em\", height: \"0px\", paddingTop: \"0em\", paddingLeft: \"0px\", paddingBottom: \"0em\", marginRight: \"35px\" }}>\r\n            <button className=\"openbtn\" onClick={this.scatterToggleOptions} style={appState.preferences.isScatterPlotCardHidden ? this.scatterSideButtonVis : this.scatterSideButtonInv}>\r\n              &#9776;\r\n            </button>\r\n          </div>\r\n        </div> */}\r\n\r\n        {/* Filter option  panels */}\r\n        <div className={\"left-cards\"} style={{ marginTop:'6em'}} >\r\n          <div\r\n\r\n\r\n            className={classnames(\r\n              Classes.CARD,\r\n              Classes.ELEVATION_2,\r\n              \"overlay-card\",\r\n              \"left-overlay-card\",\r\n              \"transparent-frame\",\r\n              \"left-cards\", \r\n              \"filter-option\"\r\n            )}\r\n            style={appState.preferences.isFilterOptionsCardHidden ? this.filtersInvisible : this.filtersVisible}\r\n          >\r\n            <button className=\"openbtn2\" onClick={this.filterToggleOptions}> &#8249;\r\n            </button>\r\n            <br />\r\n            <FilterOptionsCard />\r\n\r\n          </div>\r\n\r\n          <div className={classnames(Classes.CARD, Classes.ELEVATION_2, \"overlay-card\",\r\n            \"transparent-frame\")} style={{ width: \"1em\", paddingTop: \"0em\", paddingRight: \"0.7em\", paddingBottom: \"0.5em\", marginLeft: \"-5.4em\" }}>\r\n            <button className=\"openbtn\" onClick={this.filterToggleOptions} style={appState.preferences.isFilterOptionsCardHidden ? this.filterSideButtonVis : this.filterSideButtonInv}>\r\n               &#9776;\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        \r\n\r\n\r\n        {/* {// This menu only shows when there are nodes selected\r\n          appState.graph.selectedNodes.length > 1 && <SelectionDetail />\r\n        } */}\r\n        {/* {appState.graph.selectedNodes.length === 1 && (\r\n          <NodeDetail node={appState.graph.selectedNodes[0].data.ref} />\r\n        )} */}\r\n\r\n        {/* {appState.graph.selectedNodes.length !== 1 && appState.graph.currentlyHovered && (\r\n          <NodeDetail node={appState.graph.currentlyHovered.data.ref} />\r\n        )} */}\r\n\r\n\r\n\r\n        <Legends />\r\n        {/* <StatusBar /> */}\r\n        {// This menu only shows when there are nodes selected\r\n          appState.graph.selectedNodes.length > 0 && !appState.preferences.isNavbarInMinimalMode && <SelectionActionPanel />\r\n        }\r\n\r\n        <ZoomPanel />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default FloatingCards;","\r\nimport React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport SimpleSelect from \"../utils/SimpleSelect\";\r\nimport {\r\n    Button,\r\n    Classes,\r\n    InputGroup,\r\n    Intent,\r\n    Position,\r\n    Tooltip,\r\n    Popover,\r\n    Menu,\r\n    MenuItem,\r\n    MenuDivider\r\n} from \"@blueprintjs/core\";\r\n\r\nimport appState from \"../../stores\";\r\n\r\n\r\nimport axios from 'axios'\r\nimport { observable, computed, action, runInAction } from \"mobx\";\r\n\r\n\r\n@observer\r\nclass StatGroupPanel extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    @observable modularity = undefined;\r\n    runcommunity = () => {\r\n        appState.graph.convexPolygons = []\r\n\r\n        var fromedgelist = appState.graph.rawGraph.edges.map((edge) => {\r\n            return edge.source_id\r\n        })\r\n        var toedgelist = appState.graph.rawGraph.edges.map((edge) => {\r\n            return edge.target_id\r\n        })\r\n        var querydict = {\r\n            \"type\": 'edgelist',\r\n            \"message\": {\r\n                'name': 'community'\r\n            },\r\n            \"fromedgelist\": fromedgelist,\r\n            \"toedgelist\": toedgelist\r\n        }\r\n        axios.post('https://snoman.herokuapp.com/flask/community', querydict).then(\r\n            // https://snoman.herokuapp.com/flask/community', querydict).then(\r\n            (response) => {\r\n                var communityDict = response.data.message;\r\n                this.modularity = response.data.modularity;\r\n                appState.graph.rawGraph.nodes.forEach((node) => {\r\n                    node.community = communityDict[node.id] ? String.fromCharCode(communityDict[node.id] + 97)  : 'a'\r\n                })\r\n                const nodesArr = appState.graph.rawGraph.nodes\r\n                const nodekeyList = Object.keys(nodesArr[1])\r\n                const nodePropertyTypes = {}\r\n                nodekeyList.forEach(function (k) {\r\n                    nodePropertyTypes[k] = typeof (nodesArr[1][k])\r\n                })\r\n                const uniqueValue = {}\r\n                nodekeyList.forEach(function (k, i) {\r\n\r\n                    if (nodePropertyTypes[k] == 'string') {\r\n                        uniqueValue[k] = [...new Set(nodesArr.map(item => item[k]))]\r\n                    } else {\r\n                        const valuea = nodesArr.map(function (el) { return el[k]; })\r\n                        const minv = Math.min(...valuea)\r\n                        const maxv = Math.max(...valuea)\r\n                        uniqueValue[k] = [minv, maxv]\r\n                    }\r\n                })\r\n                appState.graph.metadata.nodePropertyTypes = nodePropertyTypes\r\n                appState.graph.metadata.uniqueValue = uniqueValue\r\n                appState.graph.metadata.nodeProperties = nodekeyList\r\n               \r\n                appState.graph.nodes.color.scale = \"Nominal Scale\"\r\n                appState.graph.nodes.colorBy = \"community\"\r\n\r\n                appState.graph.nodes.convexhullby = \"community\"\r\n                appState.graph.nodes.groupby = \"community\"\r\n                \r\n                // console.log(result);\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    findcliques = () => {\r\n\r\n        var fromedgelist = appState.graph.rawGraph.edges.map((edge) => {\r\n            return edge.source_id\r\n        })\r\n        var toedgelist = appState.graph.rawGraph.edges.map((edge) => {\r\n            return edge.target_id\r\n        })\r\n        var querydict = {\r\n            \"type\": 'edgelist',\r\n            \"message\": {\r\n                'name': 'clique'\r\n            },\r\n            \"fromedgelist\": fromedgelist,\r\n            \"toedgelist\": toedgelist\r\n        }\r\n        axios.post('https://snoman.herokuapp.com/flask/Cliques', querydict).then(\r\n            (response) => {\r\n                var cliques = response.data.message;\r\n                console.log(cliques)\r\n                // appState.graph.rawGraph.nodes.forEach((node) => {\r\n                //     node.community = communityDict[node.id]\r\n                // })\r\n                // const nodesArr = appState.graph.rawGraph.nodes\r\n                // const nodekeyList = Object.keys(nodesArr[1])\r\n                // const nodePropertyTypes = {}\r\n                // nodekeyList.forEach(function (k) {\r\n                //     nodePropertyTypes[k] = typeof (nodesArr[1][k])\r\n                // })\r\n                // const uniqueValue = {}\r\n                // nodekeyList.forEach(function (k, i) {\r\n\r\n                //     if (nodePropertyTypes[k] == 'string') {\r\n                //         uniqueValue[k] = [...new Set(nodesArr.map(item => item[k]))]\r\n                //     } else {\r\n                //         const valuea = nodesArr.map(function (el) { return el[k]; })\r\n                //         const minv = Math.min(...valuea)\r\n                //         const maxv = Math.max(...valuea)\r\n                //         uniqueValue[k] = [minv, maxv]\r\n                //     }\r\n                // })\r\n                // appState.graph.metadata.nodePropertyTypes= nodePropertyTypes\r\n                // appState.graph.metadata.uniqueValue = uniqueValue\r\n                // appState.graph.metadata.nodeProperties = nodekeyList\r\n                \r\n                // console.log(result);\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    convexhull = (group) => {\r\n\r\n        var fromedgelist = appState.graph.rawGraph.edges.map((edge) => {\r\n            return edge.source_id\r\n        })\r\n        var toedgelist = appState.graph.rawGraph.edges.map((edge) => {\r\n            return edge.target_id\r\n        })\r\n        var querydict = {\r\n            \"type\": 'edgelist',\r\n            \"message\": {\r\n                'name': 'convex'\r\n            },\r\n            \"group\": group,\r\n            \"nodes\": appState.graph.rawGraph.nodes\r\n\r\n        }\r\n        axios.post('https://snoman.herokuapp.com/flask/convexhull', querydict).then(\r\n          \r\n        // https://snoman.herokuapp.com/flask/convexhull', querydict).then(\r\n            (response) => {\r\n                var jsondata = JSON.parse(response.data)\r\n                var convexDict = jsondata.message;\r\n\r\n\r\n                appState.graph.rawGraph.nodes.forEach((node) => {\r\n                    node.isconvex = convexDict[node.id]\r\n                })\r\n                const nodesArr = appState.graph.rawGraph.nodes\r\n                const nodekeyList = Object.keys(nodesArr[1])\r\n                const nodePropertyTypes = {}\r\n                nodekeyList.forEach(function (k) {\r\n                    nodePropertyTypes[k] = typeof (nodesArr[1][k])\r\n                })\r\n                const uniqueValue = {}\r\n                nodekeyList.forEach(function (k, i) {\r\n\r\n                    if (nodePropertyTypes[k] == 'string') {\r\n                        uniqueValue[k] = [...new Set(nodesArr.map(item => item[k]))]\r\n                    } else {\r\n                        const valuea = nodesArr.map(function (el) { return el[k]; })\r\n                        const minv = Math.min(...valuea)\r\n                        const maxv = Math.max(...valuea)\r\n                        uniqueValue[k] = [minv, maxv]\r\n                    }\r\n                })\r\n                appState.graph.metadata.nodePropertyTypes = nodePropertyTypes\r\n                appState.graph.metadata.uniqueValue = uniqueValue\r\n                appState.graph.metadata.nodeProperties = nodekeyList\r\n                \r\n\r\n                appState.graph.nodes.color.scale = \"Nominal Scale\"\r\n                appState.graph.nodes.colorBy = group\r\n                appState.graph.convexPolygonsShow = true\r\n                \r\n                // const selectionNode = appState.graph.frame.getNodeList().filter(node =>\r\n                //     // console.log(node)\r\n                //     node.data.ref.isconvex\r\n\r\n                // )\r\n                // // highlight for the mapview \r\n                // appState.graph.convexNodes = selectionNode\r\n                appState.graph.convexPolygons = jsondata.multipolygon;\r\n                console.log(appState.graph.convexPolygons)\r\n                //highlight in the network view \r\n                // appState.graph.frame.graph.forEachNode(n => {  //fisrt dehighlight all the nodes  \r\n                //     appState.graph.frame.colorNodeOpacity(n, 0.2);\r\n\r\n                // });\r\n\r\n                // appState.graph.frame.lineIndices.forEach(function (link) {\r\n                //     link.linecolor.r = self.darkMode ? 0.25 : 0.89; //black/white\r\n                //     link.linecolor.g = self.darkMode ? 0.25 : 0.89;\r\n                //     link.linecolor.b = self.darkMode ? 0.25 : 0.89;\r\n                // })\r\n\r\n                // for (var i = 0; i < selectionNode.length; i++) {\r\n                //     appState.graph.frame.colorNodeOpacity(selectionNode[i], 1);\r\n                //   }\r\n\r\n\r\n\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    density_distance = (group) => {\r\n\r\n        // var fromedgelist = appState.graph.rawGraph.edges.map((edge) => {\r\n        //     return edge.source_id\r\n        // })\r\n        // var toedgelist = appState.graph.rawGraph.edges.map((edge) => {\r\n        //     return edge.target_id\r\n        // })\r\n        var querydict = {\r\n            \"type\": 'edgelist',\r\n            \"message\": {\r\n                'name': 'density_distance'\r\n            },\r\n            \"group\": group,\r\n            \"nodes\": appState.graph.rawGraph.nodes,\r\n            \"edges\": appState.graph.rawGraph.edges\r\n\r\n\r\n        }\r\n        axios.post('https://snoman.herokuapp.com/flask/densitydistance', querydict).then(\r\n            (response) => {\r\n                var jsondata = JSON.parse(response.data)\r\n                // var convexDict = jsondata.message;\r\n\r\n                appState.graph.metadata.nodeComputed.push('standard distance')\r\n                appState.graph.metadata.nodeComputed.push('network density')\r\n\r\n                appState.graph.densityDistance = jsondata.density_distance\r\n                appState.graph.scatterplot.y = 'standard distance'\r\n                appState.graph.scatterplot.x = 'network density'\r\n                appState.graph.groupby = group\r\n                appState.graph.nodes.colorBy = group\r\n                appState.graph.nodes.color.scale = \"Nominal Scale\"\r\n\r\n\r\n            },\r\n            (error) => {\r\n                console.log(error)\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            (\r\n                <div>\r\n                    <Button\r\n                        className=\"bp4-button\"\r\n                        style={{ zIndex: '1000' }}\r\n                        onClick={this.runcommunity}>Run Community</Button>\r\n                        {/* <button style={{height: \"100%\"}} onClick={this.runcommunity} type=\"button\">\r\n                            Run Community\r\n                        </button> */}\r\n                    {this.modularity? <text className=\"modularity-tag\" style={{fontSize: \"8px\"} } >{\"Q value: \" + parseFloat(this.modularity).toFixed(3)}</text>: null}\r\n                    {/* <Button\r\n                        style={{ position: 'absolute', top: '50px', left: '500px', zIndex: '1000' }}\r\n                        onClick={this.findcliques}>Find Cliques</Button> */}\r\n                    {/* <Button\r\n                        className=\"bp4-button\"\r\n                        style={{ zIndex: '1000' }}\r\n                        onClick={() => this.convexhull('Family')}>Convex Hull by Group</Button>\r\n\r\n                    <Button\r\n                        className=\"bp4-button\"\r\n                        style={{ zIndex: '1000' }}\r\n                        onClick={() => this.density_distance('Family')}>Cluster Cluster</Button> */}\r\n\r\n\r\n                    <div>\r\n                        <p style={{ display: \"inline\" , fontSize:\"12px\" }}>Convex Hull By: </p>\r\n                        <span style={{ }}>\r\n                            <SimpleSelect\r\n                                items={appState.graph.filterKeyList}\r\n                                onSelect={it => {\r\n                                    appState.graph.convexhullby = it\r\n                                    this.convexhull(it)\r\n                                }}\r\n                                value={appState.graph.convexhullby}\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        <p style={{ display: \"inline\" , fontSize:\"12px\" }}>Cluster By: </p>\r\n                        <span style={{  }}>\r\n                            <SimpleSelect\r\n                                items={appState.graph.filterKeyList}\r\n                                onSelect={it => {\r\n                                    appState.graph.groupby = it\r\n                                    this.density_distance(it)\r\n                                }}\r\n                                value={appState.graph.groupby}\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n            )\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatGroupPanel;\r\n\r\n","import SidebarMenu from 'react-bootstrap-sidebar-menu';\r\nimport React from \"react\";\r\n\r\nimport { Tab2, Tabs2, Tag, Classes } from \"@blueprintjs/core\";\r\nimport NodesPanel from \"./panels/NodesPanel\";\r\nimport EdgesPanel from \"./panels/EdgesPanel\";\r\nimport LabelsPanel from \"./panels/LabelsPanel\";\r\nimport NodesFilterPanel from \"./panels/NodesFilterPanel\";\r\nimport StatGroupPanel from \"./panels/StatGroupPanel\"\r\nimport appState from \"../stores/index\";\r\nimport classnames from \"classnames\";\r\n\r\n\r\nclass Sidebar extends React.Component {\r\n    openCity(cityName) {\r\n        var i;\r\n        var x = document.getElementsByClassName(\"city\");\r\n        for (i = 0; i < x.length; i++) {\r\n          x[i].style.display = \"none\";\r\n        }\r\n        document.getElementById(cityName).style.display = \"block\";\r\n    }\r\n\r\n    render() {\r\n      return appState.graph.frame && (\r\n        <SidebarMenu>\r\n            <div class=\"sidebar-container\">\r\n                <div class=\"w3-bar w3-black\">\r\n                    <button class=\"sidebarButton w3-bar-item-button w3-bar-item w3-button\" onClick={this.openCity.bind(this, \"Appearance\")}>Appearance</button>\r\n                    <button class=\"sidebarButton w3-bar-item-button w3-bar-item w3-button\" onClick={this.openCity.bind(this, \"Filter\")}>Filter</button>\r\n                    <button class=\"sidebarButton w3-bar-item-button w3-bar-item w3-button\" onClick={this.openCity.bind(this, \"Statistics\")}>Statistics</button>\r\n                </div> \r\n                <div id=\"Appearance\" class=\"city\">\r\n                    <text style={{fontSize: \"12px\"}}>Appearance </text>\r\n                    <Tabs2 animate id=\"graph-options\">\r\n                    <Tab2 id=\"a_nodes\" title=\"Nodes\" panel={<NodesPanel />} />\r\n                    <Tab2 id=\"a_edges\" title=\"Edges\" panel={<EdgesPanel />} />\r\n                    <Tab2 id=\"a_labels\" title=\"Labels\" panel={<LabelsPanel />} />\r\n                    {/* <Tab2 id=\"layout\" title=\"Layout\" panel={<LayoutPanel />} /> */}\r\n                    <Tabs2.Expander />\r\n                    </Tabs2>\r\n                </div>\r\n                <div id=\"Filter\" class=\"city\" style={{display:\"None\"}}>\r\n                <text style={{fontSize: \"12px\"}}>Filter Options</text>\r\n                    <Tabs2 animate id=\"filter-options\">\r\n                    <Tab2 id=\"f_nodes\" title=\"Nodes\" panel={<NodesFilterPanel />} />\r\n                    {/* <Tab2 id=\"f_edges\" title=\"Edges\" panel={<EdgesPanel />} /> */}\r\n                    {/* <Tab2 id=\"f_layout\" title=\"Layout\" panel={<EdgesPanel />} /> */}\r\n                    <Tabs2.Expander />\r\n                    </Tabs2>\r\n                </div>\r\n                <div id=\"Statistics\" class=\"city\" style={{display:\"None\"}}>\r\n                <text style={{fontSize: \"12px\"}}>Statistics</text>\r\n                    <Tabs2 animate id=\"filter-options\">\r\n                    <Tab2 id=\"s_layout\" title=\"Groups\" panel={<StatGroupPanel />} />\r\n                    <Tabs2.Expander />\r\n                    </Tabs2>\r\n                </div>\r\n                <div id=\"statTable\" className={classnames(Classes.DIALOG_BODY)}>\r\n                    <table className={Classes.TABLE} style={{width: '100%'}}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Statistics</th>\r\n                                <th>Value</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td># Nodes</td>\r\n                                <td>{appState.graph.metadata.fullNodes}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td># Edges</td>\r\n                                <td>{appState.graph.metadata.fullEdges}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Average Degree</td>\r\n                                <td>\r\n                                {appState.graph.hasGraph ? appState.graph.degree.toFixed(3) : 'loading graph'}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Graph Density</td>\r\n                                <td>\r\n                                {appState.graph.hasGraph ? appState.graph.density.toFixed(3) : 'loading graph'}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Graph Diameter</td>\r\n                                <td>\r\n                                {appState.graph.hasGraph ? appState.graph.diameter : 'loading graph'}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Clustering<br></br>Coefficient</td>\r\n                                <td>{(appState.graph.hasGraph) ? appState.graph.averageClustering.toFixed(3) : 'loading graph'}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Connected <br></br>Component</td>\r\n                                <td>{(appState.graph.hasGraph) ? appState.graph.components : 'loading graph'}</td>\r\n\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </SidebarMenu>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Sidebar;","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  FocusStyleManager,\r\n  NonIdealState\r\n} from \"@blueprintjs/core\";\r\nimport Dialogs from \"./components/Dialogs\";\r\nimport NavbarSelector from \"./components/Navbar\";\r\n// import ComDetection from './components/ComDetection'\r\nimport WorkspaceView from \"./components/WorkspaceView\";\r\nimport appState from \"./stores/index\";\r\nimport ThreeJSVis from \"./visualizers/ThreeJSVis\";\r\nimport MapView from \"./visualizers/MapView\";\r\nimport FloatingCards from \"./components/FloatingCards\";\r\nimport registerIPC from \"./ipc/client\";\r\nimport { fetchWorkspaceProjects } from \"./ipc/client\";\r\nimport { MOBILE_WIDTH_CUTOFF, MOBILE_HEIGHT_CUTOFF } from \"./constants\";\r\n// import ScatterPlot from \"./components/panels/ScatterPlot\"\r\nimport SelectionDetail from \"./components/panels/SelectionDetail\";\r\n// import Sidebar from \"./components/Sidebar\"\r\nimport { Tag } from \"@blueprintjs/core\";\r\n// import GraphView from \"./components/GraphView\";\r\n\r\nimport keydown, { Keys } from \"react-keydown\";\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nimport { useEffect } from \"react\";\r\nimport axios from 'axios'\r\n\r\nimport ScatterPlot from \"./components/panels/ScatterPlot\";\r\n\r\nimport Sidebar from \"./components/Sidebar\"\r\n\r\nregisterIPC();\r\nFocusStyleManager.onlyShowFocusOnTabs();\r\n\r\nfetchWorkspaceProjects();\r\n\r\nappState.preferences.loadUserConfig();\r\n\r\nconst { DELETE, BACKSPACE, P, U } = Keys;\r\n\r\n// Respond to window resize, also triggered after frame is loaded.\r\nfunction respondToResize() {\r\n  if (!appState.graph.frame) {\r\n    window.setTimeout(respondToResize, 1000);\r\n    return;\r\n  }\r\n  if (window.innerWidth < MOBILE_WIDTH_CUTOFF || window.innerHeight < MOBILE_HEIGHT_CUTOFF) {\r\n    appState.preferences.turnOnMinimalMode();\r\n  }\r\n  // appState.graph.setUpFrame();\r\n}\r\n\r\nrespondToResize();\r\n\r\nwindow.addEventListener('resize', respondToResize);\r\n\r\n@keydown\r\n@observer\r\nclass App extends React.Component {\r\n\r\n\r\n\r\n  componentWillReceiveProps({ keydown }) {\r\n    if (keydown.event) {\r\n      if (keydown.event.which === DELETE || keydown.event.which === BACKSPACE) {\r\n        if (appState && appState.graph && appState.graph.frame) {\r\n          appState.graph.hideNodes(appState.graph.frame.getSelectedIds());\r\n          this.forceUpdate();\r\n        }\r\n      } else if (keydown.event.which === P) {\r\n        if (appState && appState.graph && appState.graph.frame) {\r\n          appState.graph.frame.pinSelectedNodes();\r\n        }\r\n      } else if (keydown.event.which === U) {\r\n        if (appState && appState.graph && appState.graph.frame) {\r\n          appState.graph.frame.unpinSelectedNodes();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n      // Query the element\r\n      const resizer = document.getElementById('dragMeUp');\r\n      const leftSide = resizer.previousElementSibling;\r\n      const rightSide = resizer.nextElementSibling;\r\n\r\n      // The current position of mouse\r\n      let x = 0;\r\n      let y = 0;\r\n      let upHeight = 0;\r\n\r\n      // Handle the mousedown event\r\n      // that's triggered when user drags the resizer\r\n      const mouseDownHandler = function (e) {\r\n        // Get the current mouse position\r\n        x = e.clientX;\r\n        y = e.clientY;\r\n        upHeight = leftSide.getBoundingClientRect().height;\r\n\r\n        // Attach the listeners to `document`\r\n        document.addEventListener('mousemove', mouseMoveHandler);\r\n        document.addEventListener('mouseup', mouseUpHandler);\r\n      };\r\n\r\n      const mouseMoveHandler = function (e) {\r\n        // How far the mouse has been moved\r\n        const dx = e.clientX - x;\r\n        const dy = e.clientY - y;\r\n\r\n        const newLeftHeight = ((upHeight + dy) * 100) / resizer.parentNode.getBoundingClientRect().height;\r\n        leftSide.style.height = `${newLeftHeight}%`;\r\n\r\n        resizer.style.cursor = 'col-resize';\r\n        document.body.style.cursor = 'col-resize';\r\n\r\n        leftSide.style.userSelect = 'none';\r\n        leftSide.style.pointerEvents = 'none';\r\n\r\n        rightSide.style.userSelect = 'none';\r\n        rightSide.style.pointerEvents = 'none';\r\n      };\r\n\r\n      const mouseUpHandler = function () {\r\n        resizer.style.removeProperty('cursor');\r\n        document.body.style.removeProperty('cursor');\r\n\r\n        leftSide.style.removeProperty('user-select');\r\n        leftSide.style.removeProperty('pointer-events');\r\n\r\n        rightSide.style.removeProperty('user-select');\r\n        rightSide.style.removeProperty('pointer-events');\r\n\r\n        // Remove the handlers of `mousemove` and `mouseup`\r\n        document.removeEventListener('mousemove', mouseMoveHandler);\r\n        document.removeEventListener('mouseup', mouseUpHandler);\r\n      };\r\n\r\n      // Attach the handler\r\n      resizer.addEventListener('mousedown', mouseDownHandler);\r\n    });\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n      // Query the element\r\n      const resizer = document.getElementById('dragMe');\r\n      const leftSide = resizer.previousElementSibling;\r\n      const rightSide = resizer.nextElementSibling;\r\n\r\n      // The current position of mouse\r\n      let x = 0;\r\n      let y = 0;\r\n      let leftWidth = 0;\r\n\r\n      // Handle the mousedown event\r\n      // that's triggered when user drags the resizer\r\n      const mouseDownHandler = function (e) {\r\n        // Get the current mouse position\r\n        x = e.clientX;\r\n        y = e.clientY;\r\n        leftWidth = leftSide.getBoundingClientRect().width;\r\n\r\n        // Attach the listeners to `document`\r\n        document.addEventListener('mousemove', mouseMoveHandler);\r\n        document.addEventListener('mouseup', mouseUpHandler);\r\n      };\r\n\r\n      const mouseMoveHandler = function (e) {\r\n        // How far the mouse has been moved\r\n        const dx = e.clientX - x;\r\n        const dy = e.clientY - y;\r\n\r\n        const newLeftWidth = ((leftWidth + dx) * 100) / resizer.parentNode.getBoundingClientRect().width;\r\n        leftSide.style.width = `${newLeftWidth}%`;\r\n\r\n        resizer.style.cursor = 'col-resize';\r\n        document.body.style.cursor = 'col-resize';\r\n\r\n        leftSide.style.userSelect = 'none';\r\n        leftSide.style.pointerEvents = 'none';\r\n\r\n        rightSide.style.userSelect = 'none';\r\n        rightSide.style.pointerEvents = 'none';\r\n      };\r\n\r\n      const mouseUpHandler = function () {\r\n        resizer.style.removeProperty('cursor');\r\n        document.body.style.removeProperty('cursor');\r\n\r\n        leftSide.style.removeProperty('user-select');\r\n        leftSide.style.removeProperty('pointer-events');\r\n\r\n        rightSide.style.removeProperty('user-select');\r\n        rightSide.style.removeProperty('pointer-events');\r\n\r\n        // Remove the handlers of `mousemove` and `mouseup`\r\n        document.removeEventListener('mousemove', mouseMoveHandler);\r\n        document.removeEventListener('mouseup', mouseUpHandler);\r\n      };\r\n\r\n      // Attach the handler\r\n      resizer.addEventListener('mousedown', mouseDownHandler);\r\n    });\r\n\r\n    return (\r\n      <div className={classnames({\r\n        \"app-wrapper\": true,\r\n      })} style={{display: \"flex\"}}>\r\n        <div>\r\n        <NavbarSelector />\r\n        </div>\r\n        <div class=\"container\" style={{paddingTop:\"5vh\", maxWidth:\"100vw\", height:\"100%\"}}>\r\n          <div class=\"container\" style={{height:\"100%\"}}>\r\n            <Sidebar />\r\n            {/* {appState.graph.hasGraph && <ComDetection />} */}\r\n            <div class=\"outer-container\">\r\n              <div class=\"container-up container\">\r\n                <div class=\"container__left\">\r\n                    {appState.graph.hasGraph && <Tag className=\"network-tag\">Network</Tag>}\r\n                    <main className=\"main\">\r\n                      {appState.graph.hasGraph ? (\r\n                        <ThreeJSVis />\r\n                      ) : (\r\n                        <WorkspaceView />\r\n                      )}\r\n                    </main>\r\n                    {/* {appState.graph.hasGraph && <FloatingCards />} */}\r\n                    <Dialogs />\r\n                </div>\r\n                <div class=\"resizer\" id=\"dragMe\"></div>\r\n                <div class=\"container__right\">\r\n                  {appState.graph.hasGraph ? (\r\n                    <MapView />\r\n                  ) : (\r\n                    <WorkspaceView />\r\n                  )}\r\n                  {/* <h3>{this.mss}</h3> */}\r\n                </div>\r\n              </div>\r\n              <div class=\"resizer-up\" id=\"dragMeUp\"></div>\r\n              <div class=\"container-down container\" id=\"scatter\">\r\n                <div style={{\r\n                  display: \"flex\", height: \"100%\",width: '40vw'\r\n                  // border:'#C0C0C0',\r\n                  // borderStyle:'solid',\r\n                  // flex:\"1 1 50%\"\r\n                }}>\r\n                  {appState.graph.frame && <SelectionDetail />}\r\n                </div>\r\n                <div style={{\r\n                  display: \"flex\", height: \"100%\",\r\n                  // border:'#C0C0C0',\r\n                  // borderStyle:'solid',\r\n                  // flex:\"1 1 50%\"\r\n                }}>\r\n                  {/* {appState.graph.hasGraph && <GraphView />} */}\r\n                  <div id=\"scatter-plot\">\r\n                    {appState.graph.hasGraph && appState.graph.frame && appState.graph.rawGraph.nodes[0].degree !== undefined && < ScatterPlot />}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\n\r\nimport 'normalize.css/normalize.css';\r\nimport '@blueprintjs/core/dist/blueprint.css';\r\nimport '@blueprintjs/table/dist/table.css';\r\nimport './styles/index.css';\r\nimport './styles/w3.css'\r\n\r\n\r\nconst render = () => {\r\n    ReactDOM.render(<App/>, document.getElementById('root'));\r\n};\r\n\r\nrender();"],"sourceRoot":""}